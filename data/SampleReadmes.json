{"@1stg/tsconfig":"# @1stG/configs\n\n[![GitHub Actions](https://github.com/1stG/configs/workflows/Node%20CI/badge.svg)](https://github.com/1stG/configs/actions?query=workflow%3A%22Node+CI%22)\n[![GitHub release](https://img.shields.io/github/release/1stg/configs)](https://github.com/1stg/configs/releases)\n[![Codacy Grade](https://img.shields.io/codacy/grade/ee1a96f680514c038128710a67f7e973)](https://www.codacy.com/gh/1stG/configs)\n[![type-coverage](https://img.shields.io/badge/dynamic/json.svg?label=type-coverage&prefix=%E2%89%A5&suffix=%&query=$.typeCoverage.atLeast&uri=https%3A%2F%2Fraw.githubusercontent.com%2F1stG%2Fconfigs%2Fmaster%2Fpackage.json)](https://github.com/plantain-00/type-coverage)\n[![David Dev](https://img.shields.io/david/dev/1stg/configs.svg)](https://david-dm.org/1stg/configs?type=dev)\n\n[![Conventional Commits](https://img.shields.io/badge/conventional%20commits-1.0.0-yellow.svg)](https://conventionalcommits.org)\n[![Renovate enabled](https://img.shields.io/badge/renovate-enabled-brightgreen.svg)](https://renovatebot.com/)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com)\n[![Code Style: Prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![lerna](https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg)](https://lerna.js.org)\n[![codechecks.io](https://raw.githubusercontent.com/codechecks/docs/master/images/badges/badge-default.svg?sanitize=true)](https://codechecks.io)\n\n> Personal but Shareable Configurations for all 1stG.me projects.\n\n## Changelog\n\nDetailed changes for each release are documented in [CHANGELOG.md](./CHANGELOG.md).\n\n## License\n\n[MIT][] Â© [JounQin][]@[1stG.me][]\n\n[1stg.me]: https://www.1stg.me\n[jounqin]: https://GitHub.com/JounQin\n[mit]: http://opensource.org/licenses/MIT\n","@activecampaign/camp-border":"# @activecampaign/camp-border","@ag-grid-enterprise/range-selection":"\nag-Grid-Enterprise\n==============\n\nThis project contains ag-Grid-Enterprise features.\n\nSee [www.ag-grid.com](http://www.ag-grid.com) for an overview and full documentation.\n\nFrameworks Supported\n====================\nFramework specific Getting Started guides:\n\n[Angular 1](https://www.ag-grid.com/angular-grid/) | [Angular 2](https://www.ag-grid.com/angular-grid/) | [Javascript](https://www.ag-grid.com/javascript-grid/) | [Polymer](https://www.ag-grid.com/best-polymer-data-grid/) | [React](https://www.ag-grid.com/react-grid/) | [TypeScript](https://www.ag-grid.com/ag-grid-building-typescript/) | [VueJS](https://www.ag-grid.com/vuejs-grid/) | [Web Components](https://www.ag-grid.com/best-web-component-data-grid/) | [Aurelia](https://www.ag-grid.com/best-aurelia-data-grid/) \n\nThis is not free software, this software is covered by copyright and to use you need a commercial license.\n\nPlease see files:\nLICENSE.md\nSUPPORT_AND_MAINTENANCE.md\n\nIssue Reporting\n==============\n\nIf you are an Enterprise customer (or are Evaluating ag-Grid Enterprise) and wish to report a Bug or raise a new Feature Request please do so on our [Members Forum](https://ag-grid.com/forum/forumdisplay.php?fid=5).\n\nTo Sign Up:\nSend an email to accounts@ag-grid.com with your license key\n\nBuilding\n==============\n\nTo build:\n- `npm install`\n- `npm install gulp -g`\n- `gulp` or `gulp release`\n","@alifd/theme-6060":"# @alifd/theme-6060\n\nPowered By [Fusion.Design](https://fusion.design/)\n\n[![npm package](https://img.shields.io/npm/v/@alifd/next-theme-webpack-plugin.svg?style=flat-square)](https://www.npmjs.org/package/@alifd/theme-6060)\n\n","@alifd/theme-6823":"# @alifd/theme-6823\n\nPowered By [Fusion.Design](https://fusion.design/)\n\n[![npm package](https://img.shields.io/npm/v/@alifd/next-theme-webpack-plugin.svg?style=flat-square)](https://www.npmjs.org/package/@alifd/theme-6823)\n\n","@angular/router":"Angular\n=======\n\nThe sources for this package are in the main [Angular](https://github.com/angular/angular) repo. Please file issues and pull requests against that repo.\n\nUsage information and reference details can be found in [Angular documentation](https://angular.io/docs).\n\nLicense: MIT\n","@atlaskit/contextual-survey":"# Contextual Survey\n\nThis component is used to ask for feedback from the user, without blocking them from continuing using the product.\n\n## Installation\n\n```sh\nyarn add @atlaskit/contextual-survey\n```\n\n## Usage\n\nDetailed docs and example usage can be found [here](https://atlaskit.atlassian.com/packages/engagement-platform/contextual-survey).\n","@auto-it/omit-release-notes":"# Omit Release Notes Plugin\n\nFilter PRs with release notes that shouldn't make it into a release. By default `auto` will not include and `Release Notes` from [renovate](https://renovatebot.com/) PRs. This plugin allows you to omit more PRs from effecting you releases.\n\n## Installation\n\nThis plugin is not included with the `auto` CLI installed via NPM. To install:\n\n```sh\nnpm i --save-dev @auto-it/omit-release-notes\n# or\nyarn add -D @auto-it/omit-release-notes\n```\n\n## Usage\n\nYarn can omit by most any field available on a PR. Each options accepts either a string or an array of strings.\n\n```json\n{\n  \"plugins\": [\n    [\n      \"omit-release-notes\",\n      {\n        // By usernames\n        \"username\": [\"pdbf\", \"ghost\"],\n        // By name\n        \"name\": \"Adam\",\n        // By emails\n        \"email\": [\"foo@gmail.com\", \"doesnt-exits@yahoo.com\"],\n        // By labels\n        \"labels\": \"grunt-work\"\n      }\n    ]\n  ]\n}\n```\n","@aws-sdk/client-rds-data-browser":"# @aws-sdk/client-rds-data-browser\n\n[![NPM version](https://img.shields.io/npm/v/@aws-sdk/client-rds-data-browser/preview.svg)](https://www.npmjs.com/package/@aws-sdk/client-rds-data-browser)\n[![NPM downloads](https://img.shields.io/npm/dm/@aws-sdk/client-rds-data-browser.svg)](https://www.npmjs.com/package/@aws-sdk/client-rds-data-browser)\n\n## Description\n\n<fullname>Amazon RDS Data Service</fullname>\n<p>Amazon RDS provides an HTTP endpoint to run SQL statements on an Amazon Aurora\nServerless DB cluster. To run these statements, you work with the Data Service\nAPI.</p>\n<p>For more information about the Data Service API, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html\">Using the Data API for Aurora\nServerless</a> in the <i>Amazon Aurora User Guide</i>.</p>\n\n## Installing\n\nTo install the this package using NPM, simply type the following into a terminal window:\n\n```\nnpm install @aws-sdk/client-rds-data-browser\n```\n\n## Getting Started\n\n### Import\n\nThe AWS SDK is modulized by clients and commands in CommonJS modules. To send a request, you only need to import the client(`RDSDataClient`) and the commands you need, for example `BatchExecuteStatementCommand`:\n\n```javascript\n//JavaScript\nconst {\n  RDSDataClient,\n  BatchExecuteStatementCommand\n} = require(\"@aws-sdk/client-rds-data-browser\");\n```\n\n```javascript\n//TypeScript\nimport {\n  RDSDataClient,\n  BatchExecuteStatementCommand\n} from \"@aws-sdk/client-rds-data-browser\";\n```\n\n### Usage\n\nTo send a request, you:\n\n- Initiate client with configuration (e.g. credentials, region). For more information you can refer to the [API reference][].\n- Initiate command with input parameters.\n- Call `send` operation on client with command object as input.\n- If you are using a custom http handler, you may call `destroy()` to close open connections.\n\n```javascript\nconst rDSData = new RDSDataClient({region: 'region'});\n//clients can be shared by different commands\nconst params = {\n  resourceArn: /**a string value*/,\n  secretArn: /**a string value*/,\n  sql: /**a string value*/,\n};\nconst batchExecuteStatementCommand = new BatchExecuteStatementCommand(params);\nrDSData.send(batchExecuteStatementCommand).then(data => {\n    // do something\n}).catch(error => {\n    // error handling\n})\n```\n\nIn addition to using promises, there are 2 other ways to send a request:\n\n```javascript\n// async/await\ntry {\n  const data = await rDSData.send(batchExecuteStatementCommand);\n  // do something\n} catch (error) {\n  // error handling\n}\n```\n\n```javascript\n// callback\nrDSData.send(batchExecuteStatementCommand, (err, data) => {\n  //do something\n});\n```\n\nThe SDK can also send requests using the simplified callback style from version 2 of the SDK.\n\n```javascript\nimport * as AWS from \"@aws-sdk/client-rds-data-browser\";\nconst rDSData = new AWS.RDSData({ region: \"region\" });\nrDSData.batchExecuteStatement(params, (err, data) => {\n  //do something\n});\n```\n\n### Troubleshooting\n\nWhen the service returns an exception, the error will include the exception information, as well as response metadata (e.g. request id).\n\n```javascript\ntry {\n  const data = await rDSData.send(batchExecuteStatementCommand);\n  // do something\n} catch (error) {\n  const metadata = error.$metadata;\n  console.log(\n    `requestId: ${metadata.requestId}\ncfId: ${metadata.cfId}\nextendedRequestId: ${metadata.extendedRequestId}`\n  );\n  /*\nThe keys within exceptions are also parsed. You can access them by specifying exception names:\n    if(error.name === 'SomeServiceException') {\n        const value = error.specialKeyInException;\n    }\n*/\n}\n```\n\n## Getting Help\n\nPlease use these community resources for getting help. We use the GitHub issues for tracking bugs and feature requests and have limited bandwidth to address them.\n\n- Ask a question on [StackOverflow](https://stackoverflow.com/questions/tagged/aws-sdk-js) and tag it with `aws-sdk-js`\n- Come join the AWS JavaScript community on [gitter](https://gitter.im/aws/aws-sdk-js-v3)\n- If it turns out that you may have found a bug, please [open an issue](https://github.com/aws/aws-sdk-js-v3/issues)\n\n## Contributing\n\nThis client code is generated automatically. Any modifications will be overwritten the next time the `@aws-sdk/@aws-sdk/client-rds-data-browser' package is updated. To contribute to SDK you can checkout our [code generator package][].\n\n## License\n\nThis SDK is distributed under the\n[Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0),\nsee LICENSE for more information.\n\n[code generator package]: https://github.com/aws/aws-sdk-js-v3/tree/master/packages/service-types-generator\n[api reference]: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/\n","@axiomzen/cz-adaptor":"# @axiomzen/cz-adaptor\n\n[Commitizen](https://github.com/commitizen/cz-cli) adaptor for consistent commits across codebases. When hooked up to commitizen, you're prompted for some input:\n\n1. Select the type of change\n1. Enter the reference issue\n1. Write a short commit message\n\nHere's an example of the final formatted commit message:\n\n```\nð doc: adds instructions in readme (#21)\n```\n\n## ð§ Setup in your project\n\n1. Initialize commitizen with this adaptor. This will automatically add the required configs to your package.json.\n\n    NPM:\n\n    ```\n    npx commitizen init @axiomzen/cz-adaptor --save-dev --save-exact\n    ```\n\n    Yarn:\n\n    ```\n    npx commitizen init @axiomzen/cz-adaptor --yarn --dev --exact\n    ```\n\n1. Add `commitizen` and `commitlint` to your project.\n\n    NPM:\n\n    ```\n    npm install --save-dev commitizen commitlint husky\n    ```\n\n    Yarn:\n\n    ```\n    yarn add --dev commitizen commitlint husky\n    ```\n\n1. Add scripts for commits.\n\n    ```\n    ...\n    \"scripts\": {\n      \"commit\": \"git-cz\"\n    }\n    ```\n\n1. Add husky hook\n\n    ```\n    ...\n    \"husky\": {\n      \"hooks\": {\n          \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n      }\n    }\n    ```\n\n1. Add `commitlint` config.\n\n    ```\n    echo \"module.exports = { extends: ['@axiomzen/cz-adaptor/commitlint'] };\" > commitlint.config.js\n    ```\n\n## ð·ââï¸ Configuration\n\nThe adaptor supports a few configs that can be added to your project's `package.json`:\n\n```diff\n...\n\n\"config\": {\n  \"commitizen\": {\n-   \"path\": \"./node_modules/@axiomzen/cz-adaptor\"\n+   \"path\": \"./node_modules/@axiomzen/cz-adaptor\",\n+   \"@axiomzen/cz-adaptor\": {\n+     \"issuePrompt\": false\n+   }\n  }\n}\n\n...\n```\n\n### Supported options:\n\n- **issuePrompt**\n  - default: `true`\n  - Toggles whether cz should ask for an issue number.\n- **repos**\n  - default: `[]`\n  - Provide an array of repos that will be given to the user to choose from. By default, only the current repo is shown, though users may enter their own.\n  - For proper linking on GitHub, repos should include the owner: `[\"axiomzen/cz-adaptor\"]`\n  - If no repos are provided, the repo prompt is not shown.\n","@b-flower/bdm-mrocs-packager":"# bdm-mrocs-packager\n\nmrocs packager for b-eden MROCS modules (restitution part)\n\n## Package specifications\n\nsee [specifications.md](./specifications.md)\n\n\n\n## Installation\n\nnpm i @b-flower/bdm-mrocs-packager\n\n## Commands\n\n````\n  init|i -> create param object for packager and store it in mrocsPackager key package.json\n  make|m -> create mrocs archive based on config mrocsPackager in package.json\n````\n\n## Initialization\nInitialization (cmd line) :\n\n````\n  $ npx bdm-mrocs-builder init\n````\n\n## Packager\n\nScript in package.json\n\n````json\n  ...\n  \"pack\": \"bdm-mrocs-builder make\"\n  ...\n````\n\nThen in command line\n\n````\n  $ npm run pack\n````\n\nor `NPX` alternative\n\n````\n  $ npx bdm-mrocs-builder make\n````","@bitmade/dev-tools":"# dev-tools\nA package that contains development tools used at Bitmade.\n","@blueeast/react-native-web-maps":"# react-native-web-maps\n> React Native for Web implementation of react-native-maps\n\n## Getting started\n`$ npm install react-native-web-maps --save`\n\nTo implement `react-native-web-maps` we're using the `react-google-maps` package:\n\n`$ npm install react-google-maps --save`\n\nAlias the package in your webpack config:\n\n```\nresolve: {\n    alias: {\n        'react-native': 'react-native-web',\n        ...\n        'react-native-maps': 'react-native-web-maps',\n    }\n}\n```\n\nYou need to have a Google Maps Javascript API key to use the map, you can get one [here](https://developers.google.com/maps/documentation/javascript/get-api-key).\n\nThen, you should add this script to your index.html:\n``` html\n<script src=\"https://maps.googleapis.com/maps/api/js?key=<YOUR_GOOGLE_API_KEY>\"></script>\n```\n\n## Usage\n\n``` javascript\nimport MapView from 'react-native-maps';\n```\nSee the original [documentation](https://github.com/airbnb/react-native-maps).\n\nThe supported components are `MapView` and `MapView.Marker`.\n\n`MapView`:\n- The supported props are:\n    - `region`\n- The supported events are:\n    - `onRegionChange`\n    - `onRegionChangeComplete`\n    - `onPress`\n\n`MapView.Marker`:\n- The supported props are:\n    - `title`\n    - `description`\n    - `coordinate`\n\n\n## Examples\nSee the [storybook](https://react-native-web-community.github.io/react-native-web-maps/storybook/index.html).\n\n## Contributing\nPRs are welcome!\n","@bouzuya/create-version-module":"# @bouzuya/create-version-module\n\nversion module generator\n\n## Usage\n\n```\nnpm init @bouzuya/version-module src/version.js\n```\n\nor\n\n```\nnpx @bouzuya/create-version-module src/version.js\n```\n\nSee help.\n\n```\nnpx @bouzuya/create-version-module --help\n```\n\n## Example\n\n```\n$ cat package.json\n{ \"version\": \"0.1.0\" }\n\n$ # npx @bouzuya/create-version-module --no-comment src/version.js\n$ npm init @bouzuya/version-module --no-comment src/version.js\n\n$ cat src/version.js\nconst version = '0.1.0';\nexport { version };\n\n$ # supported languages: JavaScript, PureScript, TypeScript\n$ npm init @bouzuya/version-module --language PureScript --no-comment src/version.purs\n\n$ cat src/version.purs\nmodule Version\n  ( version\n  ) where\n\nversion :: String\nversion = \"0.1.0\"\n\n```\n\n## How to build\n\n```bash\nnpm install\n```\n\n## License\n\n[MIT](LICENSE)\n\n## Author\n\n[bouzuya][user] &lt;[m@bouzuya.net][email]&gt; ([https://bouzuya.net/][url])\n\n[user]: https://github.com/bouzuya\n[email]: mailto:m@bouzuya.net\n[url]: https://bouzuya.net/\n","@bs1180/eve":"This repo contains UI components, intended for re-use in my projects.\n\ntodo:\ninstall storybook, for independent development\ninstall jest, for basic testing\nmake styles responsive!\n\nhttps://github.com/chantastic/react-svg-spinner/blob/master/stories/index.js\n\ncomponents:\nonboarding widget\nbig spinner, in a panel?\nsearch typeahead\n...anything you use more than once?\n","@cassette/player":"# @cassette/player\n\n**`@cassette/player`** provides a responsive, zero-config-needed React media player component, implemented with [`@cassette/core`](/packages/core). Its control components can also be consumed directly.\n\n### Installation\n\n```console\nnpm install @cassette/player\n```\n\n#### Player components included:\n\n- `MediaPlayer` - A media player component which plays a provided playlist of media\n- `MediaPlayerControls` - The UI component of `MediaPlayer`, which requires an ancestor `PlayerContextProvider` (and optional ancestor `FullscreenContextProvider`) in order to work\n\n#### Control components included:\n\n- `BackSkipButton` - a button which, when clicked, either skips to the previous track in the playlist or to the beginning of the current playing track, depending upon the currently elapsed time\n- `ForwardSkipButton` - a button which, when clicked, skips to the next track in the playlist\n- `FullscreenButton` - a button which, when clicked, tells the surrounding `FullscreenContextProvider` (if present) to toggle fullscreen mode\n- `MediaProgress` - an interactive media progress bar which can be adjusted by dragging, along with a text overlay of the current track metadata and the elapsed time\n- `MediaProgressDisplay` - a non-interactive version of `MediaProgress`\n- `MuteButton` - a button which, when clicked, toggles whether the media's audio is muted\n- `PlayPauseButton` - a button which, when clicked, toggles whether the media is paused\n- `RepeatButton` - a button which, when clicked, cycles to the next `repeatStrategy` (`none`, `playlist` or `track`)\n- `ShuffleButton` - a button which, when clicked, toggles whether the playlist is being played in specified order or in shuffle order\n- `Spacer` - provides a buffer between control components\n- `VolumeControl` - a `MuteButton` which, when hovered (with a mouse) or initially tapped (on touch screens), displays a bar for adjusting media volume\n\n### Find full documentation [here](https://benwiley4000.github.io/cassette/styleguide/#cassetteplayer)!\n","@chesszebra/zx-pagination":"# zx-pagination\n\n[![Build Status][ico-travis]][link-travis]\n[![Software License][ico-license]](LICENSE.md)\n\n## Installation\n```\nnpm install @chesszebra/zx-pagination --save\n```\n\n## Documentation\n\nFor the full documentation of this project go to https://developers.chesszebra.com\n\n## Security\n\nIf you discover any security related issues, please report them via [HackerOne][link-hackerone].\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n\n[ico-license]: https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square\n[ico-travis]: https://img.shields.io/travis/chesszebra/zx-pagination/master.svg?style=flat-square\n\n[link-travis]: https://travis-ci.org/chesszebra/zx-pagination\n[link-hackerone]: https://hackerone.com/chesszebra\n","@cimpresscloud/ecs-publish":"# ecs-publish\n\necs-publish is infrastructure-as-code for services running in AWS EC2 Container Service (ECS). It enables systematic build, test, and deploy of Docker-based node apps.\n\nSee full documentation at https://ecs-publish.cimpress.cloud\n\n## Installation\n\n```shell\nnpm install @cimpresscloud/ecs-publish --save-dev\n```\n\n## Usage\n\n```shell\n$ ecs-publish --help\n\n  Usage: ecs-publish [options] [command]\n\n\n  Options:\n\n    -V, --version  output the version number\n    -h, --help     output usage information\n\n\n  Commands:\n\n    validate            Validate your ecs-publish.json\n    build               Step 1. Build package locally with docker\n    push                Step 2. Push image to ECR\n    launch              Step 3. Launch image as a service in ECS\n    deploy              Steps 1, 2, and 3 in one command. Build, push, and launch\n    obtain-certificate  Request an ACM certificate for your service, or display a compatible existing one\n    test-launch         Launch image as a standalone task in ECS, confirm it runs for 30 seconds, then stop it\n    unlaunch            Remove the service, target group, and listener rules for the current branch.\n    help [cmd]          display help for [cmd]\n```","@cw-types/bluebird":"# Installation\n \n> First, run `npm install --save @cw-types/bluebird`\n\n\n>Then, you must add `node_modules/@cw-types` to your `tsconifg.json` file, like so:\n```javascript\n    \"typeRoots\": [\n      \"node_modules/@cw-types\",\n      \"node_modules/@types\"\n    ]\n```\n> This will enable the Typescript compiler to find and use this typing since it is not installed under `node_modules/@types`.\n\n> Please note the order is important of the entries in `typeRoots`.  If you want `node_modules/@types` to resolve first then move it up top. \n\n# Summary\n Modified type definitions for `bluebird` `3.5.0`\n that force return values for `then`, `catch` and other\n chaining function that make sense to have return values.\n\n This package contains type definitions for [bluebird](https://github.com/petkaantonov/bluebird).\n\n\n# Credits\nStarting definitions were written by [Leonard Hecker](https://github.com/lhecker).\n\n# Maintainers\nThis project is mainted by [Kavan J. Shaban](https://github.com/kavanshaban) at [Cycloware](https://github.com/cycloware) \n","@daas/model":"# daas-model\n\nWork in progress!\n","@darklight721/reactstrap":"[![reactstrap](https://cloud.githubusercontent.com/assets/399776/13906899/1de62f0c-ee9f-11e5-95c0-c515fee8e918.png)](https://reactstrap.github.io)\n\n[![CDNJS](https://img.shields.io/cdnjs/v/reactstrap.svg)](https://cdnjs.com/libraries/reactstrap) [![NPM Version](https://img.shields.io/npm/v/reactstrap.svg?branch=master)](https://www.npmjs.com/package/reactstrap) [![Build Status](https://travis-ci.org/reactstrap/reactstrap.svg?branch=master)](https://travis-ci.org/reactstrap/reactstrap) [![Coverage Status](https://coveralls.io/repos/github/reactstrap/reactstrap/badge.svg?branch=master)](https://coveralls.io/github/reactstrap/reactstrap?branch=master) [![License](https://img.shields.io/npm/l/reactstrap.svg)](https://github.com/reactstrap/reactstrap/blob/master/LICENSE)\n\n# reactstrap\n\nStateless React Components for Bootstrap 4.\n\n## Getting Started\n\nFollow the [create-react-app instructions](https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md) **up to** the `Adding Bootstrap` section and instead follow the reactstrap version of [adding bootstrap](#adding-bootstrap).\n\n### tl;dr\n\n ```\nnpx create-react-app my-app\ncd my-app/\nnpm start\n```\nor,  if npx (Node >= 6 and npm >= 5.2 ) not available \n\n```\nnpm install -g create-react-app\n\ncreate-react-app my-app\ncd my-app/\nnpm start\n``` \n\nThen open [http://localhost:3000/](http://localhost:3000/) to see your app. The initial structure of your app is setup. Next, let's [add reactstrap and bootstrap](#adding-bootstrap).\n\n### Adding Bootstrap\n\nInstall reactstrap and Bootstrap from NPM. Reactstrap does not include Bootstrap CSS so this needs to be installed as well:\n\n```\nnpm install --save bootstrap\nnpm install --save reactstrap react react-dom\n```\n\nImport Bootstrap CSS in the ```src/index.js``` file:\n\n```js\nimport 'bootstrap/dist/css/bootstrap.css';\n```\n\nImport required reactstrap components within ```src/App.js``` file or your custom component files:\n\n```js\nimport { Button } from 'reactstrap';\n```\n\nNow you are ready to use the imported reactstrap components within your component hierarchy defined in the render\nmethod. Here is an example [`App.js`](https://gist.github.com/Thomas-Smyth/006fd507a7295f17a8473451938f9935) redone\nusing reactstrap.\n\n### Dependencies\n\n##### Required Peer Dependencies\n\nThese libraries are not bundled with Reactstrap and required at runtime:\n\n  * [**react**](https://www.npmjs.com/package/react)\n  * [**react-dom**](https://www.npmjs.com/package/react-dom)\n\n##### Optional Dependencies\n\nThese libraries are not included in the main distribution file `reactstrap.min.js` and need to be manually\nincluded when using components that require transitions or popover effects (e.g. Tooltip, Modal, etc).\n\n  * [**react-transition-group**](https://www.npmjs.com/package/react-transition-group)\n  * [**react-popper**](https://www.npmjs.com/package/react-popper)\n\n\n### CDN\n\nIf you prefer to include Reactstrap globally by marking `reactstrap` as external in your application, the\n`reactstrap` library provides various single-file distributions, which are hosted on the following CDNs:\n\n* [**cdnjs**](https://cdnjs.com/libraries/reactstrap)\n```html\n<!-- Main version -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/reactstrap/6.0.1/reactstrap.min.js\"></script>\n\n<!-- All optional dependencies version -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/reactstrap/6.0.1/reactstrap.full.min.js\"></script>\n```\n\n* [**unpkg**](https://unpkg.com/reactstrap/)\n```html\n<!-- Main version -->\n<script src=\"https://unpkg.com/reactstrap@6.0.1/dist/reactstrap.min.js\"></script>\n\n<!-- All optional dependencies version -->\n<script src=\"https://unpkg.com/reactstrap@6.0.1/dist/reactstrap.full.min.js\"></script>\n```\n\n> **Note**: To load a specific version of Reactstrap replace `6.0.1` with the version number.\n\n#### Versions\n\nReactstrap has two primary distribution versions:\n\n1) `reactstrap.min.js`\n\n    This file **excludes** the optional dependencies â `react-popper` and `react-transition-group`.\n    This is the recommended approach (similar approach in Bootstrap's JavaScript components) for including\n    Reactstrap as it reduces the filesize and gives more flexibility in configuring needed dependencies.\n\n    **Recommended use cases:**\n\n      * Small, medium, or large applications\n      * Applications that do not use any transitions or popper components\n      * Applications that directly use `react-popper` or `react-transition-group` â Reactstrap and your application\n        will use the single global version included\n\n 2) `reactstrap.full.min.js`\n\n    This file **includes** the optional dependencies â `react-popper` and `react-transition-group`\n\n    **Recommended use cases:**\n\n      * Small applications\n\n\n#### Example\n\n```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <!-- Required dependencies -->\n    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/prop-types/15.6.1/prop-types.min.js\"></script>\n    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/react/16.3.2/umd/react.production.min.js\"></script>\n    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/react-dom/16.3.2/umd/react-dom.production.min.js\"></script>\n    <!-- Optional dependencies -->\n    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/react-transition-group/2.2.1/react-transition-group.min.js\"></script>\n    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"></script>\n    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/react-popper/0.10.4/umd/react-popper.min.js\"></script>\n    <!-- Reactstrap -->\n    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/reactstrap/6.0.1/reactstrap.min.js\"></script>\n    <!-- Lastly, include your app's bundle -->\n    <script type=\"text/javascript\" src=\"/assets/bundle.js\"></script>\n  </head>\n  <body>\n    <div id=\"my-app\" />\n  </body>\n</html>\n```\n\n## About the Project\n\nThis library contains React Bootstrap 4 components that favor composition and control. The library does not depend on jQuery or Bootstrap javascript. However, [Poppers.js](https://popper.js.org/) via [react-popper](https://github.com/souporserious/react-popper) is relied upon for advanced positioning of content like Tooltips, Popovers, and auto-flipping Dropdowns.\n\nThere are a few core concepts to understand in order to make the most out of this library.\n\n1. Your content is expected to be composed via props.children rather than using named props to pass in Components.\n\n    ```js\n    // Content passed in via props\n    const Example = (props) => {\n      return (\n        <p>This is a tooltip <TooltipTrigger tooltip={TooltipContent}>example</TooltipTrigger>!</p>\n      );\n    }\n\n    // Content passed in as children (Preferred)\n    const PreferredExample = (props) => {\n      return (\n        <p>\n          This is a <a href=\"#\" id=\"TooltipExample\">tooltip</a> example.\n          <Tooltip target=\"TooltipExample\">\n            <TooltipContent/>\n          </Tooltip>\n        </p>\n      );\n    }\n    ```\n\n2. Attributes in this library are used to pass in state, conveniently apply modifier classes, enable advanced functionality (like tether), or automatically include non-content based elements.\n\n    Examples:\n\n    - `isOpen` - current state for items like dropdown, popover, tooltip\n    - `toggle` - callback for toggling `isOpen` in the controlling component\n    - `color` - applies color classes, ex: `<Button color=\"danger\"/>`\n    - `size` - for controlling size classes. ex: `<Button size=\"sm\"/>`\n    - `tag` - customize component output by passing in an element name or Component\n    - boolean based props (attributes) when possible for alternative style classes or `sr-only` content\n\n\n## [Documentation](https://reactstrap.github.io)\n\nhttps://reactstrap.github.io\n\nDocumentation search is powered by [Algolia's DocSearch](https://community.algolia.com/docsearch/).\n\n## [Contributing](CONTRIBUTING.md)\n\n## Development\n\nInstall dependencies:\n\n```sh\nnpm install\n```\n\nRun examples at [http://localhost:8080/](http://localhost:8080/) with webpack dev server:\n\n```sh\nnpm start\n```\n\nRun tests & coverage report:\n\n```sh\nnpm test\n```\n\nWatch tests:\n\n```sh\nnpm run test-watch\n```\n\n## Releasing\n\n#### Create Release Branch\n\nNote: you must have the `GITHUB_TOKEN` environment variable set to a valid GitHub token with write access to your repo.\n\nTo create a release branch and changelog, run the following command, optionally with a semantic release type (major, minor, patch) (if not provided, it will default to semver (it's best to let it default)):\n\n```bash\n./scripts/release <release-type>\n```\n\nVerify changelog in branch. Create a PR if everything looks good. Merge when tests are green.\n\n#### Tagging and Publishing\n\nNote: you must have write permission to this repo do perform this action\n\nOnce the release branch is merged, checkout master and run:\n\n```bash\n./scripts/publish\n```\n\nThis will build the current state of master, tag it based on the release version and push the tag up to GitHub. Travis will detect the new tag and publish to npm.\n\n_OR_\n\nYou can create a new tag via the GitHub user interface. If you do it this way, make sure to use the correct version as the tag name (eg. `6.2.0`).\n\n## In the wild\n\nOrganizations and projects using `reactstrap`\n\n- [availity-reactstrap-validation](https://availity.github.io/availity-reactstrap-validation/)\n- [component-template](https://reactstrap.github.io/component-template/)\n- [video-react](https://video-react.github.io/)\n- [CoreUI-Free-Bootstrap-Admin-Template](https://github.com/mrholek/CoreUI-Free-Bootstrap-Admin-Template) - [demo](http://coreui.io/demo/React_Demo/#/)\n- [Admin dashboard example app built with reactstrap](https://github.com/reduction-admin/react-reduction) - [demo](https://reduction-admin.firebaseapp.com/)\n- [DevExtreme React Grid](https://devexpress.github.io/devextreme-reactive/react/grid/) - It's a stateless data grid built on top of `reactstrap` with paging, sorting, filtering, grouping, selection, editing and virtual scrolling features.\n- [DevExtreme React Chart](https://devexpress.github.io/devextreme-reactive/react/chart/) - A chart built on top of `reactstrap` that visualizes data using a variety of series types, including bar, line, area, scatter, pie, and more.\n\nSubmit a PR to add to this list!\n\nLooking to build, document and publish reusable components built on top of `reactstrap`? Consider forking https://github.com/reactstrap/component-template to kickstart your project!\n","@donotjs/donot-transform-rollup":"donot-transform-rollup\n==========================\n\n[![Build Status](https://travis-ci.org/donotjs/donot-transform-rollup.svg?branch=master)](https://travis-ci.org/donotjs/donot-transform-rollup)\n\n[rollup](http://npmjs.org/packages/rollup) for [donot](http://github.com/donotjs/donot).\n\n# Usage\n\nUsing the rollup donot transform plug-in is pretty easy.\n\n\tvar http = require('http'),\n\t    donot = require('donot'),\n\t    RollupTransform = require('donot-transform-rollup');\n\n\tvar server = http.createServer(donot(__dirname + '/public', {\n\t\ttransforms: [ new RollupTransform({\n\t\t\t// Options\n\t\t}) ]\n\t}));\n\n\tserver.listen(8000);\n\nNow `.js` files in the `/public` folder will automatically be compiled, rendered and served as rollup compiled versions with the `.rollup.js` extension.\n\n# License\n\nMIT\n","@dvo/raven":"# Raven\n\n## Overview\n### What it does\nRaven is a way to keep state and do data binding. It was made for sites/apps developed in vanilla, without frameworks.\n\n### How to use it\nAfter calling raven.**load**() and passing it your app's state as a single object, you can call the following methods:\n1. **subscribe**(*obj*, *callback*) runs the given callback when the variables indicated by obj change.\n1. **set**(*obj*) is how you change the state of yout app. Changing it directly won't fire callbacks.\n1. **push**(*from*, *to*, *func*) makes it so every change to variable \"from\" is reflected up to state field \"to\", after passing through function \"func\".\n1. **pull**(*from*,*to*, *func*) makes it so every change to state field \"from\" is reflected down to variable \"to\", after passing through function \"func\".\n1. **sync**(*state*,*var*,*statefunc*,*varfunc*) makes it so any changes to store or variable are reflected on each other, having passed through a given function.\n\n---\n\n## How to reference state variables\nIn Raven, you reference your state variables by passing an object that mirrors the \"path\" to that variable. For example, suppose you want to give a value to the variable \"answer\" in the state below:\n\n    state = {\n      universe: {\n        answer: null,\n        question: null\n      }\n    }\n\nYou'd do:\n\n    raven.set({universe: {answer: 42}})\n\nSo far, so simple. But suppose you want to *reference* the variable, and *not provide* the value. In this case, the name of the variable is passed as a string, and no value is passed. For example, to subscribe a callback for changes to variable \"answer\", you'd do:\n\n    raven.subscribe({universe: \"answer\"}, callbackFunction)\n\nThe advantage using objets for referencing that you can point to multiple state properties at once. For example, if you wanted to subscribe to changes to both question and answer in the example above, you'd do:\n\n    raven.subscribe({universe: [\"answer\", \"question\"]}, callbackFunction)\n\nAnd there's still a third way to do references. If the variable you're after is not in the state, you must pass a reference to its parent object and it's property name. For example, to push up the value from input, you could do:\n\n    raven.push({\n        target: document.querySelector(\"#arthurs-brain\"),\n        prop: \"value\"\n      },\n      { universe: \"question\" }\n    )\n\nOnce you take in these referencing rules, using raven will be easy-peasy.\n\n---\n## A deeper view\n### Preparing your store\nCreate a single object containing all your state. You may write it in different objects, but must assemble them in order to be loaded into raven.\n\nTo do so, use the command raven.load(), as in the example below.\n\n    const myState = {\n      location: {\n        country: 'Italy',\n        city: 'Rome'\n      },\n      personal: {\n        name: 'Vivian',\n        favoriteColor: 'yellow',\n        dislikes: [\n          \"loud noise\",\n          \"veggies\"\n        ]\n      }\n\n    raven.load(myState)\n\n### Writing the callbacks\nThe callbacks contain much of the logic of the application. They tend to be very short functions that manipulate the DOM. For example,\n\n    const warnOfColorChange = () => document.querySelector('#warn-output')\n    .textContent = \"The color has changed!\"\n\n### Registering callbacks\nWhen a callback is registered to a property of your state, that callback will fire whenever a change is observed on the target property.\n\nTo register a callback, use raven.register() passing an object to represent which properties to watch and the callback function. In the example below, the callback will run whenever the favoriteColor is modified.\n\n    const callback = (value, old) => \n      console.log(`The favorite color change from ${old} to ${value}.`)\n\n    raven.register({\n      personal: 'favoriteColor'\n      },\n      callback\n    )\n    \nThere are some important things to be aware of:\n1. the object argument has the name of the argument to listen **as a string**, so to watch \"bar\" in {foo: {bar: 42}}, you'd pass {foo: 'bar'}.\n1. Many variables to watch may be passed in a single call. The callback would run whenever any of those change.\n1. The callback will receive as argument the new value.\n\n#### Changing state on complex data\nYou may associate callbacks to entire objects instead of its particular properties. This means a callback will fire if any of its properties are changed.\nExtending the example above, we could rig callback to fire when any dislikes changes by subscribing:\n\n    raven.register({personal: \"dislikes\"}, callback)\n\n#### Subscribing root properties\nBecause you can't create a JS object with a key without value, subscribing a root property is a bit of a gotcha. There's two ways to do it:\n\n1. You can pass it as a string. For example raven.subscribe(\"personal\", callback) would run whenever any personal prop changed.\n1. If you need to pass an object, you can just assign it any value other than an object, array or a string - we recommend 0. So raven.subscribe({personal: 0}, callback) would work just fine.\n\n\n## Changing state\nTo change state, use the method raven.set() passing as parameter an object representing the branches that were modified.\nFor example, consider the call\n\n    raven.set({\n      location: {\n        country: 'Scotland',\n        city: 'Edinburgh'\n      }\n    })\n\nThis will change the state in two positions, country and city, and all callbacks associated with both field will be executed. In fact, any callbacks rigged to 'location' would also fire (once).\n\n","@edpaget/kongfig":"<p align=\"center\">\n    <img src=\"logo.png\">\n</p>\n\n# Kongfig\n\nA tool for [Kong](https://getkong.org/) to allow declarative configuration.\n\nSimply define your list of APIs and consumers in json and then run kongfig to ensure that your Kong is configured correctly.\n\n[![Build Status](https://travis-ci.org/mybuilder/kongfig.svg?branch=master)](https://travis-ci.org/mybuilder/kongfig)\n\n## Install\n\n### Manually\nWe recommend installing Kongfig globally\n\n```\nnpm install -g kongfig\n```\n\n### Puppet\nUse our [Puppet-Kongfig](https://forge.puppetlabs.com/mybuilder/kongfig) module to install and configure Kongfig\n\n```\npuppet module install mybuilder-kongfig\n```\n\n\n## Quick start\n\nYou can follow the [quick start](docs/guide.md) to get going in 5 minutes.\n\n\n## Apply config\n\nYou can have your config in [json](config.json.sample), [yaml](config.yml.sample), or [js](config.js.sample) if you need to support multiple environments.\n\n```\nkongfig apply --path config.yml --host localhost:8001\n```\n\n## Dump config\n\nYou can dump the existing configuration to a file or view it on a screen\n\n```\nkongfig dump --host localhost:8001 > config.yml\n```\n> You can omit the `--host` option if kong is on `localhost:8001` as this is the default value\n\nYou can specify the desired format by giving `--format` option with possible options of `json`, `yaml`, or `screen` that prints the config with colours.\n\n```bash\nkongfig dump --format screen\n```\n\nFor APIs which uses custom consumer credential plugins, specify plugin and id name in <plugin>:<idValue> format with `--credential-schema` option.\n\n```\nkongfig apply --path config.yml --host localhost:8001 --credential-schema custom_jwt:key\n```\n\nFor multiple plugins use --credential-schema as many as necessary\n\n```\nkongfig apply --path config.yml --host localhost:8001 --credential-schema \"custom_jwt:key\" --credential-schema \"custom_oauth2:client_id\"\n```\n\n## Schema\n\nNote: If you change the name of an API/Plugin/Consumer and want to ensure the old one is removed automatically, do not delete or modify the old API/Plugin/Consumer section, other than to add the `ensure: \"removed\"` flag. Examples shown below.\n\n> Notice the `attributes.username` config parameter below, this is used to map given username to consumer uuid\n\nApi schema:\n\n```yaml\napis:\n  - name: mockbin # unique api name\n    ensure: \"present\" # Set to \"removed\" to have Kongfig ensure the API is removed. Default is present.\n    attributes:\n      upstream_url: string # (required)\n      hosts: [string]\n      uris: [string]\n      methods: [\"POST\", \"GET\"]\n      strip_uri: bool\n      preserve_host: bool\n      retries: int\n      upstream_connect_timeout: int\n      upstream_read_timeout: int\n      upstream_send_timeout: int\n      https_only: bool # (required)\n      http_if_terminated: bool\n\n```\n\nApi plugin schema:\n\n```yaml\napis:\n  - name: mockbin # unique api name\n    attributes: # ...\n    plugins:\n      - name: rate-limiting # kong plugin name\n        ensure: \"present\" # Set to \"removed\" to have Kongfig ensure the plugin is removed. Default is present.\n        attributes: # the plugin attributes\n          username: # optional, to reference a consumer, same as consumer_id in kong documentation\n          config:\n\n```\n\nGlobal plugin schema:\n\n```yaml\nplugins:\n  - name: cors\n    attributes:\n      username: # optional, to reference a consumer, same as consumer_id in kong documentation\n      enabled: true\n      config:\n        credentials: false\n        preflight_continue: false\n        max_age: 7000\n```\n\nAll of the kong plugins should be supported if you find one that doesn't work please [add an issue](https://github.com/mybuilder/kongfig/issues/new).\n\nConsumer schema:\n\n```yaml\nconsumers:\n  - username: iphone-app\n    custom_id: foobar-1234 # optional\n```\n\nConsumer credential schema:\n\n```yaml\nconsumers:\n  - username: iphone-app\n    credentials:\n      - name: key-auth\n        attributes: # credential config attributes\n```\n\nConsumer ACL schema:\n\n```yaml\nconsumers:\n  - username: iphone-app\n    acls:\n      - group: acl-group-name\n```\n\n### Supported consumer credentials\n\n> Notice the `anonymous_username` config parameter below, this is used to map username to consumer uuid\n\n[Key Authentication](https://getkong.org/plugins/key-authentication/)\n\n```yaml\napis:\n  - name: mockbin # unique api name\n    attributes: # ...\n    plugins:\n      - name: key-auth\n        attributes:\n          config:\n            anonymous_username: # optional, same as just anonymous in kong api, maps given username to consumer uuid\n            key_names:\n            hide_credentials:\n\nconsumers:\n  - username: iphone-app\n    credentials:\n      - name: key-auth\n        attributes:\n          key: # required\n```\n\n[Basic Authentication](https://getkong.org/plugins/basic-authentication/)\n\n```yaml\napis:\n  - name: mockbin\n    attributes: # ...\n    plugins:\n      - name: basic-auth\n        attributes:\n          config:\n            hide_credentials:\n\nconsumers:\n  - username: iphone-app\n    credentials:\n      - name: basic-auth\n        attributes:\n          username: # required\n          password:\n```\n\n[OAuth 2.0 Authentication](https://getkong.org/plugins/oauth2-authentication/)\n\n```yaml\napis:\n  - name: mockbin\n    attributes: # ...\n    plugins:\n      - name: oauth2\n        attributes:\n          config:\n            scopes:\n            mandatory_scope:\n            token_expiration:\n            enable_authorization_code:\n            enable_client_credentials:\n            enable_implicit_grant:\n            enable_password_grant:\n            hide_credentials:\n\nconsumers:\n  - username: iphone-app\n    credentials:\n      - name: oauth2\n        attributes:\n          name:\n          client_id: # required\n          client_secret:\n          redirect_uri: string | [string] # required by kong\n```\n\n[HMAC Authentication](https://getkong.org/plugins/hmac-authentication/)\n\n```yaml\napis:\n  - name: mockbin\n    attributes: # ...\n    plugins:\n      - name: hmac-auth\n        attributes:\n          config:\n            hide_credentials:\n            clock_skew:\n\nconsumers:\n  - username: iphone-app\n    credentials:\n      - name: hmac-auth\n        attributes:\n          username: # required\n          secret:\n```\n\n[JWT](https://getkong.org/plugins/jwt/)\n\n```yaml\napis:\n  - name: mockbin\n    attributes: # ...\n    plugins:\n      - name: jwt\n        attributes:\n          config:\n            uri_param_names:\n            claims_to_verify:\n\nconsumers:\n  - username: iphone-app\n    credentials:\n      - name: jwt\n        attributes:\n          key: # required\n          secret:\n```\n\n### Custom Credential Schemas\n\nIt is possible to work with custom consumer credential plugins.\n\n```yaml\napis:\n  - name: mockbin\n    attributes: # ...\n    plugins:\n      - name: custom_jwt\n        attributes:\n          config:\n            uri_param_names:\n            claims_to_verify:\n\nconsumers:\n  - username: iphone-app\n    credentials:\n      - name: custom_jwt\n        attributes:\n          key: # required\n          secret:\n\ncredentialSchema:\n  custom_jwt:\n    id: \"key\" # credential id name\n```\n\n\n### ACL Support\n\n[Kong ACL documentation](https://getkong.org/plugins/acl/)\n\n```yaml\napis:\n  - name: mockbin\n    attributes: # ...\n    plugins:\n      - name: \"acl\"\n        ensure: \"present\"\n        attributes:\n          config.whitelist: \"foo-group\"\n\nconsumers:\n  - username: \"some-username\"\n    ensure: \"present\"\n    acls:\n      - group: \"foo-group\"\n        ensure: \"present\"\n\n      - group: \"bar-group\"\n        ensure: \"present\"\n```\n\n### Upstream/Target Schema\n\n[Kong Upstream Load Balancing Reference](https://getkong.org/docs/latest/loadbalancing/)\n\n```yaml\nupstreams:\n  - name: \"mockbinUpstream\"\n    ensure: \"present\"\n    targets:\n      - target: \"server1.mockbin:3001\"\n        attributes:\n          weight: 50\n      - target: \"server2.mockbin:3001\"\n        attributes:\n          weight: 50\n    attributes:\n      slots: 100\n```\n\n### Certificates & SNIs\n\n*A certificate object represents a public certificate/private key pair for an SSL certificate. These objects are used by Kong to handle SSL/TLS termination for encrypted requests. Certificates are optionally associated with SNI objects to tie a cert/key pair to one or more hostnames.*\n\n[Kong Certificate Object Reference](https://getkong.org/docs/0.11.x/admin-api/#certificate-object)\n\n*An SNI object represents a many-to-one mapping of hostnames to a certificate. That is, a certificate object can have many hostnames associated with it; when Kong receives an SSL request, it uses the SNI field in the Client Hello to lookup the certificate object based on the SNI associated with the certificate.*\n\n[Kong SNI Objects Reference](https://getkong.org/docs/0.11.x/admin-api/#sni-objects)\n\n```yaml\ncertificates:\n  - ensure: present\n    cert: >-\n      -----BEGIN CERTIFICATE-----\n      MIIDMjCCAhqgAwIBAgIJAPgRdnOdnX/SMA0GCSqGSIb3DQEBBQUAMBoxGDAWBgNV\n      ....\n    key: >-\n      -----BEGIN RSA PRIVATE KEY-----\n      MIIEpAIBAAKCAQEAo5BpOQY2AV/1L2QEdSip75rHh3Khs2knNtMLIrP26MHyidtX\n      ....\n    snis:\n      - name: example.com\n        ensure: present\n      - name: www.example.com\n        ensure: present\n```\n\n> Notice that SNIs are an list of object e.g. `{ name: example.com, ensure: present }` different Kong api itself where it is a list of hostnames\n\n\n## Migrating from Kong <=0.9 to >=0.10\n\nkongfig translates pre `>=0.10` kong config files automatically when applying them.\n\nSo you can export your config from `<=0.9` kong instance by running:\n\n```bash\nkongfig dump --host kong_9:8001 > config.v9.yml\n```\n\nThen apply it to kong `0.10` instance\n\n```bash\nkongfig apply --path config.v9.yml --host kong_10:8001\n```\n\n`apis` endpoint changed between `<=0.9` and `>=0.10`:\n * `request_host: string` to `hosts: [string]`\n * `request_path: string` to `uris: [string]`\n * `strip_request_path: bool` -> `strip_uri: bool`\n * Adds `methods`, `retries`, `upstream_connect_timeout`, `upstream_read_timeout`, `upstream_send_timeout`, `https_only`, `http_if_terminated`\n\n---\nCreated by [MyBuilder](http://www.mybuilder.com/) - Check out our [blog](http://tech.mybuilder.com/) for more information and our other open-source projects.\n\n## Contributing to Kongfig\n\nWe are very grateful for any contributions you can make to the project.\n\nVisit the [Contributing](CONTRIBUTING.md) documentation for submission guidelines.\n","@egjs/jquery-transform":"# egjs-jquery-transform [![npm version](https://badge.fury.io/js/%40egjs%2Ftransform.svg)](https://badge.fury.io/js/%40egjs%2Ftransform) [![Build Status](https://travis-ci.org/naver/egjs-jquery-transform.svg?branch=master)](https://travis-ci.org/naver/egjs-jquery-transform)  [![Coverage Status](https://coveralls.io/repos/github/naver/egjs-jquery-transform/badge.svg?branch=master)](https://coveralls.io/github/naver/egjs-jquery-transform?branch=master)\n\nA method extended from the jQuery animate() method. It supports CSS transform property and 3D acceleration.\n\n## Documents\n- [Get Started and Demos](https://naver.github.io/egjs-jquery-transform/)\n- [API documentation](https://naver.github.io/egjs-jquery-transform/release/latest/doc/)\n\n## Supported Browsers\nThe following are the supported browsers.\n\n|Internet Explorer|Chrome|Firefox|Safari|iOS|Android|\n|---|---|---|---|---|---|\n|10+|Latest|Latest|Latest|7+|2.3+(except 3.x)|\n\n## Dependency\negjs-jquery-transform has the dependencies for the following libraries:\n\n|[jquery](https://jquery.com)|\n|----|\n|1.7.0+|\n\n\n## Download and Installation\n\nDownload dist files from repo directly or install it via npm. \n\n### For development (Uncompressed)\n\nYou can download the uncompressed files for development\n\n- Latest : https://naver.github.io/egjs-jquery-transform/release/latest/dist/transform.js\n- Specific version : https://naver.github.io/egjs-jquery-transform/release/[VERSION]/dist/transform.js\n\n### For production (Compressed)\n\nYou can download the compressed files for production\n\n- Latest : https://naver.github.io/egjs-jquery-transform/release/latest/dist/transform.min.js\n- Specific version : https://naver.github.io/egjs-jquery-transform/release/[VERSION]/dist/transform.min.js\n\n### Installation with npm\n\nThe following command shows how to install egjs-jquery-transform using npm.\n\n```bash\n$ npm install @egjs/jquery-transform\n```\n\n\n## Bug Report\n\nIf you find a bug, please report it to us using the [Issues](https://github.com/naver/egjs-jquery-transform/issues) page on GitHub.\n\n\n## License\negjs-jquery-transform is released under the [MIT license](http://naver.github.io/egjs/license.txt).\n\n\n```\nCopyright (c) 2015 NAVER Corp.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n```\n","@enounca/socket.io":"\n# enounca/socket.io\n\n[![Build Status](https://secure.travis-ci.org/enounca/socket.io.svg)](http://travis-ci.org/enounca/socket.io)\n![NPM version](https://badge.fury.io/js/socket.io.svg)\n![Downloads](http://img.shields.io/npm/dm/socket.io.svg?style=flat)\n[![](http://slack.socket.io/badge.svg)](http://slack.socket.io)\n\n## How to use\n\nThe following example attaches socket.io to a plain Node.JS\nHTTP server listening on port `3000`.\n\n```js\nvar server = require('http').createServer();\nvar io = require('socket.io')(server);\nio.on('connection', function(socket){\n  socket.on('event', function(data){});\n  socket.on('disconnect', function(){});\n});\nserver.listen(3000);\n```\n\n### Standalone\n\n```js\nvar io = require('socket.io')();\nio.on('connection', function(socket){});\nio.listen(3000);\n```\n\n### In conjunction with Express\n\nStarting with **3.0**, express applications have become request handler\nfunctions that you pass to `http` or `http` `Server` instances. You need\nto pass the `Server` to `socket.io`, and not the express application\nfunction.\n\n```js\nvar app = require('express')();\nvar server = require('http').createServer(app);\nvar io = require('socket.io')(server);\nio.on('connection', function(){ /* â¦ */ });\nserver.listen(3000);\n```\n\n### In conjunction with Koa\n\nLike Express.JS, Koa works by exposing an application as a request\nhandler function, but only by calling the `callback` method.\n\n```js\nvar app = require('koa')();\nvar server = require('http').createServer(app.callback());\nvar io = require('socket.io')(server);\nio.on('connection', function(){ /* â¦ */ });\nserver.listen(3000);\n```\n\n## API\n\n### Server\n\n  Exposed by `require('socket.io')`.\n\n### Server()\n\n  Creates a new `Server`. Works with and without `new`:\n\n  ```js\n  var io = require('socket.io')();\n  // or\n  var Server = require('socket.io');\n  var io = new Server();\n  ```\n\n### Server(opts:Object)\n\n  Optionally, the first or second argument (see below) of the `Server`\n  constructor can be an options object.\n\n  The following options are supported:\n\n  - `serveClient` sets the value for Server#serveClient()\n  - `path` sets the value for Server#path()\n\n  The same options passed to socket.io are always passed to\n  the `engine.io` `Server` that gets created. See engine.io\n  [options](https://github.com/learnboost/engine.io#methods-1)\n  as reference.\n\n### Server(srv:http#Server, opts:Object)\n\n  Creates a new `Server` and attaches it to the given `srv`. Optionally\n  `opts` can be passed.\n\n### Server(port:Number, opts:Object)\n\n  Binds socket.io to a new `http.Server` that listens on `port`.\n\n### Server#serveClient(v:Boolean):Server\n\n  If `v` is `true` the attached server (see `Server#attach`) will serve\n  the client files. Defaults to `true`.\n\n  This method has no effect after `attach` is called.\n\n  ```js\n  // pass a server and the `serveClient` option\n  var io = require('socket.io')(http, { serveClient: false });\n\n  // or pass no server and then you can call the method\n  var io = require('socket.io')();\n  io.serveClient(false);\n  io.attach(http);\n  ```\n\n  If no arguments are supplied this method returns the current value.\n\n### Server#path(v:String):Server\n\n  Sets the path `v` under which `engine.io` and the static files will be\n  served. Defaults to `/socket.io`.\n\n  If no arguments are supplied this method returns the current value.\n\n### Server#adapter(v:Adapter):Server\n\n  Sets the adapter `v`. Defaults to an instance of the `Adapter` that\n  ships with socket.io which is memory based. See\n  [socket.io-adapter](https://github.com/Automattic/socket.io-adapter).\n\n  If no arguments are supplied this method returns the current value.\n\n### Server#origins(v:String):Server\n\n  Sets the allowed origins `v`. Defaults to any origins being allowed.\n\n  If no arguments are supplied this method returns the current value.\n\n### Server#origins(v:Function):Server\n\n  Sets the allowed origins as dynamic function. Function takes two arguments `origin:String` and `callback(error, success)`, where `success` is a boolean value indicating whether origin is allowed or not.\n\n  __Potential drawbacks__:\n  * in some situations, when it is not possible to determine `origin` it may have value of `*`\n  * As this function will be executed for every request, it is advised to make this function work as fast as possible\n  * If `socket.io` is used together with `Express`, the CORS headers will be affected only for `socket.io` requests. For Express can use [cors](https://github.com/troygoode/node-cors/)\n\n\n### Server#sockets:Namespace\n\n  The default (`/`) namespace.\n\n### Server#attach(srv:http#Server, opts:Object):Server\n\n  Attaches the `Server` to an engine.io instance on `srv` with the\n  supplied `opts` (optionally).\n\n### Server#attach(port:Number, opts:Object):Server\n\n  Attaches the `Server` to an engine.io instance that is bound to `port`\n  with the given `opts` (optionally).\n\n### Server#listen\n\n  Synonym of `Server#attach`.\n\n### Server#bind(srv:engine#Server):Server\n\n  Advanced use only. Binds the server to a specific engine.io `Server`\n  (or compatible API) instance.\n\n### Server#onconnection(socket:engine#Socket):Server\n\n  Advanced use only. Creates a new `socket.io` client from the incoming\n  engine.io (or compatible API) `socket`.\n\n### Server#of(nsp:String):Namespace\n\n  Initializes and retrieves the given `Namespace` by its pathname\n  identifier `nsp`.\n\n  If the namespace was already initialized it returns it right away.\n\n### Server#emit\n\n  Emits an event to all connected clients. The following two are\n  equivalent:\n\n  ```js\n  var io = require('socket.io')();\n  io.sockets.emit('an event sent to all connected clients');\n  io.emit('an event sent to all connected clients');\n  ```\n\n  For other available methods, see `Namespace` below.\n\n### Server#close\n\n  Closes socket server\n\n  ```js\n  var Server = require('socket.io');\n  var PORT   = 3030;\n  var server = require('http').Server();\n\n  var io = Server(PORT);\n\n  io.close(); // Close current server\n\n  server.listen(PORT); // PORT is free to use\n\n  io = Server(server);\n  ```\n\n### Server#use\n\n  See `Namespace#use` below.\n\n### Namespace\n\n  Represents a pool of sockets connected under a given scope identified\n  by a pathname (eg: `/chat`).\n\n  By default the client always connects to `/`.\n\n#### Events\n\n  - `connection` / `connect`. Fired upon a connection.\n\n    Parameters:\n    - `Socket` the incoming socket.\n\n### Namespace#name:String\n\n  The namespace identifier property.\n\n### Namespace#connected:Object<Socket>\n\n  Hash of `Socket` objects that are connected to this namespace indexed\n  by `id`.\n\n### Namespace#clients(fn:Function)\n\n  Gets a list of client IDs connected to this namespace (across all nodes if applicable).\n\n  An example to get all clients in a namespace:\n\n  ```js\n  var io = require('socket.io')();\n  io.of('/chat').clients(function(error, clients){\n    if (error) throw error;\n    console.log(clients); // => [PZDoMHjiu8PYfRiKAAAF, Anw2LatarvGVVXEIAAAD]\n  });\n  ```\n\n  An example to get all clients in namespace's room:\n\n  ```js\n  var io = require('socket.io')();\n  io.of('/chat').in('general').clients(function(error, clients){\n    if (error) throw error;\n    console.log(clients); // => [Anw2LatarvGVVXEIAAAD]\n  });\n  ```\n\n  As with broadcasting, the default is all clients from the default namespace ('/'):\n\n  ```js\n  var io = require('socket.io')();\n  io.clients(function(error, clients){\n    if (error) throw error;\n    console.log(clients); // => [6em3d4TJP8Et9EMNAAAA, G5p55dHhGgUnLUctAAAB]\n  });\n  ```\n\n### Namespace#use(fn:Function):Namespace\n\n  Registers a middleware, which is a function that gets executed for\n  every incoming `Socket` and receives as parameter the socket and a\n  function to optionally defer execution to the next registered\n  middleware.\n\n  ```js\n  var io = require('socket.io')();\n  io.use(function(socket, next){\n    if (socket.request.headers.cookie) return next();\n    next(new Error('Authentication error'));\n  });\n  ```\n\n  Errors passed to middleware callbacks are sent as special `error`\n  packets to clients.\n\n### Socket\n\n  A `Socket` is the fundamental class for interacting with browser\n  clients. A `Socket` belongs to a certain `Namespace` (by default `/`)\n  and uses an underlying `Client` to communicate.\n\n### Socket#rooms:Array\n\n  A list of strings identifying the rooms this socket is in.\n\n### Socket#client:Client\n\n  A reference to the underlying `Client` object.\n\n### Socket#conn:Socket\n\n  A reference to the underlying `Client` transport connection (engine.io\n  `Socket` object).\n\n### Socket#request:Request\n\n  A getter proxy that returns the reference to the `request` that\n  originated the underlying engine.io `Client`. Useful for accessing\n  request headers such as `Cookie` or `User-Agent`.\n\n### Socket#id:String\n\n  A unique identifier for the socket session, that comes from the\n  underlying `Client`.\n\n### Socket#emit(name:String[, â¦]):Socket\n\n  Emits an event to the socket identified by the string `name`. Any\n  other parameters can be included.\n\n  All datastructures are supported, including `Buffer`. JavaScript\n  functions can't be serialized/deserialized.\n\n  ```js\n  var io = require('socket.io')();\n  io.on('connection', function(socket){\n    socket.emit('an event', { some: 'data' });\n  });\n  ```\n\n### Socket#join(name:String[, fn:Function]):Socket\n\n  Adds the socket to the `room`, and fires optionally a callback `fn`\n  with `err` signature (if any).\n\n  The socket is automatically a member of a room identified with its\n  session id (see `Socket#id`).\n\n  The mechanics of joining  rooms are handled by the `Adapter`\n  that has been configured (see `Server#adapter` above), defaulting to\n  [socket.io-adapter](https://github.com/Automattic/socket.io-adapter).\n\n### Socket#leave(name:String[, fn:Function]):Socket\n\n  Removes the socket from `room`, and fires optionally a callback `fn`\n  with `err` signature (if any).\n\n  **Rooms are left automatically upon disconnection**.\n\n  The mechanics of leaving rooms are handled by the `Adapter`\n  that has been configured (see `Server#adapter` above), defaulting to\n  [socket.io-adapter](https://github.com/Automattic/socket.io-adapter).\n\n### Socket#to(room:String):Socket\n### Socket#in(room:String):Socket\n\n  Sets a modifier for a subsequent event emission that the event will\n  only be _broadcasted_ to sockets that have joined the given `room`.\n\n  To emit to multiple rooms, you can call `to` several times.\n\n  ```js\n  var io = require('socket.io')();\n  io.on('connection', function(socket){\n    socket.to('others').emit('an event', { some: 'data' });\n  });\n  ```\n\n### Socket#compress(v:Boolean):Socket\n\n  Sets a modifier for a subsequent event emission that the event data will\n  only be _compressed_ if the value is `true`. Defaults to `true` when you don't call the method.\n\n  ```js\n  var io = require('socket.io')();\n  io.on('connection', function(socket){\n    socket.compress(false).emit('an event', { some: 'data' });\n  });\n  ```\n\n### Client\n\n  The `Client` class represents an incoming transport (engine.io)\n  connection. A `Client` can be associated with many multiplexed `Socket`\n  that belong to different `Namespace`s.\n\n### Client#conn\n\n  A reference to the underlying `engine.io` `Socket` connection.\n\n### Client#request\n\n  A getter proxy that returns the reference to the `request` that\n  originated the engine.io connection. Useful for accessing\n  request headers such as `Cookie` or `User-Agent`.\n\n## Debug / logging\n\nSocket.IO is powered by [debug](http://github.com/visionmedia/debug).\nIn order to see all the debug output, run your app with the environment variable\n`DEBUG` including the desired scope.\n\nTo see the output from all of Socket.IO's debugging scopes you can use:\n\n```\nDEBUG=socket.io* node myapp\n```\n\n## License\n\nMIT\n","@femessage/upload-to-ali":"# upload-to-ali\n\n[![Build Status](https://badgen.net/travis/FEMessage/upload-to-ali/master)](https://travis-ci.com/FEMessage/upload-to-ali)\n[![NPM Download](https://badgen.net/npm/dm/@femessage/upload-to-ali)](https://www.npmjs.com/package/@femessage/upload-to-ali)\n[![NPM Version](https://badgen.net/npm/v/@femessage/upload-to-ali)](https://www.npmjs.com/package/@femessage/upload-to-ali)\n[![NPM License](https://badgen.net/npm/license/@femessage/upload-to-ali)](https://github.com/FEMessage/upload-to-ali/blob/master/LICENSE)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/FEMessage/upload-to-ali/pulls)\n[![Automated Release Notes by gren](https://img.shields.io/badge/%F0%9F%A4%96-release%20notes-00B2EE.svg)](https://github-tools.github.io/github-release-notes/)\n\nThis component can upload file to Aliyun-OSS easily.\n\nYou can configure OSS information through environmental variables, customize domain, support multi-selection, limit file size, delete, paste to upload, drag and drop to upload, make files upload simpler.\n\n![](https://i.loli.net/2019/11/15/UZ2P7wR83GiDXky.gif)\n\n[ä¸­æææ¡£](./README-zh.md)\n\n## Table of Contents\n\n- [Feature](#feature)\n- [Links](#links)\n- [Install](#install)\n- [Config](#config)\n- [Dotenv](#dotenv)\n- [Contributing](#contributing)\n- [Contributors](#contributors)\n- [License](#license)\n\n## Feature\n\n- The upload function can be done with little oss configuration\n- Automatically compress pictures before uploading, and loading prompts during uploading, support picture display and deletion\n- With default styles and support customize\n- Can limit the size or the number of files to upload\n- Support paste screenshot to upload\n- Can drag and drop to upload\n- Can preivew img\n- support v-model\n\nYou can only set `action` props, that refers to upload url, the component has a default implement to post data to the url.\n\nYou can set `request` props to customize own upload function.\n\n[â¬Back to Top](#table-of-contents)\n\n## Links\n\n- [docs](https://FEMessage.github.io/upload-to-ali/)\n- [ali oss guide](docs/ali-oss-guide.md)\n\n[â¬ Back to Top](#table-of-contents)\n\n## Install\n\n```bash\nyarn add @femessage/upload-to-ali\n```\n\n[â¬Back to Top](#table-of-contents)\n\n## Dotenv\n\nRecommend using environment variables to configure upload parameters<br />With dotenv, we just need to write the environment variable in `.env`. With CI tools, this can meet the needs of using different configuration in different environments without change the source code.<br />Here are all can passed-in environment variables\n\n```sh\n# .env file\n# these params are all optional\nUPLOAD_ACTION=upload-url\n\nOSS_BUCKET=your-bucket\nOSS_REGION=oss-cn-beijing\nOSS_DIR=oss-dir\nOSS_CUSTOM_DOMAIN=cdn.xxx.com\n```\n\n`dotenv`Â document referenceÂ [https://www.npmjs.com/package/dotenv](https://www.npmjs.com/package/dotenv)\n\n### vue-cli3\n\nvue-cli3 offers an easy solution to replace [process.env](https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F), but it requires a pattern(VUE*APP*\\*) to inject in client side. So we need to use `dotenv-webpack`'s solution.\n\n```js\n// vue.config.js\nconst Dotenv = require('dotenv-webpack')\nmodule.exports = {\n  configureWebpack: {\n    plugins: [new Dotenv()]\n  }\n}\n```\n\n[â¬Back to Top](#table-of-contents)\n\n## Contributing\n\nFor those who are interested in contributing to this project, such as:\n\n- report a bug\n- request new feature\n- fix a bug\n- implement a new feature\n\nPlease refer to our [contributing guide](https://github.com/FEMessage/.github/blob/master/CONTRIBUTING.md).\n\n[â¬ Back to Top](#table-of-contents)\n\n## Contributors\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"http://levy.work\"><img src=\"https://avatars3.githubusercontent.com/u/9384365?v=4\" width=\"100px;\" alt=\"levy\"/><br /><sub><b>levy</b></sub></a><br /><a href=\"https://github.com/FEMessage/upload-to-ali/commits?author=levy9527\" title=\"Code\">ð»</a> <a href=\"https://github.com/FEMessage/upload-to-ali/pulls?q=is%3Apr+reviewed-by%3Alevy9527\" title=\"Reviewed Pull Requests\">ð</a> <a href=\"#infra-levy9527\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">ð</a> <a href=\"#blog-levy9527\" title=\"Blogposts\">ð</a> <a href=\"#ideas-levy9527\" title=\"Ideas, Planning, & Feedback\">ð¤</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Alvin-Liu\"><img src=\"https://avatars0.githubusercontent.com/u/11909145?v=4\" width=\"100px;\" alt=\"Alvin\"/><br /><sub><b>Alvin</b></sub></a><br /><a href=\"https://github.com/FEMessage/upload-to-ali/commits?author=Alvin-Liu\" title=\"Code\">ð»</a> <a href=\"https://github.com/FEMessage/upload-to-ali/pulls?q=is%3Apr+reviewed-by%3AAlvin-Liu\" title=\"Reviewed Pull Requests\">ð</a></td>\n    <td align=\"center\"><a href=\"https://github.com/listars\"><img src=\"https://avatars2.githubusercontent.com/u/20613509?v=4\" width=\"100px;\" alt=\"listars\"/><br /><sub><b>listars</b></sub></a><br /><a href=\"https://github.com/FEMessage/upload-to-ali/commits?author=listars\" title=\"Code\">ð»</a> <a href=\"https://github.com/FEMessage/upload-to-ali/pulls?q=is%3Apr+reviewed-by%3Alistars\" title=\"Reviewed Pull Requests\">ð</a> <a href=\"https://github.com/FEMessage/upload-to-ali/commits?author=listars\" title=\"Documentation\">ð</a></td>\n    <td align=\"center\"><a href=\"https://evila.me\"><img src=\"https://avatars3.githubusercontent.com/u/19513289?v=4\" width=\"100px;\" alt=\"EVILLT\"/><br /><sub><b>EVILLT</b></sub></a><br /><a href=\"https://github.com/FEMessage/upload-to-ali/commits?author=evillt\" title=\"Code\">ð»</a> <a href=\"https://github.com/FEMessage/upload-to-ali/commits?author=evillt\" title=\"Documentation\">ð</a></td>\n    <td align=\"center\"><a href=\"https://donaldshen.github.io/portfolio\"><img src=\"https://avatars3.githubusercontent.com/u/19591950?v=4\" width=\"100px;\" alt=\"Donald Shen\"/><br /><sub><b>Donald Shen</b></sub></a><br /><a href=\"https://github.com/FEMessage/upload-to-ali/commits?author=donaldshen\" title=\"Code\">ð»</a> <a href=\"https://github.com/FEMessage/upload-to-ali/commits?author=donaldshen\" title=\"Documentation\">ð</a> <a href=\"https://github.com/FEMessage/upload-to-ali/commits?author=donaldshen\" title=\"Tests\">â ï¸</a></td>\n    <td align=\"center\"><a href=\"http://67.216.223.155/resume/\"><img src=\"https://avatars3.githubusercontent.com/u/26338853?v=4\" width=\"100px;\" alt=\"OuZuYu\"/><br /><sub><b>OuZuYu</b></sub></a><br /><a href=\"https://github.com/FEMessage/upload-to-ali/issues?q=author%3AOuZuYu\" title=\"Bug reports\">ð</a></td>\n    <td align=\"center\"><a href=\"https://justcodeit.fun\"><img src=\"https://avatars1.githubusercontent.com/u/18013127?v=4\" width=\"100px;\" alt=\"è½»åå¿«é©¬\"/><br /><sub><b>è½»åå¿«é©¬</b></sub></a><br /><a href=\"https://github.com/FEMessage/upload-to-ali/commits?author=xrr2016\" title=\"Documentation\">ð</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://colmugx.github.io\"><img src=\"https://avatars1.githubusercontent.com/u/21327913?v=4\" width=\"100px;\" alt=\"ColMugX\"/><br /><sub><b>ColMugX</b></sub></a><br /><a href=\"https://github.com/FEMessage/upload-to-ali/issues?q=author%3Acolmugx\" title=\"Bug reports\">ð</a></td>\n    <td align=\"center\"><a href=\"https://rexer.wang\"><img src=\"https://avatars2.githubusercontent.com/u/15629940?v=4\" width=\"100px;\" alt=\"Rexer Wang\"/><br /><sub><b>Rexer Wang</b></sub></a><br /><a href=\"https://github.com/FEMessage/upload-to-ali/issues?q=author%3Arexerwang\" title=\"Bug reports\">ð</a></td>\n    <td align=\"center\"><a href=\"http://www.ccc1996.cn\"><img src=\"https://avatars1.githubusercontent.com/u/20502762?v=4\" width=\"100px;\" alt=\"cjf\"/><br /><sub><b>cjf</b></sub></a><br /><a href=\"https://github.com/FEMessage/upload-to-ali/commits?author=cjfff\" title=\"Code\">ð»</a> <a href=\"https://github.com/FEMessage/upload-to-ali/commits?author=cjfff\" title=\"Documentation\">ð</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-enable -->\n<!-- prettier-ignore-end -->\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n\n## License\n\n[MIT](./LICENSE)\n\n[â¬ Back to Top](#table-of-contents)\n","@flamelink/sdk-users-cf":"# @flamelink/sdk-users-cf\n\nThis is the Cloud Firestore users module for the Flamelink JavaScript SDK.\n\n> This package should only be used via the official [flamelink](https://www.npmjs.com/package/flamelink) package.\n","@flykode/simplejs-format":"# simplejsformat\nA simple JS Format Package for Study purposes\n\n\n#Example\n\n```javascript\n'use strict';\n\nconst sjsformat = require('@flykode/simplejs-format');\n\nlet currency001 = new sjsformat.FkNumbers();\n\nconsole.log(currency001.currencyFormat(1000));\n```","@gajus/babel-plugin-graphql-tag":"# babel-plugin-graphql-tag\nBabel plugin that compile GraphQL tagged template strings using [apollographql/graphql-tag](https://github.com/apollographql/graphql-tag)\n","@gngt/core":"Gnucoop Angular Toolkit\n=======\n\nThe sources for this package are in the main [Gnucoop Angular Toolkit](https://github.com/gnucoop/gngt) repo. Please file issues and pull requests against that repo.\n\nLicense: GPLv3","@gormed/chromeless":"# Chromeless\n\n[![npm](https://img.shields.io/npm/v/chromeless.svg)](https://npmjs.com/package/chromeless)\n[![downloads](https://img.shields.io/npm/dm/chromeless.svg)](https://npmjs.com/package/chromeless)\n[![circleci](https://circleci.com/gh/graphcool/chromeless.svg?style=shield)](https://circleci.com/gh/graphcool/workflows/chromeless/tree/master)\n[![codecov](https://codecov.io/gh/graphcool/chromeless/branch/master/graph/badge.svg)](https://codecov.io/gh/graphcool/chromeless)\n[![dependencies](https://david-dm.org/graphcool/chromeless/status.svg)](https://david-dm.org/graphcool/chromeless)\n[![node](https://img.shields.io/node/v/chromeless.svg)]()\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n\nChrome automation made simple. Runs locally or headless on AWS Lambda. (**[See Demo](https://chromeless.netlify.com/)**)\n\n## Chromeless can be used to...\n\n* Run 1000s of **browser integration tests in parallel** â¡ï¸\n* Crawl the web & automate screenshots\n* Write bots that require a real browser\n* *Do pretty much everything you've used __PhantomJS, NightmareJS or Selenium__ for before*\n\n### Examples\n\n* [JSON of Google Results](examples/extract-google-results.js): Google for `chromeless` and get a list of JSON results\n* [Screenshot of Google Results](examples/google-screenshot.js): Google for `chromeless` and take a screenshot of the results\n* [prep](https://github.com/graphcool/prep): Compile-time prerendering for SPA/PWA (like React, Vue...) instead of server-side rendering (SSR)\n* *See the full [examples list](/examples) for more*\n\n## â¶ï¸ Try it out\n\nYou can try out Chromeless and explore the API in the browser-based **[demo playground](https://chromeless.netlify.com/)** ([source](https://github.com/graphcool/chromeless-playground)).\n\n[![](http://i.imgur.com/i1gtCzy.png)](https://chromeless.netlify.com/)\n\n## Contents\n1. [How it works](#how-it-works)\n1. [Installation](#installation)\n1. [Usage](#usage)\n1. [API Documentation](#api-documentation)\n1. [Configuring Development Environment](#configuring-development-environment)\n1. [FAQ](#faq)\n1. [Contributors](#contributors)\n1. [Credits](#credits)\n1. [Help & Community](#help-and-community)\n\n## How it works\n\nWith Chromeless you can control Chrome (open website, click elements, fill out forms...) using an [elegant API](docs/api.md). This is useful for integration tests or any other scenario where you'd need to script a real browser.\n\n### There are 2 ways to use Chromeless\n\n1. Running Chrome on your local computer\n2. Running Chrome on AWS Lambda and controlling it remotely\n\n![](http://imgur.com/2bgTyAi.png)\n\n### 1. Local Setup\n\nFor local development purposes where a fast feedback loop is necessary, the easiest way to use Chromeless is by controlling your local Chrome browser. Just follow the [usage guide](#usage) to get started.\n\n### 2. Remote Proxy Setup\n\nYou can also run Chrome in [headless-mode](https://developers.google.com/web/updates/2017/04/headless-chrome) on AWS Lambda. This way you can speed up your tests by running them in parallel. (In [Graphcool](https://www.graph.cool/)'s case this decreased test durations from ~20min to a few seconds.)\n\nChromeless comes out of the box with a remote proxy built-in - the usage stays completely the same. This way you can write and run your tests locally and have them be executed remotely on AWS Lambda. The proxy connects to Lambda through a Websocket connection to forward commands and return the evaluation results.\n\n## Installation\n```sh\nnpm install chromeless\n```\n\n### Proxy Setup\n\nThe project contains a [Serverless](https://serverless.com/) service for running and driving Chrome remotely on AWS Lambda.\n\n1. Deploy The Proxy service to AWS Lambda. More details [here](serverless#setup)\n2. Follow the usage instructions [here](serverless#using-the-proxy).\n\n\n## Usage\n\nUsing Chromeless is similar to other browser automation tools. For example:\n\n```js\nconst { Chromeless } = require('chromeless')\n\nasync function run() {\n  const chromeless = new Chromeless()\n\n  const screenshot = await chromeless\n    .goto('https://www.google.com')\n    .type('chromeless', 'input[name=\"q\"]')\n    .press(13)\n    .wait('#resultStats')\n    .screenshot()\n\n  console.log(screenshot) // prints local file path or S3 url\n\n  await chromeless.end()\n}\n\nrun().catch(console.error.bind(console))\n```\n\n### Local Chrome Usage\n\nTo run Chromeless locally, you need a recent version of Chrome or Chrome Canary installed (version 60 or greater). By default, chromeless will start Chrome automatically and will default to the most recent version found on your system if there's multiple. You can override this behavior by starting Chrome yourself, and passing a flag of `launchChrome: false` in the `Chromeless` constructor.\n\nTo launch Chrome yourself, and open the port for chromeless, follow this example:\n\n```sh\nalias canary=\"/Applications/Google\\ Chrome\\ Canary.app/Contents/MacOS/Google\\ Chrome\\ Canary\"\ncanary --remote-debugging-port=9222\n```\n\nOr run Chrome Canary headless-ly:\n\n```sh\ncanary --remote-debugging-port=9222 --disable-gpu --headless\n```\n\nOr run Chrome headless-ly on Windows:\n\n```sh\ncd \"C:\\Program Files (x86)\\Google\\Chrome\\Application\"\nchrome --remote-debugging-port=9222 --disable-gpu --headless\n```\n\n### Proxy Usage\n\nFollow the setup instructions [here](serverless#installation).\n\nThen using Chromeless with the Proxy service is the same as running it locally with the exception of the `remote` option.\nAlternatively you can configure the Proxy service's endpoint with environment variables. [Here's how](serverless#using-the-proxy).\n```js\nconst chromeless = new Chromeless({\n  remote: {\n    endpointUrl: 'https://XXXXXXXXXX.execute-api.eu-west-1.amazonaws.com/dev',\n    apiKey: 'your-api-key-here',\n  },\n})\n```\n\n## API Documentation\n\n**Chromeless constructor options**\n- [`new Chromeless(options: ChromelessOptions)`](docs/api.md#chromeless-constructor-options)\n\n**Chromeless methods**\n- [`end()`](docs/api.md#api-end)\n\n**Chrome methods**\n- [`goto(url: string, timeout?: number)`](docs/api.md#api-goto)\n- [`setUserAgent(useragent: string)`](docs/api.md#api-setUserAgent)\n- [`click(selector: string)`](docs/api.md#api-click)\n- [`wait(timeout: number)`](docs/api.md#api-wait-timeout)\n- [`wait(selector: string)`](docs/api.md#api-wait-selector)\n- [`wait(fn: (...args: any[]) => boolean, ...args: any[])`] - Not implemented yet\n- [`clearCache()`](docs/api.md#api-clearcache)\n- [`clearStorage(origin: string, storageTypes: string)`](docs/api.md#api-clearstorage)\n- [`focus(selector: string)`](docs/api.md#api-focus)\n- [`press(keyCode: number, count?: number, modifiers?: any)`](docs/api.md#api-press)\n- [`type(input: string, selector?: string)`](docs/api.md#api-type)\n- [`back()`](docs/api.md#api-back) - Not implemented yet\n- [`forward()`](docs/api.md#api-forward) - Not implemented yet\n- [`refresh()`](docs/api.md#api-refresh) - Not implemented yet\n- [`mousedown(selector: string)`](docs/api.md#api-mousedown)\n- [`mouseup(selector: string)`](docs/api.md#api-mouseup)\n- [`scrollTo(x: number, y: number)`](docs/api.md#api-scrollto)\n- [`scrollToElement(selector: string)`](docs/api.md#api-scrolltoelement)\n- [`setHtml(html: string)`](docs/api.md#api-sethtml)\n- [`setExtraHTTPHeaders(headers: Headers)`](docs/api.md#api-setextrahttpheaders)\n- [`setViewport(options: DeviceMetrics)`](docs/api.md#api-setviewport)\n- [`evaluate<U extends any>(fn: (...args: any[]) => void, ...args: any[])`](docs/api.md#api-evaluate)\n- [`inputValue(selector: string)`](docs/api.md#api-inputvalue)\n- [`exists(selector: string)`](docs/api.md#api-exists)\n- [`screenshot(selector: string, options: ScreenshotOptions)`](docs/api.md#api-screenshot)\n- [`pdf(options?: PdfOptions)`](docs/api.md#api-pdf)\n- [`html()`](docs/api.md#api-html)\n- [`cookies()`](docs/api.md#api-cookies)\n- [`cookies(name: string)`](docs/api.md#api-cookies-name)\n- [`cookies(query: CookieQuery)`](docs/api.md#api-cookies-query) - Not implemented yet\n- [`allCookies()`](docs/api.md#api-all-cookies)\n- [`setCookies(name: string, value: string)`](docs/api.md#api-setcookies)\n- [`setCookies(cookie: Cookie)`](docs/api.md#api-setcookies-one)\n- [`setCookies(cookies: Cookie[])`](docs/api.md#api-setcookies-many)\n- [`deleteCookies(name: string)`](docs/api.md#api-deletecookies)\n- [`clearCookies()`](docs/api.md#api-clearcookies)\n- [`clearInput(selector: string)`](docs/api.md#api-clearInput)\n- [`setFileInput(selector: string, files: string | string[])`](docs/api.md#api-set-file-input)\n\n## Configuring Development Environment\n\n**Requirements:**\n- NodeJS version 8.2 and greater\n\n1) Clone this repository\n2) Run `npm install`\n3) To build: `npm run build`\n\n#### Linking this NPM repository\n\n1) Go to this repository locally\n2) Run `npm link`\n3) Go to the folder housing your chromeless scripts\n4) Run `npm link chromeless`\n\nNow your local chromeless scripts will use your local development of chromeless.\n\n## FAQ\n\n### How is this different from [NightmareJS](https://github.com/segmentio/nightmare), PhantomJS or Selenium?\n\nThe `Chromeless` API is very similar to NightmareJS as their API is pretty awesome. The big difference is that `Chromeless` is based on Chrome in [headless-mode](https://developers.google.com/web/updates/2017/04/headless-chrome), and runs in a serverless function in AWS Lambda. The advantage of this is that you can run hundreds of browsers in parallel, without having to think about parallelisation. Running integration Tests for example is much faster.\n\n### I'm new to AWS Lambda, is this still for me?\n\nYou still can use this locally without Lambda, so yes. Besides that, here is a [simple guide](https://github.com/graphcool/chromeless/tree/master/serverless) on how to set the lambda function up for `Chromeless`.\n\n### How much does it cost to run Chromeless in production?\n\n> The compute price is $0.00001667 per GB-s and the free tier provides 400,000 GB-s. The request price is $0.20 per 1 million requests and the free tier provides 1M requests per month.\n\nThis means you can easily execute > 100.000 tests for free in the free tier.\n\n### Are there any limitations?\n\nIf you're running Chromeless on AWS Lambda, the execution cannot take longer than 5 minutes which is the current limit of Lambda. Besides that, every feature that's supported in Chrome is also working with Chromeless. The maximal number of concurrent function executions is 1000. [AWS API Limits](http://docs.aws.amazon.com/lambda/latest/dg/limits.html)\n\n### Are there commercial options?\n\nAlthough Chromeless is the easiest way to get started running Chrome on Lambda, you may not have time to build and manage your own visual testing toolkit. Commercial options include:\n\n* [Chromatic](http://chromaticqa.com): Visual snapshot regression testing for [Storybook](https://storybook.js.org/).\n\n## Troubleshooting\n### Error: Unable to get presigned websocket URL and connect to it.\nIn case you get an error like this when running the Chromeless client:\n```\n{ HTTPError: Response code 403 (Forbidden)\n    at stream.catch.then.data (/code/chromeless/node_modules/got/index.js:182:13)\n    at process._tickDomainCallback (internal/process/next_tick.js:129:7)\n  name: 'HTTPError',\n...\nError: Unable to get presigned websocket URL and connect to it.\n```\nMake sure that you're running at least version `1.19.0` of [`serverless`](https://github.com/serverless/serverless). It is a known [issue](https://github.com/serverless/serverless/issues/2450), that the API Gateway API keys are not setup correctly in older Serverless versions. Best is to run `npm run deploy` within the project as this will use the local installed version of `serverless`.\n\n### Resource ServerlessDeploymentBucket does not exist for stack chromeless-serverless-dev\nIn case the deployment of the serverless function returns an error like this:\n```\n  Serverless Error ---------------------------------------\n\n  Resource ServerlessDeploymentBucket does not exist for stack chromeless-serverless-dev\n```\nPlease check, that there is no stack with the name `chromeless-serverless-dev` existing yet, otherwise serverless can't correctly provision the bucket.\n\n### No command gets executed\nIn order for the commands to be processed, make sure, that you call one of the commands `screenshot`, `evaluate`, `cookiesGetAll` or `end` at the end of your execution chain.\n\n## Contributors\n\nA big thank you to all contributors and supporters of this repository ð\n\n<a href=\"https://github.com/joelgriffith/\" target=\"_blank\">\n  <img src=\"https://github.com/joelgriffith.png?size=64\" width=\"64\" height=\"64\" alt=\"joelgriffith\">\n</a>\n<a href=\"https://github.com/adieuadieu/\" target=\"_blank\">\n  <img src=\"https://github.com/adieuadieu.png?size=64\" width=\"64\" height=\"64\" alt=\"adieuadieu\">\n</a>\n<a href=\"https://github.com/schickling/\" target=\"_blank\">\n  <img src=\"https://github.com/schickling.png?size=64\" width=\"64\" height=\"64\" alt=\"schickling\">\n</a>\n<a href=\"https://github.com/timsuchanek/\" target=\"_blank\">\n  <img src=\"https://github.com/timsuchanek.png?size=64\" width=\"64\" height=\"64\" alt=\"timsuchanek\">\n</a>\n\n\n<a href=\"https://github.com/Chrisgozd/\" target=\"_blank\">\n  <img src=\"https://github.com/Chrisgozd.png?size=64\" width=\"64\" height=\"64\" alt=\"Chrisgozd\">\n</a>\n<a href=\"https://github.com/criticalbh/\" target=\"_blank\">\n  <img src=\"https://github.com/criticalbh.png?size=64\" width=\"64\" height=\"64\" alt=\"criticalbh\">\n</a>\n<a href=\"https://github.com/d2s/\" target=\"_blank\">\n  <img src=\"https://github.com/d2s.png?size=64\" width=\"64\" height=\"64\" alt=\"d2s\">\n</a>\n<a href=\"https://github.com/emeth-/\" target=\"_blank\">\n  <img src=\"https://github.com/emeth-.png?size=64\" width=\"64\" height=\"64\" alt=\"emeth-\">\n</a>\n<a href=\"https://github.com/githubixx/\" target=\"_blank\">\n  <img src=\"https://github.com/githubixx.png?size=64\" width=\"64\" height=\"64\" alt=\"githubixx\">\n</a>\n<a href=\"https://github.com/hax/\" target=\"_blank\">\n  <img src=\"https://github.com/hax.png?size=64\" width=\"64\" height=\"64\" alt=\"hax\">\n</a>\n<a href=\"https://github.com/Hazealign/\" target=\"_blank\">\n  <img src=\"https://github.com/Hazealign.png?size=64\" width=\"64\" height=\"64\" alt=\"Hazealign\">\n</a>\n<a href=\"https://github.com/joeyvandijk/\" target=\"_blank\">\n  <img src=\"https://github.com/joeyvandijk.png?size=64\" width=\"64\" height=\"64\" alt=\"joeyvandijk\">\n</a>\n<a href=\"https://github.com/liady/\" target=\"_blank\">\n  <img src=\"https://github.com/liady.png?size=64\" width=\"64\" height=\"64\" alt=\"liady\">\n</a>\n<a href=\"https://github.com/matthewmueller/\" target=\"_blank\">\n  <img src=\"https://github.com/matthewmueller.png?size=64\" width=\"64\" height=\"64\" alt=\"matthewmueller\">\n</a>\n<a href=\"https://github.com/seangransee/\" target=\"_blank\">\n  <img src=\"https://github.com/seangransee.png?size=64\" width=\"64\" height=\"64\" alt=\"seangransee\">\n</a>\n<a href=\"https://github.com/sorenbs/\" target=\"_blank\">\n  <img src=\"https://github.com/sorenbs.png?size=64\" width=\"64\" height=\"64\" alt=\"sorenbs\">\n</a>\n<a href=\"https://github.com/toddwprice/\" target=\"_blank\">\n  <img src=\"https://github.com/toddwprice.png?size=64\" width=\"64\" height=\"64\" alt=\"toddwprice\">\n</a>\n<a href=\"https://github.com/vladgolubev/\" target=\"_blank\">\n  <img src=\"https://github.com/vladgolubev.png?size=64\" width=\"64\" height=\"64\" alt=\"vladgolubev\">\n</a>\n\n\n\n\n## Credits\n\n* [chrome-remote-interface](https://github.com/cyrus-and/chrome-remote-interface): Chromeless uses this package as an interface to Chrome\n* [serverless-chrome](https://github.com/adieuadieu/serverless-chrome): Compiled Chrome binary that runs on AWS Lambda (Azure and GCP soon, too.)\n* [NightmareJS](https://github.com/segmentio/nightmare): We draw a lot of inspiration for the API from this great tool\n\n\n<a name=\"help-and-community\" />\n\n## Help & Community [![Slack Status](https://slack.graph.cool/badge.svg)](https://slack.graph.cool)\n\nJoin our [Slack community](http://slack.graph.cool/) if you run into issues or have questions. We love talking to you!\n\n[![](http://i.imgur.com/5RHR6Ku.png)](https://www.graph.cool/)\n","@helios-interactive/garuda-js":"# Garuda\n> Config Manager\n\nGaruda loads configuration for apps from the file `/garuda.config.json`.\n\nAdditionally, if a the file `/garuda.local.config.json` is found, settings in that file will be merged into the configuration loaded from `/garuda.config.json`.\n\n## Functions and Methods\n\n### garuda()\nAlias of garuda.set()\n\n### garuda.get([prop], [options]) â `Promise.<Object>`\nGet a property from garuda. All keys are found by string.\ngaruda.get('path.to.property.at.index.2')\n\n**Returns**: `Promise.<Object>` - - A promise containing the config  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| [prop] | `string` OR `Object` | string - namespacecd property, OR options object |\n| [options] | `Object` | options object |\n\n### garuda.set(propOrVal, value) â `Promise.<Object>`\nSet a property or properties\n\n**Returns**: `Promise.<Object>` - - A promise containing the updated config object  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| propOrVal | `string` OR `Object` | string: namespaced property OR val: config object |\n| value | `\\*` | when first parameter is a string, sets specified property to this string |\n\n\n### garuda.retrieveLocalStorage() â `Object`\nRetrieves config from local storage\n\n**Returns**: `Object` - - config as stored in local storage  \n\n### garuda.clearLocalStorage()\nClears garuda local storage and resets config to configs loaded from server.\nNote: When config is changed through `garuda.set()` it automatically saved\nto local storage. Clearing local storage reverts garuda to configs loaded\nfrom the server.\n\n## Events\n### `garuda-updated`\nEvery time the config is updated using `garuda.set()` or it's alias, Garuda dispatches an the event `garuda-updated` on the `document`. The event parameter sent to the callback function of the event listener contains a `details` property that includes an object detailing the updates.\n\n```\ndocument.addEventListener('garuda-updated', (e) => {\n  const updates = e.detail;\n  console.log(updates);\n});\n```\n","@hydrofoil/hydrofoil-paper-shell":"# hydrofoil-paper-shell\n\nA reusable [material design][mat] application shell, implemented as a [Polymer][Polymer] element. It composes\nPolymer's `paper` elements .\n\n[Polymer]: https://polymer-library.polymer-project.org\n[mat]: https://material.io\n\n## Installation\n\n```\nyarn add @hydrofoil/hydrofoil-paper-shell\n```\n\nTo bundle with webpack, dynamic imports must also be enabled by adding `@babel/plugin-syntax-dynamic-import`.\n\n## Usage\n\nThe shell element itself is API-agnostic. It produces the app skeleton but does not load resources from the\nback-end. Please check the instructions of [hydrofoil-shell](https://github.com/hypermedia-app/hydrofoil-shell#using-the-element)\n\n### Extending\n\nHere's a live `hydrofoil-paper-shell`-based application in action\n\n\nThere are a number of slots, as shown on the screenshots below, which can be used to extend the shell:\n\n1. `drawer-left`\n1. `header`\n1. `shell-ready`\n1. `loader`\n1. `toolbar-main`\n1. `drawer-right`\n\n![generic app](https://github.com/hypermedia-app/hydrofoil-paper-shell/raw/master/assets/paper-shell.png)\n![generic app](https://github.com/hypermedia-app/hydrofoil-paper-shell/raw/master/assets/drawer-right.png)\n\nTo add multiple toolbar, use code like `<app-toolbar slot=\"drawer-left\">`. Above this is how the \"Select Hydra API\" dropdown is added to the page.\n\nThe slot `shell-ready` is only displayed initially, before any resource is loaded from the API.\n\nThe slot `loader` is used inside a full-scree overlay, displayed while executing a server request.\n\n## Helper elements\n\n### `<hydrofoil-resource-accordion>`\n\nImplementation of [HydrofoilMultiResourceView](https://github.com/hypermedia-app/hydrofoil-shell#hydrofoil-multi-resource-view)\nwhich displays only one element in stack of collapsible panels\n\n### `<hydrofoil-resource-tabs>`\n\nImplementation of [HydrofoilMultiResourceView](https://github.com/hypermedia-app/hydrofoil-shell#hydrofoil-multi-resource-view)\nwhich displays only one element inside `<paper-tabs>` element.\n\n### `<loading-overlay>`\n\nContainer for the `loader` slot. Displayed as full-screen overlay when the resource is being loaded.\n\n### `<hydrofoil-address-bar>`\n\nBrowser-like textbox, which can be used to manully type the resource identifier. Shown in the `header` slot above.\n\n### `<alcaeus-entrypoint-menu>`\n\nMain menu, which displays `paper-item` element for [Hydra entrypoint links](https://alcaeus.hydra.how/latest/api-documentation/entrypoint.html)\n","@infinitecsolutions/semantic-ui-less-module-loader":"# semantic-ui-less-module-loader\n\nWebpack loader for semantic-ui-less modules\nCan be used with [semantic-ui-react-less-loader](https://github.com/gadyonysh/semantic-ui-react-less-loader).\n\n## Usage\n\n### Installation\n\n```js\nnpm install semantic-ui-react semantic-ui-less --save-dev\nnpm install semantic-ui-less-module-loader --only=dev\n```\n\n### Configuration\n\nAdd to your root js component:\n\n```js\nimport 'semantic-ui-less/definitions/globals/reset.less';\nimport 'semantic-ui-less/definitions/globals/site.less';\n```\n\nAdd loaders for semantic-ui-less modules and it's assets in your webpack config:\n\n#### For webpack v.1\n```js\nmodule: {\n  loaders: [\n\n    // less-loader\n    {\n      test: /\\.less$/,\n      loader: ExtractTextPlugin.extract('style', 'css?!postcss!semantic-ui-less-module'),\n      include: [/[\\/\\\\]node_modules[\\/\\\\]semantic-ui-less[\\/\\\\]/]\n    },\n\n    // loader for static assets\n    {\n      test: /\\.(png|jpg|jpeg|gif|svg)$/,\n      loader: 'url?limit=10240&absolute&name=images/[path][name]-[hash:7].[ext]',\n      include: [/[\\/\\\\]node_modules[\\/\\\\]semantic-ui-less[\\/\\\\]/]\n    },\n    {\n      test: /\\.(woff|woff2|ttf|svg|eot)$/,\n      loader: 'url?limit=10240&name=fonts/[name]-[hash:7].[ext]',\n      include: [/[\\/\\\\]node_modules[\\/\\\\]semantic-ui-less[\\/\\\\]/]\n    }\n  ]\n},\n\n// you can also add specific options:\nsemanticUiLessModuleLoader: {\n  siteFolder: path.join(__dirname, 'src/site'),\n},  \n  \n```\n\n#### For webpack v.2\n\n```js\n\nmodule: {\n      rules: [\n\n        // for .less files:\n        {\n          test: /\\.less$/,\n          use: ExtractTextPlugin.extract({\n            fallback: 'style-loader',\n            use: [\n              { loader: 'css-loader' },\n              { loader: 'less-loader' }\n            ]\n          }),\n          exclude: [/[\\/\\\\]node_modules[\\/\\\\]semantic-ui-less[\\/\\\\]/]\n        },\n\n        // for semantic-ui-less files:\n        {\n          test: /\\.less$/,\n          use: ExtractTextPlugin.extract({\n            fallback: 'style-loader',\n            use: [\n              { loader: 'css-loader' },\n              {\n                loader: 'semantic-ui-less-module-loader',\n                // you can also add specific options:\n                options: { siteFolder: path.join(__dirname, 'src/site') }\n              }\n            ]\n          }),\n          include: [/[\\/\\\\]node_modules[\\/\\\\]semantic-ui-less[\\/\\\\]/]\n        },\n\n        // loader for static assets\n        {\n          test: /\\.(png|jpg|jpeg|gif|svg)$/,\n          use: {\n            loader: 'url-loader',\n            options: {\n              limit: 10240,\n              absolute: true,\n              name: 'images/[path][name]-[hash:7].[ext]'\n            }\n          },\n          include: [path.join(__dirname, 'src'), /[\\/\\\\]node_modules[\\/\\\\]semantic-ui-less[\\/\\\\]/]\n        }, {\n          test: /\\.(woff|woff2|ttf|svg|eot)$/,\n          use: {\n            loader: 'url-loader',\n            options: {\n              limit: 10240,\n              name: 'fonts/[name]-[hash:7].[ext]'\n            }\n          },\n          include: [path.join(__dirname, 'src'), /[\\/\\\\]node_modules[\\/\\\\]semantic-ui-less[\\/\\\\]/]\n        }\n      ]\n    }\n```\n\n### Loader options\n\n- defaultFolder (default: /path/to/node_modules/semantic-ui-less)\n- siteFolder (default: ${defaultFolder}/_site)\n- definitionsFolder (default: ${defaultFolder}/definitions)\n- themesFolder (default: ${defaultFolder}/themes)\n- themeConfigPath (default: ${defaultFolder}/theme.config.example)\n- themePath (default: ${defaultFolder}/theme.less)\n\n#### To fix flag @spritePath in default theme:\n\nAdd to your site/elements/flag.variables:\n\n```less\n\n@spritePath: \"../../themes/default/assets/images/flags.png\";\n\n```\n\n#### To fix https://github.com/Semantic-Org/Semantic-UI-LESS/issues/14\n\nAdd to your site/globals/site.variables:\n\n```less\n\n@imagePath : '../assets/images';\n@fontPath  : '../assets/fonts';\n\n```\n","@inlight/react-native":"# [React Native](https://facebook.github.io/react-native/) &middot;  [![Circle CI Status](https://circleci.com/gh/facebook/react-native.svg?style=shield)](https://circleci.com/gh/facebook/react-native) [![npm version](https://badge.fury.io/js/react-native.svg)](https://badge.fury.io/js/react-native) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](CONTRIBUTING.md#pull-requests)\n\nLearn once, write anywhere: Build mobile apps with React.\n\n- **Build native mobile apps using JavaScript and React:** React Native lets you build mobile apps using only JavaScript. It uses the same design as [React](https://facebook.github.io/react), letting you compose a rich mobile UI from declarative components.\n- **A React Native app is a real mobile app:** With React Native, you don't build a \"mobile web app\", an \"HTML5 app\", or a \"hybrid app\". You build a real mobile app that's indistinguishable from an app built using Objective-C, Java, or Swift. React Native uses the same fundamental UI building blocks as regular iOS and Android apps. You just put those building blocks together using JavaScript and React.\n- **Don't waste time recompiling:** React Native lets you build your app faster. Instead of recompiling, you can reload your app instantly. With hot reloading, you can even run new code while retaining your application state. Give it a try - it's a magical experience.\n- **Use native code when you need to:** React Native combines smoothly with components written in Objective-C, Java, or Swift. It's simple to drop down to native code if you need to optimize a few aspects of your application. It's also easy to build part of your app in React Native, and part of your app using native code directly - that's how the Facebook app works.\n\nThe focus of React Native is on developer efficiency across all the platforms you care about - learn once, write anywhere. Facebook uses React Native in multiple production apps and will continue investing in React Native.\n\nSee the official [React Native website](https://facebook.github.io/react-native/) for an introduction to React Native.\n\nSupported operating systems are >= Android 4.1 (API 16) and >= iOS 8.0.\n\n- [Getting Started](#getting-started)\n- [Documentation](#documentation)\n- [Upgrading](#upgrading)\n- [Contributing](#contributing)\n- [License](#license)\n\n---\n\n## Getting Started\n\nFollow the [Getting Started guide](https://facebook.github.io/react-native/docs/getting-started.html). The recommended way to install React Native depends on your project. Here you can find short guides for the most common scenarios:\n\n- [Trying out React Native](https://snack.expo.io/BJ-uC-nrb)\n- [Creating a New Application](https://facebook.github.io/react-native/docs/getting-started.html)\n- [Adding React Native to an Existing Application](https://facebook.github.io/react-native/docs/integration-with-existing-apps.html)\n\n---\n\n## Documentation\n\n[The websiteâs documentation](https://facebook.github.io/react-native/docs/getting-started.html) is divided into multiple sections.\n- There are **Guides** that discuss topics like [debugging](https://facebook.github.io/react-native/docs/debugging.html), [integrating with existing apps](https://facebook.github.io/react-native/docs/integration-with-existing-apps.html), and [the gesture responder system](https://facebook.github.io/react-native/docs/gesture-responder-system.html).\n- The **Components** section covers React components such as [`View`](https://facebook.github.io/react-native/docs/view.html) and [`Button`](https://facebook.github.io/react-native/docs/button.html).\n- The **APIs** section covers other libraries like [Animated](https://facebook.github.io/react-native/docs/animated.html) and [StyleSheet](https://facebook.github.io/react-native/docs/stylesheet.html) that arenât React components themselves.\n- Finally, React Native provides a small number of **Polyfills** that offer web-like APIs.\n\nAnother great way to learn more about the components and APIs included with React Native is to read their source. Look under the `Libraries/Components` directory for components like `ScrollView` and `TextInput`, for example. The RNTester example is also here to demonstrate some of the ways to use these components. From the source you can get an accurate understanding of each componentâs behavior and API.\n\nThe React Native documentation only discusses the components, APIs and topics specific to React Native (React on iOS and Android). For further documentation on the React API that is shared between React Native and React DOM, refer to the [React documentation](https://facebook.github.io/react/).\n\n---\n\n## Upgrading\n\nReact Native is under active development. See the guide on [upgrading React Native](https://facebook.github.io/react-native/docs/upgrading.html) to keep your project up-to-date.\n\n---\n\n## Contributing\n\nRead below to learn how you can take part in improving React Native.\n\n### [Code of Conduct](https://code.facebook.com/codeofconduct)\n\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read [the full text](https://code.facebook.com/codeofconduct) so that you can understand what actions will and will not be tolerated.\n\n### Contributing Guide\n\nRead our [contributing guide](https://facebook.github.io/react-native/docs/contributing.html) to learn about our development process, how to propose bug fixes and improvements, and how to build and test your changes to React Native.\n\n### Beginner Friendly Bugs\n\nWe have a list of [beginner friendly issues](https://github.com/facebook/react-native/labels/Good%20first%20issue) to help you get your feet wet in the React Native codebase and familiar with our contribution process. This is a great place to get started.\n\n---\n\n## License\n\nReact Native is [MIT licensed](./LICENSE).\n\nReact Native documentation is [Creative Commons licensed](./LICENSE-docs).\n\n---\n\n<img src=\"https://avatars2.githubusercontent.com/u/69631?s=200&v=4\" width=\"50\"></img>\n","@ionic-native-mocks/image-resizer":"# Ionic Native Mocks\n\nIonic Native Mocks are designed to be used as placeholders during development for the actual Ionic Native modules. [Ionic Native](https://github.com/ionic-team/ionic-native) is a curated set of wrappers for [Apache Cordova](https://cordova.apache.org/) plugins that make adding any native functionality you need to your [Ionic](https://ionicframework.com/) mobile application easier.\n\nIonic Native wraps plugin callbacks in a Promise or Observable, providing a common interface for all plugins and making it easy to use plugins with Angular change detection.\n\nHowever, once you integrate these plugins into your Ionic application, use of a device or emulator is required for development and testing which can slow your workflow.\n\n## Installation\n\nThis project allows developers to use Ionic Native Mocks in place of the actual Ionic Native modules. They can be installed in via to methods. \n1) via npm: Installing these prebuilt mocks is easy but they are not easily customized.\n2) via GitHub and manually added to your Ionic project: Installing this way means the mocks can be customized to return specific data, like a specific parsing of a QR code.\n\n### Installation via npm\n\nRun following command to install a Ionic Native Mock into your project.\n```bash\nnpm install @ionic-native-mocks/[plug-in] --save\n```\n\nFor instance, to install the camera mock:\n```bash\nnpm install @ionic-native-mocks/camera --save\n```\n\nYou also need to install the Ionic Native package for each plugin you want to add. Please see the [Ionic Native documentation](https://ionicframework.com/docs/native/) for complete instructions on how to add and use the plugins.\n\n## Documentation\n\nFor the full Ionic Native documentation, please visit [https://ionicframework.com/docs/native/](https://ionicframework.com/docs/native/).\n\n### Basic Usage\n\nTo use a plugin, import and add the plugin provider to your `@NgModule`, and then inject it where you wish to use it.\n\n```typescript\n// app.module.ts\nimport { Camera } from '@ionic-native/camera';\nimport { CameraMock } from '@ionic-native-mocks/camera';\n...\n\n@NgModule({\n  ...\n\n  providers: [\n    ...\n    { provide: Camera, useClass: CameraMock }\n    ...\n  ]\n  ...\n})\nexport class AppModule { }\n```\n\n```typescript\nimport { Platform } from 'ionic-angular';\nimport { Camera, CameraOptions } from '@ionic-native/camera';\n\n@Component({ ... })\nexport class MyComponent {\n\n  constructor(private camera: Camera, private platform: Platform) {\n\n    platform.ready().then(() => {\n\n      const options: CameraOptions = {\n        quality: 100,\n        destinationType: this.camera.DestinationType.DATA_URL,\n        encodingType: this.camera.EncodingType.JPEG,\n        mediaType: this.camera.MediaType.PICTURE\n      }\n\n      this.camera.getPicture(options).then((imageData) => {\n        // imageData is either a base64 encoded string or a file URI\n        // If it's base64:\n        console.log(imageData);\n        let base64Image = 'data:image/jpeg;base64,' + imageData;\n      }, (err) => {\n        // Handle error\n      });\n    });\n  }\n}\n```\n### Customization\nTo learn how to customize an Ionic Native Mock, see the guide at: https://chrisgriffith.wordpress.com/2017/08/21/customizing-ionic-native-mocks/ (https://chrisgriffith.wordpress.com/2017/08/21/customizing-ionic-native-mocks/)\n\n## Missing a mock? Found a problem?  \nLet us know or submit a PR!\n\n# Credits\n\nChris Griffith - [@chrisgriffith](https://github.com/chrisgriffith)\n\nLeif Wells - [@leifwells](https://github.com/leifwells)\n","@ironfly/lru-diskcache":"# lru-diskcache\r\n\r\nModified from GitbookIO lru-diskcache to fix npm audit issues. Test coverage is low on this, recommend using the original lru-diskcache.\r\n\r\n[![Build Status](https://travis-ci.org/GitbookIO/lru-diskcache.svg?branch=master)](https://travis-ci.org/GitbookIO/lru-diskcache)\r\n\r\nA disk cache object that deletes the least-recently-used items. Based on [lru-cache](https://github.com/isaacs/node-lru-cache).\r\n\r\n### Usage\r\n\r\n```js\r\nvar LRU = require(\"lru-diskcache\")\r\n\r\nvar cache = LRU('./cache', {\r\n    max: 50\r\n});\r\n\r\ncache.init()\r\n\r\ncache.set(\"myfile.md\", \"A string content\")\r\ncache.get(\"file\").then(function() { ... }) // Buffer(\"A string content\")\r\n\r\n// with a buffer or stream\r\ncache.set(\"image.png\", new Buffer([ ... ]))\r\ncache.set(\"index.html\", request.get(\"https://www.google.fr\"))\r\n\r\ncache.reset()    // empty the cache\r\n```\r\n\r\nIf you put more stuff in it, then items will fall out.\r\n\r\nIf you try to put an oversized thing in it, then it'll fall out right away.\r\n\r\n### API\r\n\r\n```js\r\n// Initialize the cache\r\ncache.init()\r\n\r\n// Get content as a buffer (return a promise)\r\ncache.get(key)\r\n\r\n// Get content as a string\r\ncache.get(key, { encoding: 'utf8' })\r\n\r\n// Get content as a stream (return a promise)\r\ncache.getStream(key)\r\n\r\n// Check if a key is in the cache, without updating the recent-ness or deleting it for being stale.\r\ncache.has(key)\r\n\r\n// Delete a key from the cache\r\ncache.del(key)\r\n\r\n// Return total length of objects in cache taking into account\r\ncache.size()\r\n\r\n// Manually iterates over the entire cache proactively pruning old entries\r\ncache.prune()\r\n```\r\n","@jamestalmage/babel-template":"# babel-template\n\n> Generate an AST from a string template.\n\n## Install\n\n```sh\n$ npm install babel-template\n```\n\n## Usage\n\n```js\nimport template from 'babel-template';\nimport generate from 'babel-generator';\nimport * as t from 'babel-types';\n\nconst buildRequire = template(`\n  var IMPORT_NAME = require(SOURCE);\n`);\n\nconst ast = buildRequire({\n  IMPORT_NAME: t.identifier('myModule'),\n  SOURCE: t.stringLiteral('my-module')\n});\n\nconsole.log(generate(ast).code);\n```\n\n```js\nvar myModule = require('my-module');\n```\n","@jasonhk/eslint-config-types":"@jasonhk/eslint-config-types\n============================\n\nA type declaration file for building type guard of [ESLint][eslint-website] rule set.\n\n[![npm-version-badge]][npm-package] [![npm-download-badge]][npm-package] [![github-license-badge]][github-license]\n\n## Installation\n\n```sh\n$ npm i @jasonhk/is-null-like\n```\n\n<!-- ## Usage -->\n\n## License\n\n[The Unlicense][github-license] &#127279; [Jason Kwok][jasonhk-github]\n\n[jasonhk-github]: https://github.com/JasonHK\n\n[github-license]: https://github.com/JasonHK/eslint-config-types/blob/master/LICENSE\n[github-license-badge]: https://img.shields.io/github/license/JasonHK/eslint-config-types?style=flat-square\n\n[npm-package]: https://www.npmjs.com/package/@jasonhk/eslint-config-types\n[npm-download-badge]: https://img.shields.io/npm/dt/@jasonhk/eslint-config-types?style=flat-square\n[npm-version-badge]: https://img.shields.io/npm/v/@jasonhk/eslint-config-types?style=flat-square\n\n[eslint-website]: https://eslint.org/\n","@jrapp/server-base":"# TODO...\n","@kingjs/linq.average":"# @[kingjs](https://www.npmjs.com/package/kingjs)/[linq](https://www.npmjs.com/package/@kingjs/linq).average\r\nReturns the average value of a sequence of numbers projected from elements of a sequence.\r\n## Usage\r\nCompute the average of `[-2, 0, 2]` like this:\r\n```js\r\nvar average = require('@kingjs/linq.average');\r\nvar sequence = require('@kingjs/enumerable.create');\r\n\r\naverage.call(sequence(-2, 0, 2));\r\n```\r\nresult:\r\n```js\r\n0\r\n```\r\n\r\n## API\r\n```ts\r\ndeclare function average(\r\n  this: Enumerable,\r\n  selector?: function(x): number\r\n): number\r\n```\r\n### Interfaces\r\n- `Enumerable`: See [@kingjs/enumerable.define](https://www.npmjs.com/package/@kingjs/enumerable.define).\r\n\r\n### Parameters\r\n- `this`: The sequence of numbers to average.\r\n- `selector`: A function to select a number from each element.\r\n\r\n### Return Value\r\nThe average value of the sequence of numbers. Returns `NaN` if the sequence is empty.\r\n\r\n## Remarks\r\nElements are summed using the `+` operator.\r\n\r\nAverage of an empty sequence is `NaN`.\r\n\r\n## Install\r\nWith [npm](https://npmjs.org/) installed, run\r\n\r\n```\r\n$ npm install @kingjs/linq.average\r\n```\r\n## See Also\r\nLike [Enumerable.Average](https://msdn.microsoft.com/en-us/library/bb358946(v=vs.110).aspx)\r\n\r\n## License\r\n\r\nMIT\r\n\r\n![Analytics](https://analytics.kingjs.net/linq/average)","@lion/option":"# Option\n\n> ## ð  Status: Pilot Phase\n> Lion Web Components are still in an early alpha stage; they should not be considered production ready yet.\n>\n> The goal of our pilot phase is to gather feedback from a private group of users.\n> Therefore, during this phase, we kindly ask you to:\n> - not publicly promote or link us yet: (no tweets, blog posts or other forms of communication about Lion Web Components)\n> - not publicly promote or link products derived from/based on Lion Web Components\n>\n> As soon as Pilot Phase ends we will let you know (feel free to subscribe to this issue https://github.com/ing-bank/lion/issues/1)\n\n`lion-option` is a selectable within a [lion-select-rich](https://github.com/ing-bank/lion/blob/master/packages/select-rich)\n\n## Live Demo/Documentation\n\n> See our [storybook](http://lion-web-components.netlify.com/?path=/docs/forms-option) for a live demo and API documentation\n\n## How to use\n\n### Installation\n\n```sh\nnpm i --save @lion/option\n```\n\n```js\nimport '@lion/option/lion-option.js';\n```\n\n### Example\n\n```html\n<lion-option .choiceValue=${'hotpink'} checked>Hotpink</lion-option>\n```\n\nYou can also set the full `modelValue` for each option.\n\n```html\n<lion-option .modelValue=${{ value: 'red', checked: false }}>Red</lion-option>\n```\n\nThis component should not be used standalone. It is not accessible unless it is a child of a listbox-like element.\n\nFor more details on usage, please see [lion-select-rich](https://github.com/ing-bank/lion/blob/master/packages/select-rich).\n","@lugia/math":"# è¯´æ\næ°å­¦ç¸å³å¤çåè½å·¥å·åº\n# ä½¿ç¨æ¹æ³\n```js\n install @lugia/math\n \n``` \n","@madbean/server":"# `server`\n\n> TODO: description\n\n## Usage\n\n```\nconst server = require('server');\n\n// TODO: DEMONSTRATE API\n```\n","@mapbox/github-release-tools":"# github-release-tools\n\nA collection of scripts and tools for semi-automating git- and GitHub-based\nrelease processes.\n\n## Installation\n\n```\nnpm install -g @mapbox/github-release-tools\n```\n\n## Configuration\n\nCreate a [personal Github access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) and set the value to the `GITHUB_TOKEN` environment variable.\n\n## `backport`\n\n```\nbackport <change> <branch>\n\nBackports change(s) in a PR to a release branch and opens a pull request for\nreview.\n\n<change> can be one of the following:\n\n* A commit hash\n* The URL to a pull request\n* The ID of a pull request, preceded by a hash sign, e.g. #893\n\n<branch> is the name of a release branch, e.g. `release-boba`.\n\nbackport will do the following:\n\n1. In the case where <change> is a commit hash, locate the PR in which the\nchange originated.\n2. Create a branch named cherry-pick-<pr>, where <pr> is the ID of the\noriginating PR.\n3. Cherry pick each commit in the originating PR onto this branch, with an\nopportunity to resolve conflicts should they arise.\n4. Open a PR requesting a merge of cherry-pick-<pr> to <branch>, with a\ndescription that notes the originating PR and reproduces its description.\n5. Request a review from the reviewer(s) of the original PR.\n\n\nOptions:\n  --version  Show version number                                       [boolean]\n  --help     Show help                                                 [boolean]\n```\n\n## `changelog-draft`\n\n```\nchangelog-draft\n\nGenerate a draft changelog entry using changes to master since the most recent\nrelease.\n\nOptions:\n  --help          Show help                                            [boolean]\n  --version       Show version number                                  [boolean]\n  -b, --branch    the branch from which this release is being made\n                                                    [string] [default: \"master\"]\n  -p, --previous  the previous release; defaults to the most recent vX.Y.Z tag\n                                                                        [string]\n  -f, --format    output format          [choices: \"md\", \"json\"] [default: \"md\"]\n  -r, --repo      the github repository, in \"owner/repository\" form. Defaults to\n                  the repository found in the current directory.        [string]\n  -o, --output    the output file                                       [string]\n```\n\n## `branch-permissions`\n\n```\nbranch-permissions <target> [source]\n\nCopies branch protection permissions from one branch to another.\n\n\nPositionals:\n  target  Branch to copy permissions to                                 [string]\n  source  Branch to copy permissions from           [string] [default: \"master\"]\n\nOptions:\n  --version  Show version number                                       [boolean]\n  --help     Show help                                                 [boolean]\n```\n","@meifacil/react-native-pdf-view":"# react-native-pdf-view\r\nReact Native PDF View (cross-platform support)\r\n\r\n### Breaking changes\r\n\r\n* React native 0.40 moved iOS headers, thus all iOS react import statements has been changed. Use version 0.4.* for react native >=0.40. For earlier version see below breaking change.\r\n\r\n* React native 0.19 changed the ReactProps class which led to problems with updating native view properties (see https://github.com/facebook/react-native/issues/5649). These errors are corrected in react-native-pdf-view version 0.2.0. Use version 0.2.* for react native >=0.19 and for earlier react native versions use version 0.1.3.\r\n\r\n### Installation\r\n```bash\r\nnpm i react-native-pdf-view --save\r\n\r\nreact-native link react-native-pdf-view\r\n```\r\n* In `android/setting.gradle`\r\n\r\n```gradle\r\n...\r\ninclude ':PDFView'\r\nproject(':PDFView').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-pdf-view/android')\r\n```\r\n\r\n* In `android/app/build.gradle`\r\n\r\n```gradle\r\n...\r\ndependencies {\r\n    ...\r\n    compile project(':PDFView')\r\n}\r\n```\r\n\r\n* register module (in MainActivity.java)\r\n\r\nOn newer versions of React Native (0.18+):\r\n```java\r\nimport com.keyee.pdfview.PDFView;  // <--- import\r\n\r\npublic class MainActivity extends ReactActivity {\r\n  ......\r\n    @Override\r\n    protected List<ReactPackage> getPackages() {\r\n      return Arrays.<ReactPackage>asList(\r\n        new PDFView(), // <------ add here\r\n        new MainReactPackage());\r\n    }\r\n}\r\n```\r\n\r\nOn older versions of React Native:\r\n```java\r\nimport com.keyee.pdfview.PDFView;  // <--- import\r\n\r\npublic class MainActivity extends Activity implements DefaultHardwareBackBtnHandler {\r\n  ......\r\n\r\n  @Override\r\n  protected void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    mReactRootView = new ReactRootView(this);\r\n\r\n    mReactInstanceManager = ReactInstanceManager.builder()\r\n      .setApplication(getApplication())\r\n      .setBundleAssetName(\"index.android.bundle\")\r\n      .setJSMainModuleName(\"index.android\")\r\n      .addPackage(new MainReactPackage())\r\n      .addPackage(new PDFView())              // <------ add here\r\n      .setUseDeveloperSupport(BuildConfig.DEBUG)\r\n      .setInitialLifecycleState(LifecycleState.RESUMED)\r\n      .build();\r\n\r\n    mReactRootView.startReactApplication(mReactInstanceManager, \"ExampleRN\", null);\r\n\r\n    setContentView(mReactRootView);\r\n  }\r\n\r\n  ......\r\n\r\n}\r\n```\r\n\r\n### Usage\r\n\r\nFirst, require it from your app's JavaScript files with:\r\n```bash\r\nimport PDFView from 'react-native-pdf-view';\r\n```\r\n\r\n\r\n### Example\r\n\r\n```js\r\n'use strict';\r\n\r\nimport React,{\r\n    Component\r\n} from 'react';\r\n\r\nimport {\r\n    StyleSheet,\r\n    View\r\n} from 'react-native';\r\n\r\nimport PDFView from 'react-native-pdf-view';\r\n\r\nexport default class PDF extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n      <PDFView ref={(pdf)=>{this.pdfView = pdf;}}\r\n                         src={\"sdcard/pdffile.pdf\"}\r\n                         onLoadComplete = {(pageCount)=>{\r\n                            this.pdfView.setNativeProps({\r\n                                zoom: 1.5\r\n                            });\r\n                         }}\r\n                         style={styles.pdf}/>\r\n    }\r\n}\r\nvar styles = StyleSheet.create({\r\n    pdf: {\r\n        flex:1\r\n    }\r\n});\r\n```\r\n\r\n\r\n### Configuration\r\n\r\n| Property      | Type        \t| Default \t\t \t\t\t\t| Description | iOS | Android |\r\n| ------------- |:-------------:|:------------:\t\t\t\t| ----------- | --- | ------- |\r\n| path        | string \t\t\t| null \t\t\t \t\t\t\t| pdf absolute path| â   | â |\r\n| src        | string \t\t\t| null \t\t\t \t\t\t\t| pdf absolute path(`Deprecated`) | â   | â |\r\n| asset        | string \t\t\t| null \t\t\t \t\t\t\t| the name of a PDF file in the asset folder |   | â |\r\n| pageNumber    \t\t  | number  \t    |\t1 \t\t \t\t\t\t| page index | â   | â |\r\n| zoom \t\t  | number  \t    |\t1.0 \t| zoom scale | â   | â |\r\n| onLoadComplete \t\t\t| function     \t  | null\t \t\t\t| page load complete,return page count | â   | â |\r\n","@meniga/config":"# @meniga/config\r\n\r\nConfig is a utility library that reads the cosmicConfig property from the window object and merges in a built config object.\r\n\r\n@meniga/cli can help create these configs for different environments. See [here](../../tools/meniga-cli#config).\r\n\r\n## Exports\r\n\r\n---\r\n\r\n### globalConfig\r\n> *globalConfig* is a wrapper for Config.get, and can be used like this:\r\n\r\n```const someValue = globalConfig('path/to/config', someDefaultValue)```\r\n\r\nExample:\r\n\r\n```javascript\r\nimport { globalConfig } from '@meniga/config'\r\n\r\nconst _configItemsPerPage = globalConfig('transactions.itemsPerPage', 50)\r\n```\r\n\r\n### getBooleanConfigValue\r\n> *getBooleanConfigValue* makes sure that the value you get from the config is a boolean (e.g. if the config file itself has a string value 'true' you will get back a Boolean(true)). Example:\r\n\r\n```javascript\r\nimport { getBooleanConfigValue } from '@meniga/config'\r\n\r\nconst _configShowCurrentMonthInChart = getBooleanConfigValue('transactions.showCurrentMonthInChart', false)\r\n```\r\n\r\n### getIntConfigValue\r\n> *getIntConfigValue* makes sure that the value you get from the config is an integer (e.g. if the config file itself has a string value '10' you will get a Number(10) back). Example:\r\n\r\n```javascript\r\nimport { getIntConfigValue } from '@meniga/config'\r\n\r\nconst _configUndoCategoryChangeTimeout = getIntConfigValue('transactions.undoCategoryChangeTimeout', 3000)\r\n```\r\n\r\n### default\r\n\r\n> The default export is the config class. This class has 4 methods:\r\n\r\n- get(key, defaultValue = null) : gets the vale from the merged config, if null then returns the default value\r\n\r\n- all() : get the whole merged config object\r\n\r\n- pretty() : prints the merged config object out to the console\r\n\r\n- init() : initializes @meniga/config by preloading JSON config files (*config/config.json* and *config/override.json*) generated by webpack and exposes them to the get(), all() and pretty() methods. This method should be called during the initialization of your app.\r\n\r\n- load(cosmicJsonConfig, overrideJsonConfig) : Initialize @meniga/config by setting already fetched JSON config files generated by webpack and assigning them to the \"window.cosmicConfig\" and \"window.cosmicOverride\" javascript variables.\r\n","@mit-cave/core":"# @mit-cave/core\n","@mogul/mogul-scripts":"<p align=\"center\">\n  <a href=\"https://freshesx.github.io/mogul-website/\"><img src=\"https://raw.githubusercontent.com/freshesx/mogul/master/assets/logo/logo.png\" height=\"200\" width=\"200\" alt=\"mogul logo\"/></a>\n</p>\n\n<p align=\"center\">\n  <h2>mogul-scripts ç»ä¸æå»ºå·¥å·</h2>\n</p>\n\ncreate-mogul-app scripts base on CRA\n\nv2.0å·²ç»å¼åå®æ, å¨é¢ä½¿ç¨åºäºbabel@7 & webpack v4\n\n## install\n\n```\nyarn add @mogul/mogul-scripts --dev\n```\n\nå¦æä½¿ç¨ v1çæ¬\n```\nyarn add @mogul/mogul-scripts@1.x --dev\n```\n\n## start\n\n```bash\ncreate-mogul-app start\n```\n\n## build\n\n```bash\ncreate-mogul-app build\n```\n\n\n### æ³¨æ\n\n`master` åæ¯ä¸ºnextæ ç­¾ï¼v1 çæ¬å¼åè¯·æ¥çåæ¯ [`v1x`](https://github.com/freshesx/mogul-scripts/tree/v1x)\n\n###\n\n![avatar](http://s2.quickmeme.com/img/1c/1cba02b056944308e72401de0acbf9dbb471aad66deea493613a633be13ab92d.jpg)\n\n","@mu-ui/mu-dialog":"## mu-dialog\n\ndialog component & plugin for vue 2.x\n\n### Installation\n\n```bash\nyarn add @mu-ui/mu-dialog\n```\n\n### Usage\n\n```js\n// plugin\nimport Dialog from '@mu-ui/mu-dialog'\n\nVue.use(Dialog)\n\nthis.$dialog({\n  title: 'Title',\n  message: 'Message...',\n  opacity: 0.5,\n  single: true,\n  highlight: '#fd0',\n  btns: ['No', 'Yes'],\n  confirm() {\n    console.log('click confirm btn')\n  },\n  cancel() {\n    console.log('click cancel btn')\n  }\n})\n\nor\n\n// component\nimport Dialog from '@mu-ui/mu-dialog'\n\nVue.component('mu-dialog', Dialog.Dialog)\n\n// use v-model to control whether or not visible\n<mu-dialog v-model=\"show\" @confirm=\"confirm\" @cancel=\"cancel\">\n  <div class=\"dialog-main\">\n    <p>1</p>\n    <p>2</p>\n    <p>3</p>\n  </div>\n</mu-dialog>\n```\n\n### Options\n\n#### title\n\nType: String\nDefault: 'Tip'\n\ndialog title\n\n#### message\n\nType: String\nDefault: 'Are you sure?'\n\ndialog message\n\n#### btns\n\nType: Array\nDefault: []\n\ncustom button text. if you pass only one element, then a single button which emit confirm event will be displayed. And the priority is higher than the single option\n\n#### single\n\nType: Boolean\nDefault: false\n\nif true, only single button which emit confirm event will be displayed.\n\n#### opacity\n\nType: Number\nDefault: 0.1\n\nopacity of the mask's backgroundColor\n\n#### highlight\n\nType: String\nDefault: #272639\n\ntext color of the confirm btn\n\n#### pre\n\nType: Boolean\nDefault: false\n\nif true, the confirm btn will be placed in the first place\n","@neon-exchange/nash-protocol-mobile":"# nash-protocol\n\nImplementation of Nash cryptographic routines.\n\n## [Documentation available here](https://nash-io-public.gitlab.io/nash-protocol)\n\n\n## Getting started\n\n    yarn install\n    yarn build\n    yarn test\n\n## Usage Summary\n\n### Onboarding\n\nThe Nash Protocol contains functions necessary to create, setup, and authenticate into an account.\n\n#### Account creation\n\nThis step registers a new user with Nash's Central Accounts System.\n\n1. A user signs up for an account and provides a password.\n2. `hashPassword()` should be called to hash the password, and `getHKDFKeysFromPassword()` should be called on the hasked password to get an **authentication key** and **encryption key**.\n3. The **authentication key** is sent to Nash's Central Accounts System in lieu of the original password, and is what is used hereafter for authentication. The **encryption key** is never sent to Nash, and must be computed on the fly from the user's password by the client.\n\n#### Account setup\n\nThis step creates blockchain wallets for a user.\n\n1. `getEntropy()` is called to generate a **secret key**.\n2. `secretKeyToMnemonic()` is called on the **secret key** to provide a user's **mnemonic**. The user should persist this and never share this value.\n3. `mnemonicToMasterSeed()` is called on the **mnemonic** to create the **master seed**, which is the seed value for BIP-44 HD wallet generation.\n4. `generateWallet` is called using the **master seed** for all supported coin types.\n5. Wallet public keys are sent to Nash. Private keys are never sent to Nash, and should be computed on the fly by the client.\n6. The **secret key** is encrypted with `encryptSecretKey()`, which produces an **encrypted secret key AEAD object**. This is sent to Nash.\n\n### Authentication\n\n1. User provides their password.\n2. `getHKDFKeysFromPassword()` is used to get the **authentication key** and **encryption key**.\n3. The **authentication key** is sent to Nash, which responds with the **encrypted secret key AEAD object** and some **wallet metadata** (public keys and chain heights).\n4. The client calls `initialize()` with the **encrypted secret key AEAD object**, **encryption key**, **wallet metadata**, and some Nash Matching Engine market and asset data to receive a **config**.\n5. This **config** contains all necessary values to interact with the Nash Matching Engine, including the ability to sign payloads needed for operations such as order placement, viewing private account information, asset transfers, and staking.\n\n## Glossary\n\n**Secret** values are never sent to Nash. Values that are **visible to Nash** are. A combination of secret values and values accessible by Nash are needed for all sensitive operations. Both types of values are sensitive and should be carefully guarded.\n\n- Authentication key: Derived from password. Used to authentcate into Nash's systems. **Visible to Nash**.\n- BIP-39: Protocol for generating master seed from private key.\n- BIP-44: Protocol for generating wallet addresses from master seed.\n- Chain: an ID for each blockchain we want to generate a private key for. Constant. Nash uses the [coin types](https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki#coin-type) as defined by BIP044.\n- Encrypted secret key: The secret key encrypted via the encryption key via AEAD. Cannot be decrypted without the encryption key. **Visible to Nash.**\n- Encryption key: Derived from password. Used to encrypt the private key for server side storage. **Secret.**\n- Master seed: Value used to generate wallets. Derived from mnemonic. **Secret.**\n- Mnemonic: A n-word phrase generated from the secret key using a wordlist. Can be used along with passphrase to (re)generate the master seed. **Secret.**\n- Password: User's login credential. Used to generate encryption key and auth key via HKDF. **Secret.**\n- Secret key: A random value. Abstracted into the **mnemonic** for better user experience. We use this as the \"master key\" -- the ultimate password from which everything is derived, that should be protected at all costs. **Secret.** (An encrypted version is visible to Nash.)\n\n## Notes\n\n### External wallet keys\n\nWe will NOT support the user supplying their own wallet keys. While users will control their own wallets, we will generate the wallets for them. This is partially because we want wallets to be deterministically derivable from the master seed.\n\n\n## References\n\n- [BIP-39 - master seed generation](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki)\n  - [Detail: seed generation](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki#from-mnemonic-to-seed)\n  - [Implementation](https://github.com/bitcoinjs/bip39)\n  - [Playground](https://iancoleman.io/bip39/)\n- [BIP-44 - deterministic wallets](https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki)\n  - [Current address master list](https://github.com/satoshilabs/slips/blob/master/slip-0044.md)\n- [PBKDF2](https://en.wikipedia.org/wiki/PBKDF2)\n  - [Implementation](https://github.com/crypto-browserify/pbkdf2)\n","@neutrium/thermo.eos.iapws97":"# Neutrium.thermo.IAPWS97\n\n## Introduction\n\nNeutrium.thermo.IAPWS97 is a javascript implementation of the [IAPWS](http://www.iapws.org/) formulations of the thermodynamic properties of water and steam. The IAPWS papers implemented in Neutrium.thermo.IAPWS97 are as follows:\n\n- [Revised Release on the IAPWS Industrial Formulation 1997 for the Thermodynamic Properties of Water and Steam 2007](http://www.iapws.org/relguide/IF97-Rev.html)\n- [Revised Supplementary Release on Backward Equations for Pressure as a Function of Enthalpy and Entropy p(h,s) for Regions 1 and 2 of the IAPWS Industrial Formulation 1997 for the Thermodynamic Properties of Water and Steam](http://www.iapws.org/relguide/Supp-PHS12-2014.pdf)\n- [Revised Supplementary Release on Backward Equations for the Functions T(p,h), v(p,h) and T(p,s), v(p,s) for Region 3 of the IAPWS Industrial Formulation 1997 for the Thermodynamic Properties of Water and Steam](http://www.iapws.org/relguide/Supp-Tv\\(ph,ps\\)3-2014.pdf)\n- [Revised Supplementary Release on Backward Equations p(h,s) for Region 3, Equations as a Function of h and s for the Region Boundaries, and an Equation Tsat(h,s) for Region 4 of the IAPWS Industrial Formulation 1997 for the Thermodynamic Properties of Water and Steam](http://www.iapws.org/relguide/Supp-phs3-2014.pdf)\n- [Revised Supplementary Release on Backward Equations for Specific Volume as a Function of Pressure and Temperature v(p,T) for Region 3 of the IAPWS Industrial Formulation 1997 for the Thermodynamic Properties of Water and Steam](http://www.iapws.org/relguide/Supp-VPT3-2014.pdf)\n- [Revised Release on Surface Tension of Ordinary Water Substance 2014](http://www.iapws.org/relguide/Surf-H2O-2014.pdf)\n- [Release on the IAPWS Formulation 2011 for the Thermal Conductivity of Ordinary Water Substance](http://www.iapws.org/relguide/ThCond.pdf)\n- [Release on the IAPWS Formulation 2008 for the Viscosity of Ordinary Water Substance](http://www.iapws.org/relguide/visc.pdf)\n- [Release on the Ionization Constant of H2O 2007](http://www.iapws.org/relguide/Ionization.pdf)\n\nFor specific details on range of applicability for the IAPWS please refer to the [Revised Release on the IAPWS Industrial Formulation 1997 for the Thermodynamic Properties of Water and Steam 2007](http://www.iapws.org/relguide/IF97-Rev.html).\n\n## Getting Started\n\n### Installing\n\nYou can install the Neutrium implementation of the IAPWS97 equation of state package using npm.\n\n\tnpm install @neutrium/thermo.eos.iapws97 --save\n\n### Including\n\n#### Typescript\n\nIn typescript you can include the package as follows:\n\n    import {IAPWS97_EoS} from \"@neutrium/thermo.eos.iapws97\"\n\n    let EoS = new IAPWS97_EOS();\n\nThis module is built with the declaration files so type hinting should work once the module has been imported.\n\n#### Node\n\n    var EoS = require('@neutrium/thermo.eos.iapws97');\n\n#### Browsers\n\nSince version 2.0.0 this module has been converted to a commonjs (node) package. To use it in a browser environment you will need to use a tool like [browserify](http://browserify.org) to convert it to a web bundle.\n\n#### Unicode Notes\n\nThis package makes use of utf8 characters for variable names and therefore should be handled appropriately. For example if bundled for browser use it would be included as follows:\n\n\t<script charset=\"utf-8\" src=\"path-to-lib/IAPWS97-bundle.js\"></script>\n\n## Usage\n\n### Calculating Properties\n\nSteam and water properties can be calculated using the solve method and a supported combination of pressure (Pa), temperature (K), enthalpy (kJ/kg.K) and entropy (kJ/K.kg). For example (in typescript):\n\n    import {IAPWS97_EOS} from \"@neutrium/thermo.eos.iapws97\"\n\n    let EoS = new IAPWS97_EOS();\n    let inputs = {\n        \"p\" => 101325,\n        \"t\" => 300\n    }\n\n    let state = EoS.solve(inputs);\n\nThe supported input combinations are Pressure/Temperature, Pressure/Enthalpy, Pressure/Entropy and Enthalpy/Entropy.\n\n### Return Values\n\nIf your specified values lie within the applicable range for the IAWPS formulations you will be return an object containing the following properties:\n\n\t{\n\t\tp, \t\t// Pressure, p, Pa\n\t\tt, \t\t// Temperature, t, K\n\t\tv, \t\t// Specific volume, v, m^3/kg\n\t\trho,\t// Density, rho, kg/m^3\n\t\tu,\t\t// Specific internal energy, u, kJ/kg\n\t\ts,\t\t// Specific entropy, s, kJ/kg\n\t\th, \t\t// Specific enthalpy, h, kJ/kg.K\n\t\tcp,\t\t// Specific isobaric heat capacity, Cp kJ/kg.K\n\t\tcv,\t\t// Specific isochoric heat capacity, Cv\n\t\tw,\t\t// Speed of Sound, w, m/s\n\t\tmu,\t\t// Viscosity cP,\n\t\tk,\t\t// Thermal Conductivity W/m.K\n\t\tsigma,\t// Surface Tension mN/m\n\t\tepsilon,// Dielectric constant\n\t\tic\t\t// Ionisation constant\n\t}\n\n#### Typescript\n\nIf you are using Typescript the return valve from the solve method will be an instance of the State class from the @neutrium/thermo package.\n\n#### Errors\n\nIf you try and calculate the properties outside the range of applicability as specified by IAWPS an exception will be thrown.\n\n#### @neutrium/quantity Support\n\nThis package allows properties of the `State` class to be converted to [Neutrium Quantities](https://github.com/neutrium/quantity).\n\nSimply request the results of the solve method as quantities:\n\n\tvar result = IAPWS97_EoS.solve(3000000, 300).asQty();\n\nThis will allow you to easily convert each property as required:\n\n\tvar psi = result.p.to('psi');\n\nSee the NeutriumJS.Quantity [readme](https://github.com/neutrium/quantity/blob/master/README.md) for more info.\n\n## Testing\n\nThis pacakge is currently tested using all applicable tests provided in the IAWPS papers listed above. To run the tests, after cloning and installing package dependences via npm and run `npm task build` at the terminal.\n\n## Donations\n\nNeutriumJS is free software, but you can support the developers by [donating here](https://neutrium.net/donate/).\n\n## Release Notes\n\n| Version | Notes |\n|:-------:|:------|\n| 1.0.0\t  | Initial Release |\n| 1.0.5   | Add UMD definition |\n| 1.1.0   | Optional NeutriumJS.convert support |\n| 1.1.1\t  | Change P and T keys to lower case |\n| 1.1.2   | Added exception throwing for out of range case |\n| 1.1.3   | Bug fixes for exception throwing logic |\n| 1.2.0\t  | Renamed package to NeutriumJS.thermo.IAPWS97 |\n| 2.0.0   | Rename package, switch to Typescript and convert to npm module |\n\n## License\n\n[Creative Commons Attribution 4.0 International](http://creativecommons.org/licenses/by/4.0/legalcode)","@ngard/tiny-chunk":"# tiny-chunk\n\n[![source](https://badgen.net/npm/v/@ngard/tiny-chunk)](https://www.npmjs.com/package/@ngard/tiny-chunk)\n[![bundle size](https://badgen.net/bundlephobia/minzip/@ngard/tiny-chunk)](https://bundlephobia.com/result?p=@ngard/tiny-chunk)\n[![build status](https://badgen.net/travis/NickGard/tiny-chunk)](https://travis-ci.org/NickGard/tiny-chunk)\n[![license](https://badgen.net/badge/license/MIT/blue)](https://badgen.net/badge/license/MIT/blue)\n\nA minimal-weight utility similar to `lodash.chunk`. For when every byte counts!\nThe only difference is that `tiny-chunk` has a minimum chunk size of `1` instead of `0`.\n\n<hr/>\n\nlodash.chunk [![bundle size](https://badgen.net/bundlephobia/minzip/lodash.chunk)](https://bundlephobia.com/result?p=lodash.chunk)\n<br/>\ntiny-chunk [![bundle size](https://badgen.net/bundlephobia/minzip/@ngard/tiny-chunk)](https://bundlephobia.com/result?p=@ngard/tiny-chunk)\n\n<hr/>\n\n## Syntax\n\n```js\nchunk(/* array [, chunkSize] */)\n```\n\n## Parameters\n\n`array` - An array to chunk\n<br/>\n`chunkSize` - [optional] A positive numerical value that designates the size of the chunks to be created. Non-numeric values will default to `1`. Non-integer values will round down to the nearest integer.\n\n## Return\n\nAn array of elements split into groups the length of `chunkSize`. If the array can't be split evenly, the final chunk will be the remaining elements.\n\n## Example\n\n```javascript\nimport { chunk } from '@ngard/tiny-chunk';\n\nconst value = chunk([1, 2, 3, 4, 5], 2);\n// value is [[1, 2], [3, 4], [5]]\n```\n","@nio/zenith-server":"# Horizon Server\n\nAn extensible middleware server built on top of [RethinkDB](https://github.com/rethinkdb/rethinkdb) which exposes a websocket API to front-end applications.\n\n## Documentation\n\nFollow our documentation at [horizon.io/install](https://horizon.io/install) for instructions on installing Horizon.\n\n## Requirements\nThe Horizon server requires some tools and libraries to be available before it\ncan run:\n\n * `node.js` - interpreter to run the Horizon server\n * `openssl` - generating ssl certificates\n * [`rethinkdb`](https://github.com/rethinkdb/rethinkdb) - for running a RethinkDB server\n\n### OpenSSL\n\nOpenSSL is required to generate the cert and key pair necessary to serve Horizon securely via HTTPS and WSS. Usually this is done on the production server where you are running Horizon, however to do this locally you'll need to have the OpenSSL installed.\n\n* **OSX**    - `brew install openssl`\n* **Ubuntu** -  [Follow this guide here](https://help.ubuntu.com/community/OpenSSL#Practical_OpenSSL_Usage).\n* **Windows** - [Unofficial list of Windows OpenSSL Binaries](https://wiki.openssl.org/index.php/Binaries)\n\n### RethinkDB\n\nCheck out [rethinkdb.com/install](https://rethinkdb.com/install) for the best method of installing RethinkDB on your platform.\n","@nlabs/arkhamjs-example-react":"ArkhamJS React Example\n=====================\n\nA simple base application to start you off on your ReactJS project. Uses the following modules:\n - [arkhamjs](https://www.npmjs.com/package/arkhamjs) - A clean, simple Flux framework.\n - [react](https://www.npmjs.com/package/react) - A declarative, efficient, and flexible JavaScript library for building user interfaces.\n - [@nlabs/lex](https://www.npmjs.com/package/@nlabs/lex) - CLI tool to assist in development. Initialize, test, and compile your apps with zero setup. Using [Jest](https://facebook.github.io/jest/), [Webpack](https://webpack.js.org/), and [Typescript](http://www.typescriptlang.org/).\n - [@nlabs/arkhamjs-storage-browser](https://www.npmjs.com/package/@nlabs/arkhamjs-storage-browser) - ArkhamJS browser storage. Caches state in session or local storage.\n - [@nlabs/arkhamjs-middleware-logger](https://www.npmjs.com/package/@nlabs/arkhamjs-middleware-logger) - ArkhamJS console log middleware.\n\n[![Travis](https://img.shields.io/travis/nitrogenlabs/arkhamjs-example-react.svg?style=flat-square)](https://travis-ci.org/nitrogenlabs/arkhamjs-example-react)\n[![TypeScript](https://badges.frapsoft.com/typescript/version/typescript-next.svg?v=101)](https://github.com/ellerbrock/typescript-badges/)\n[![Issues](http://img.shields.io/github/issues/nitrogenlabs/arkhamjs-example-react.svg?style=flat-square)](https://github.com/nitrogenlabs/arkhamjs-example-react/issues)\n[![Gitter](https://img.shields.io/gitter/room/NitrgenLabs/arkhamjs.svg?style=flat-square)](https://gitter.im/NitrogenLabs/arkhamjs)\n[![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](http://opensource.org/licenses/MIT)\n\nGetting Started\n---------------\n\n- Clone the repo and install the necessary node modules:\n\n```shell\n$ npm install -g yarn @nlabs/lex  # Install Yarn and Lex\n$ yarn                            # Install Node modules listed in ./package.json (may take a while the first time)\n```\n\nUsage\n-----\n\n#### `yarn start` also `yarn development`\nRuns the webpack build system to compile scripts on the fly. Run local web server. The default webpack dev server can be found at `localhost:5000`. The port can be changed in the config.\n\n#### `yarn build`\nCompile your application and copy static files for a production environment.\n\n#### `yarn lint`\nLint your app with tslint.\n\n#### `yarn test`\nRuns all unit tests within your app with Jest.\n\n#### `yarn production`\nRun tests and then, on success, compile your application for a production environment. \n\n#### `yarn dev`\nCompile your application for a development environment. Run local development web server. The default web server url is: `localhost:8080`.\n\n### Configuration\n\nSee [@nlabs/lex](https://www.npmjs.com/package/@nlabs/lex) for documentation on custom configuration.\n\nStructure\n---------\n\nThe folder structure provided is only meant to serve as a guide, it is by no means prescriptive. It is something that has worked very well for me and my team, but use only what makes sense to you.\n\n```\n.\nâââ coverage                 # Unit test coverage reports\nâââ dist                     # Compiled files\nâââ src                      # Application source code\nâ   âââ actions              # Flux actions\nâ   âââ components           # React components\nâ   âââ config               # App Configuration\nâ   âââ constants            # App constants\nâ   âââ errors               # Custom errors\nâ   âââ fonts                # Font files\nâ   âââ icons                # SVG files\nâ   âââ img                  # Images\nâ   âââ services             # Helpers and utilities\nâ   âââ stores               # Redux store configuration\nâ   âââ styles               # SCSS styles\nâ   âââ views                # React components/views that live at a route\nâ   âââ app.tsx              # Application bootstrap and rendering\nâ   âââ index.html           # Initial HTML\n```\n\n### Components vs. Views vs. Layouts\n\n**TL;DR:** They're all components.\n\nThis distinction may not be important for you, but as an explanation: A **Layout** is something that describes an entire page structure, such as a fixed navigation, viewport, sidebar, and footer. Most applications will probably only have one layout, but keeping these components separate makes their intent clear. **Views** are components that live at routes, and are generally rendered within a **Layout**. What this ends up meaning is that, with this structure, nearly everything inside of **Components** ends up being a dumb component.\n\nStyles\n------\n\nAll `.css` imports will be run through postcss and cssnext, extracted and compiled during builds. CSS features included are nested classes and SASS-like variables. Styles must be imported either directly within the js file or via another stylesheet which has already been imported.\n\n```js\n// JS\nimport `./component.css`;\n```\n\nTesting\n-------\n\nTo add a unit test, simply create a `*.test.js` file within the `/src` directory. Jest will look for these for and test these files.\n\nTroubleshooting\n---------------\n\nNothing yet. Having an issue? Report it and We'll get to it as soon as possible!\n","@oliverwoodings/react-pyramid":"# â² Pyramid\n\n[![Travis][build-badge]][build]\n[![npm package][npm-badge]][npm]\n[![Coveralls][coveralls-badge]][coveralls]\n\nResponsive masonry grid with infinte scroll and lazy loading, built with react.\n\n[build-badge]: https://img.shields.io/travis/user/repo/master.png?style=flat-square\n[build]: https://travis-ci.org/user/repo\n\n[npm-badge]: https://img.shields.io/npm/v/npm-package.png?style=flat-square\n[npm]: https://www.npmjs.org/package/npm-package\n\n[coveralls-badge]: https://img.shields.io/coveralls/user/repo/master.png?style=flat-square\n[coveralls]: https://coveralls.io/github/user/repo\n\n## Todo:\n\n- [ ] Allow passing elements as children (instead?)\n- [ ] Allow react components as elements\n- [ ] *Super secret plan*\n\nCheck out [the dev branch](https://github.com/nadangergeo/Pyramid/tree/dev) to see where this component is headed! It's going to be epic!\n\n## Demo\n\nFun Giphy example:\nhttp://gergeo.se/pyramid-demo/\n(Source in this repo)\n\nBasic example which combines iframes and images:\nhttp://blimp.se/ (source: https://github.com/BlimpBureau/blimpbureau.github.io)\n\n## Install\nnpm install react-pyramid --save\n\n## Basic usage\n\n```\n<Pyramid elements={elements} />\n```\n\nElements is an array of objects, example:\n\n```\nelements = [\n  {\n    type: \"img\", //not actually needed, since it defaults to img. (optional)\n    src: \"images/cat.png\", //local or external url. (required)\n    orgWidth: 1080, //the original width of the image (required)\n    orgHeight: 1080 //the original height of the image (required)\n    href: \"images/cat.png\" //give image a link (optional)\n  },\n  {\n    type: \"iframe\",\n    src: \"http://foo.bar/dog.html\", //required\n    orgWidth: 1337, //required\n    orgHeight: 1337 //required\n  }\n]\n```\n\n# Props\n\n## elements â Array of objects, required\n\nThe array of objects to render. See example above, or check out the source code of the demo.\n\n## numberOfColumns â Object, optional\n\nHow many columns should the pyramid have for different breakpoints?\nCurrently only supports the *px* unit.\n\n**defaults setting:**\n```\nnumberOfColumns: {\n  default: 1,\n  breakpoints: {\n      \"768px\"  : 2,\n      \"1024px\" : 3,\n      \"1280px\" : 4,\n      \"1440px\" : 5 \n   }\n}\n```\n\n## magicValues: Object, optional\n\nThis one is a bit tricky to explain. I will do my best.\n- An element is only rendered if it is in view (or if it has already been rendered)\n- Basically, when determening whether an element is in view or not, the magicValue is a factor which stretches the boundary so to speak. More concretely, it is \"streched\" by magicValue * height of pyramid.\n\nThis is really nice to have and let's you \"preload\" elements just before they are scrolled into view.\n\n**defaults setting:**\n```\nmagicValues: {\n  default: 0\n}\n```\n\n**example setting:**\n```\nmagicValues: {\n  default: 1,\n  breakpoints: {\n    \"768px\" : 0.2\n  }\n}\n```\n\n## baseClass: String, optional\n\nThe \"block\" in BEM, when giving component class names.\n\nDefaults to **\"pyramid\"**, which in turn gives the element container the class **\"pyramid__element\"**, and the element **\"pyramid__element__[type]\"**,\nwhere type is the type of the element (ex: img).\n\n## gutter: Number, optional\n\nThe gutter, which is used around the pyramid and between the elements.\n\n**Default:** 20\n\n## transition: String, optional\n\nThe CSS transition property value which is applied to all elements.\n\n**Default:** \"all 300ms linear\".\n\nApply **\"none\"** to turn this off.\n\n## derenderIfNotInViewAnymore: Boolean, optional\n\nShould the element be derendered if it is no longer in view? (.ie the user has scrolled past it)\n\n**Default** false\n\n## style: Object, optional\n\nSelf explanatory. Used to style the pyramid component.\n\n**Default CSS:**\n```\n    display: \"block\",\n    position: \"relative\",\n    width: \"100%\",\n    height: \"100%\",\n    clear: \"both\",\n    overflowY: \"auto\"\n```\n\n## onElementClick: Function, optional\n\nIn case you want to handle what happenes when clicking on an element.\n\n**Usage example:**\n\n```\nhandleElementClick(elementProps, event) {\n    console.log(\"elementProps\", elementProps);\n    console.log(\"event\", event);\n}\n\n```\nâ¦\n```\n<Pyramid elements={elements} onElementClick={this.handleElementClick} />\n```\n","@open-age/send-it-client":"# send-it-client\n\nclient to connect to send-it service\n","@openfonts/carrois-gothic-sc_latin":"\n# carrois-gothic-sc_latin\n\nThe CSS and web font files to easily self-host âCarrois Gothic SCâ with subset \"latin\".\n\n## Install\n\n`npm install --save @openfonts/carrois-gothic-sc_latin`\n\n## Use\n\nTypefaces assume youâre using webpack to process CSS and files. Each typeface\npackage includes all necessary font files (woff2, woff) and a CSS file with\nfont-face declarations pointing at these files.\n\nYou will need to have webpack setup to load css and font files. Many tools built\nwith Webpack will work out of the box with Typefaces such as [Gatsby](https://github.com/gatsbyjs/gatsby)\nand [Create React App](https://github.com/facebookincubator/create-react-app).\n\nTo use, simply require the package in your projectâs entry file e.g.\n\n```javascript\n// Load Carrois Gothic SC typeface\nrequire('@openfonts/carrois-gothic-sc_latin')\n```\n\nUsage in SCSS:\n```scss\n@import \"~@openfonts/carrois-gothic-sc_latin/index.css\";\n```\n","@opentelemetry/tracing":"# OpenTelemetry Tracing SDK\n[![Gitter chat][gitter-image]][gitter-url]\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThe `tracing` module contains the foundation for all tracing SDKs of [opentelemetry-js](https://github.com/open-telemetry/opentelemetry-js).\n\nUsed standalone, this module provides methods for manual instrumentation of code, offering full control over span creation for client-side JavaScript (browser) and Node.js.\n\nIt does **not** provide automated instrumentation of known libraries, context propagation for asynchronous invocations or distributed-context out-of-the-box.\n\nFor automated instrumentation for Node.js, please see\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-node).\n\n## Installation\n\n```bash\nnpm install --save @opentelemetry/api\nnpm install --save @opentelemetry/tracing\n```\n\n## Usage\n\n```js\nconst opentelemetry = require('@opentelemetry/api');\nconst { BasicTracerProvider } = require('@opentelemetry/tracing');\n\n// To start a trace, you first need to initialize the Tracer provider.\n// NOTE: The default OpenTelemetry tracer provider does not record any tracing information.\n//       Registering a working tracer provider allows the API methods to record traces.\nnew BasicTracerProvider().register();\n\n// To create a span in a trace, we used the global singleton tracer to start a new span.\nconst span = opentelemetry.trace.getTracer('default').startSpan('foo');\n\n// Set a span attribute\nspan.setAttribute('key', 'value');\n\n// We must end the spans so they become available for exporting.\nspan.end();\n```\n\n## Example\nSee [examples/basic-tracer-node](https://github.com/open-telemetry/opentelemetry-js/tree/master/examples/basic-tracer-node) for an end-to-end example, including exporting created spans.\n\n## Useful links\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us on [gitter][gitter-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[gitter-image]: https://badges.gitter.im/open-telemetry/opentelemetry-js.svg\n[gitter-url]: https://gitter.im/open-telemetry/opentelemetry-node?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/master/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-tracing\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-tracing\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-tracing\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-tracing&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/tracing\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Ftracing.svg\n","@ornikar/rollup-plugin-postcss":"# rollup-plugin-postcss\n\n[![NPM version](https://img.shields.io/npm/v/rollup-plugin-postcss.svg?style=flat)](https://npmjs.com/package/rollup-plugin-postcss) [![NPM downloads](https://img.shields.io/npm/dm/rollup-plugin-postcss.svg?style=flat)](https://npmjs.com/package/rollup-plugin-postcss) [![Build Status](https://img.shields.io/circleci/project/egoist/rollup-plugin-postcss/master.svg?style=flat)](https://circleci.com/gh/egoist/rollup-plugin-postcss) [![codecov](https://codecov.io/gh/egoist/rollup-plugin-postcss/branch/master/graph/badge.svg)](https://codecov.io/gh/egoist/rollup-plugin-postcss)\n [![donate](https://img.shields.io/badge/$-donate-ff69b4.svg?maxAge=2592000&style=flat)](https://github.com/egoist/donate)\n\n<img align=\"right\" width=\"95\" height=\"95\"\n     title=\"Philosopherâs stone, logo of PostCSS\"\n     src=\"http://postcss.github.io/postcss/logo.svg\">\n\nSeamless integration between [Rollup](https://github.com/rollup/rollup) and [PostCSS](https://github.com/postcss/postcss).\n\n## Install\n\n```bash\nyarn add rollup-plugin-postcss --dev\n```\n\n## Usage\n\nYou are viewing the docs for `v2.0` which only support Rollup 1.0 or above.\n```js\n// rollup.config.js\nimport postcss from 'rollup-plugin-postcss'\n\nexport default {\n  plugins: [\n    postcss({\n      plugins: []\n    })\n  ]\n}\n```\n\nThen you can use CSS files:\n\n```js\nimport './style.css'\n```\n\nNote that the generated CSS will be injected to `<head>` by default, and the CSS string is also available as default export unless `extract: true`:\n\n```js\n// Inject to `<head>` and also available as `style`\nimport style from './style.css'\n```\n\nIt will also automatically use local PostCSS config files.\n\n### Extract CSS\n\n```js\npostcss({\n  extract: true\n})\n```\n\n### CSS modules\n\n```js\npostcss({\n  modules: true,\n  // Or with custom options for `postcss-modules`\n  modules: {}\n})\n```\n\n### With Sass/Stylus/Less\n\nInstall corresponding dependency:\n\n- For `Sass` install `node-sass`: `yarn add node-sass --dev`\n- For `Stylus` Install `stylus`: `yarn add stylus --dev`\n- For `Less` Install `less`: `yarn add less --dev`\n\nThat's it, you can now import `.styl` `.scss` `.sass` `.less` files in your library.\n\n#### imports\n\n__For Sass/Scss Only.__\n\nSimilar to how webpack's [sass-loader](https://github.com/webpack-contrib/sass-loader#imports) works, you can prepend the path with `~` to tell this plugin to resolve in `node_modules`:\n\n```sass\n@import \"~bootstrap/dist/css/bootstrap\";\n```\n\n## Options\n\n### extensions\n\nType: `string[]`<br>\nDefault: `['.css', '.sss', '.pcss']`\n\nThis plugin will process files ending with these extensions and the extensions supported by [custom loaders](#loaders).\n\n### plugins\n\nType: `Array`\n\nPostCSS Plugins.\n\n### inject\n\nType: `boolean` `object`<br>\nDefault: `true`\n\nInject CSS into `<head>`, it's always `false` when `extract: true`.\n\nYou can also use it as options for [`style-inject`](https://github.com/egoist/style-inject#options).\n\n### extract\n\nType: `boolean` `string`<br>\nDefault: `false`\n\nExtract CSS to the same location where JS file is generated but with `.css` extension.\n\nYou can also set it to an absolute path.\n\n### modules\n\nType: `boolean` `object`<br>\nDefault: `false`\n\nEnable CSS modules or set options for `postcss-modules`.\n\n### autoModules\n\nType: `boolean`<br>\nDefault: `true`\n\nAutomatically enable CSS modules for `.module.css` `.module.sss` `.module.scss` `.module.sass` `.module.styl` `.module.stylus` `.module.less` files.\n\n### namedExports\n\nType: `boolean` `function`<br>\nDefault: `false`\n\nUse named exports alongside default export.\n\nYou can supply a function to control how exported named is generated:\n\n```js\nnamedExports(name) {\n  // Maybe you simply want to convert dash to underscore\n  return name.replace(/-/g, '_')\n}\n```\n\nIf you set it to `true`, the following will happen when importing specific classNames:\n\n- dashed class names will be transformed by replacing all the dashes to `$` sign wrapped underlines, eg. `--` => `$__$`\n- js protected names used as your style class names, will be transformed by wrapping the names between `$` signs, eg. `switch` => `$switch$`\n\nAll transformed names will be logged in your terminal like:\n\n```bash\nExported \"new\" as \"$new$\" in test/fixtures/named-exports/style.css\n```\n\nThe original will not be removed, it's still available on `default` export:\n\n```js\nimport style, { class$_$name, class$__$name, $switch$ } from './style.css'\nconsole.log(style['class-name'] === class$_$name) // true\nconsole.log(style['class--name'] === class$__$name) // true\nconsole.log(style['switch'] === $switch$) // true\n```\n\n### minimize\n\nType: `boolean` `object`<br>\nDefault: `false`\n\nMinimize CSS, `boolean` or options for `cssnano`.\n\n### sourceMap\n\nType: `boolean` `\"inline\"`\n\nEnable sourceMap.\n\n### parser\n\nType: `string` `function`\n\nPostCSS parser, like `sugarss`.\n\n### stringifier\n\nType: `string` `function`\n\nPostCSS Stringifier.\n\n### syntax\n\nType: `string` `function`\n\nPostCSS Syntax.\n\n### exec\n\nType: `boolean`\n\nEnable PostCSS Parser support in `CSS-in-JS`.\n\n### config\n\nType: `boolean` `object`<br>\nDefault: `true`\n\nLoad PostCSS config file.\n\n#### config.path\n\nType: `string`\n\nThe path to config file, so that we can skip searching.\n\n#### config.ctx\n\nType: `object`\n\n[`ctx`](https://github.com/michael-ciniawsky/postcss-load-config#context) argument for PostCSS config file.\n\nNote: Every keys you pass to `config.ctx` will be available under `options` inside\nthe postcss config.\n\n```js\n// rollup.config.js\npostcss({\n  config: {\n    ctx: {\n      foo: 'bar'\n    }\n  }\n})\n\n// postcss.config.js\nmodule.exports = context => {\n  console.log(context.options.foo) // 'bar'\n\n  return {}\n}\n```\n\n### use\n\nType: `name[]` `[name, options][]`<br>\nDefault: `['sass', 'stylus', 'less']`\n\nUse a loader, currently built-in loaders are:\n\n- `sass` (Support `.scss` and `.sass`)\n- `stylus` (Support `.styl` and `.stylus`)\n- `less` (Support `.less`)\n\nThey are executed from right to left.\n\n### loaders\n\nType: `Loader[]`\n\nAn array of custom loaders, check out our [sass-loader](./src/sass-loader.js) as example.\n\n```js\ninterface Loader {\n  name: string,\n  test: RegExp,\n  process: (this: Context, input: Payload) => Promise<Payload> | Payload\n}\n\ninterface Context {\n  /** Loader options */\n  options: any\n  /** Sourcemap */\n  sourceMap: any\n  /** Resource path */\n  id: string\n  /** Files to watch */\n  dependencies: Set<string>\n  /** Emit a waring */\n  warn: PluginContext.warn\n  /** https://rollupjs.org/guide/en#plugin-context */\n  plugin: PluginContext\n}\n\ninterface Payload {\n  /** File content */\n  code: string\n  /** Sourcemap */\n  map?: string | SourceMap\n}\n```\n\n### onImport\n\nType: `id => void`\n\nA function to be invoked when an import for CSS file is detected.\n\n## License\n\nMIT &copy; [EGOIST](https://github.com/egoist)\n","@react-ui-generator/serializers":"# react-ui-generator/serializers\n\n ## How to write your own binding for Y (example).\n","@regexp-extra/flags":"Get [flags] of [RegExp], like `gi`.\r\n\r\n```javascript\r\nconst flags = require('@regexp-extra/flags');\r\n// -> flags\r\n\r\n\r\nflags(/EATME/g);\r\n// g\r\n\r\nflags(/DRINKME/im);\r\n// im\r\n```\r\n\r\n\r\n[![NPM](https://i.imgur.com/cBNcQKQ.jpg)](https://www.npmjs.com/package/regexp-extra)\r\n> credits: taken directly from [es-shims/RegExp.prototype.flags](https://github.com/es-shims/RegExp.prototype.flags).\r\n\r\n[RegExp]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\r\n[flags]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/flags\r\n","@roocky/vue-shudan":"# åºäºVue.jsçå´æ£çç»ä»¶\n\n## èµ·æº\n\n[Sabaki](https://github.com/SabakiHQ/Sabaki)æ¯ä¸æ¬¾ç²¾ç¾çå´æ£è½¯ä»¶ï¼å®çæ ¸å¿æ£çç»ä»¶[Shudan](https://github.com/SabakiHQ/Shudan)åºäºPreactç¼åãæå¾åæ¬¢ï¼äºæ¯ç¨Vue.jséåäºè¿ä¸ªç»ä»¶ã\n\n## ææ\n\n![Screenshot](./screenshot.png)\n\n## åè½\n\n- å¨é¢: å¨æå°ºå¯¸ãè½å­å¨ç»ãæ£å­æ è®°ãæç¤ºåæ ãç­åº¦ææãå¿ç¢ææãæ­»å­ç¶æãä¸»é¢æ´æ¢ç­\n- çµæ´»: æ¯é¨åå¯åç¬éç½®ï¼ä»£ç ä¹ç¬ç«\n- æç¨: Vueæ åç»ä»¶ï¼ç´æ¥importå³å¯ç¨\n\n## ç¤ºä¾æå»º\n\nç¡®ä¿ç¯å¢å·²å®è£Git/Node.js/npmï¼ç¶åè¿è¡ï¼\n\n```shell\n$ git clone git@github.com:roocky-lab/vue-shudan.git\n$ cd vue-shudan\n$ npm install\n```\n\nå¨æµè§å¨éé¢è§ææï¼\n\n```shell\n$ npm run serve\n```\n\nåå¸æå°ä½ç§¯çæ¬ï¼\n\n```shell\n$ npm run build\n```\n\n## éæè°ç¨\n\né¡¹ç®æ·»å è¿ä¸ªåºå¾ç®åï¼é¦åæ¬å°å®è£ï¼\n```shell\n$ npm install @roocky/vue-shudan --save \n```\n\nå è½½åç´æ¥è°ç¨å³å¯ï¼\n```javascript\nimport Goban from '@roocky/vue-shudan';\n```\n","@sbruton/bunyan-logstash":"# Logstash UDP stream for Bunyan\n\n# Configuration options\n\n<table>\n  <tr>\n    <th>level</th>\n    <td>string</td>\n    <td><code>info</code></td>\n  </tr>\n  <tr>\n    <th>server</th>\n    <td>string</td>\n    <td><code>os.hostname()</code></td>\n  </tr>\n  <tr>\n    <th>host</th>\n    <td>string</td>\n    <td><code>\"127.0.0.1\"</code></td>\n  </tr>\n  <tr>\n    <th>port</th>\n    <td>number</td>\n    <td><code>9999</code></td>\n  </tr>\n  <tr>\n    <th>application</th>\n    <td>string</td>\n    <td><code>process.title</code></td>\n  </tr>\n  <tr>\n    <th>pid</th>\n    <td>string</td>\n    <td><code>process.pid</code></td>\n  </tr>\n  <tr>\n    <th>tags</th>\n    <td>array|string[]</td>\n    <td><code>[\"bunyan\"]</code></td>\n  </tr>\n</table>\n\n# Adding the bunyan-logstash stream to Bunyan\n\n```\nvar log = bunyan.createLogger({\n  streams: [\n    {\n      type: \"raw\",\n      stream: require('bunyan-logstash').createStream({\n        host: '127.0.0.1',\n        port: 5505\n      })\n    }\n  ]\n});\n```\n","@seagull/ui":"# Seagull UI\n\n[![npm version](https://badge.fury.io/js/%40seagull%2Fui.svg)](https://badge.fury.io/js/%40seagull%2Fui)\n[![Build Status](https://travis-ci.org/seagull-js/ui.svg?branch=master)](https://travis-ci.org/seagull-js/ui)\n[![License: LGPL v3](https://img.shields.io/badge/License-LGPL%20v3-blue.svg)](http://www.gnu.org/licenses/lgpl-3.0)\n[![styled with prettier](https://img.shields.io/badge/styled_with-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n\nThis project collects react components used within websites for\n[The Seagull Framework](https://seagull.technology). You can look at the\ncomponents [here](http://seagull-js.github.io/ui)\n\n## Storybook\n\nAll components are written, documented and tested through a tool called\n[Storybook](https://storybook.js.org/). The preview is automatically deployed\nto [GitHub Pages](http://seagull-js.github.io/ui) on every commit.\n\n## Tests\n\nStructural tests are performed through StoryShots, a plugin for Storybook that\nuses Jest and executes the stories already written for storybook itself.\n","@sooran-common/sooran-stack":"# `@sooran/sooran-stack`\n\n> TODO: description\n\n## Usage\n\n```\nconst sooranStack = require('@sooran-core/sooran-stack');\n\n// TODO: DEMONSTRATE API\n```\n","@soundstep/infuse":"infuse\n======\n\njavascript ioc library\n\n## installation\n\nUse the script (dist/infuse.min.js) for a normal use.\n\nOr install it with npm:\n\n```js\nnpm install @soundstep/infuse\n```\n\n## create injector\n\n```js\nvar injector = new infuse.Injector();\n```\n\n## create injector with node.js\n\n```js\nvar infuse = require('@soundstep/infuse');\nvar injector = new infuse.Injector();\n```\n## map value\n\n```js\ninjector.mapValue(\"name\", \"John\");\n```\n\n## remove mapping\n\n```js\ninjector.removeMapping(\"name\");\n```\n\n## test mapping\n\n```js\ninjector.hasMapping(\"name\");\n```\n\n## inject value\n\n```js\ninjector.inject(john);\n```\n\nFull example:\n\n```js\n// create injector\nvar injector = new infuse.Injector();\n// map value to the name property\ninjector.mapValue(\"name\", \"John\");\n// create person class\nvar Person = function() {\n\tthis.name = null;\n}\n// instantiate Person class\nvar john = new Person();\n// inject values in the Person instance\ninjector.inject(john);\nalert(john.name); // will alert John\n```\n\nor\n\n```js\nvar john = injector.createInstance(Person);\n```\n\nFull example:\n\n```js\n// create injector\nvar injector = new infuse.Injector();\n// map value to the name property\ninjector.mapValue(\"name\", \"John\");\n// create person class\nvar Person = function() {\n\tthis.name = null;\n}\n// instantiate Person class and inject values\nvar john = injector.createInstance(Person);\nalert(john.name); // will alert John\n```\n\nFull example with constructor:\n\n```js\n// create injector\nvar injector = new infuse.Injector();\n// map value to the name property\ninjector.mapValue(\"name\", \"John\");\n// create person class\nvar Person = function(name) {\n\tthis.nameParam = name;\n}\n// instantiate Person class and inject values from the constructor\nvar john = injector.createInstance(Person);\nalert(john.nameParam); // will alert John\n```\n\n## specified inject value (minification)\n\nIt is also possible to specify the injected value using a static variable \"inject\", which would describe the arguments that should be sent into the instance.\n\n```js\n// create injector\nvar injector = new infuse.Injector();\n// map value to the name property\ninjector.mapValue(\"name\", \"John\");\n// person class\nvar Person = function(specifiedName) {\n\tthis.specifiedName = specifiedName;\n}\n// specify injected arguments\nPerson.inject = [\"name\"];\n// instantiate Person class and inject values from the constructor\nvar john = injector.createInstance(Person);\nalert(john.specifiedName); // will alert John\n```\n\nA strict mode can be enabled, the injector will throw an error if the \"inject\" property is missing when trying to instantiate a function.\n\n```js\nvar injector = new infuse.Injector();\ninjector.strictMode = true; // default is false\n```\n\nA strict mode for constructor injection only can also be specified, the injector will throw an error if the \"inject\" property is missing.  \nThe error will not be thrown if the dependencies are declared using properties (`obj.propName = null`) rather than constructor argument (`function Obj(propName) {`).  \nThis is a looser strict mode than `injector.strictMode`, which apply to both property and constructor injection.  \nthis option will be enough to mangle arguments while minifying javascript and have the dependency injection still working.\n\n```js\nvar injector = new infuse.Injector();\ninjector.strictModeConstructorInjection = true;  // default is false\n```\n\n## map class\n\n```js\ninjector.mapClass(\"model\", MyModel);\n```\n\nFull example:\n\n```js\n// create injector\nvar injector = new infuse.Injector();\n// create model class\nvar MyModel = function() {\n\tthis.data = \"data\";\n}\n// map class to the model property\ninjector.mapClass(\"model\", MyModel);\n// create class that will receive an instance of MyModel class\nvar OtherClass = function() {\n\tthis.model = null;\n}\n// instantiate Person class and inject values\nvar other1 = injector.createInstance(OtherClass);\nalert(other1.model); // contains a MyModel instance\nvar other2 = injector.createInstance(OtherClass);\nalert(other2.model); // contains another MyModel instance\n```\n\nFull example with constructor:\n\n```js\n// create injector\nvar injector = new infuse.Injector();\n// create model class\nvar MyModel = function() {\n\tthis.data = \"data\";\n}\n// map class to the model property\ninjector.mapClass(\"model\", MyModel);\n// create class that will receive an instance of MyModel class\nvar OtherClass = function(model) {\n\tthis.modelParam = model;\n}\n// instantiate Person class and inject values\nvar other1 = injector.createInstance(OtherClass);\nalert(other1.modelParam); // contains a MyModel instance\nvar other2 = injector.createInstance(OtherClass);\nalert(other2.modelParam); // contains another MyModel instance\n```\n\n## map class as singleton\n\n```js\ninjector.mapClass(\"model\", MyModel, true);\n```\n\nFull example:\n\n```js\n// create injector\nvar injector = new infuse.Injector();\n// create model class\nvar MyModel = function() {\n\tthis.data = \"data\";\n}\n// map class to the model property\ninjector.mapClass(\"model\", MyModel, true);\n// create class that will receive an instance of MyModel class\nvar OtherClass = function() {\n\tthis.model = null;\n}\n// instantiate Person class and inject values\nvar other1 = injector.createInstance(OtherClass);\nalert(other1.model); // contains a MyModel instance\nvar other2 = injector.createInstance(OtherClass);\nalert(other2.model); // contains the same model instance as other1\nalert(other1.model === other2.model); // alert true\n```\n\nFull example with constructor:\n\n```js\n// create injector\nvar injector = new infuse.Injector();\n// create model class\nvar MyModel = function() {\n\tthis.data = \"data\";\n}\n// map class to the model property\ninjector.mapClass(\"model\", MyModel, true);\n// create class that will receive an instance of MyModel class\nvar OtherClass = function(model) {\n\tthis.modelParam = model;\n}\n// instantiate Person class and inject values\nvar other1 = injector.createInstance(OtherClass);\nalert(other1.modelParam); // contains a MyModel instance\nvar other2 = injector.createInstance(OtherClass);\nalert(other2.modelParam); // contains the same model instance as other1\nalert(other1.modelParam === other2.modelParam); // alert true\n```\n\n## get instance with mapping name\n\n```js\ninjector.mapClass(\"model\", MyModel);\nvar model = injector.getValue(\"model\");\n```\n\nFull example:\n\n```js\n// create injector\nvar injector = new infuse.Injector();\n// create model class\nvar MyModel = function() {\n\tthis.data = \"data\";\n}\n// map class to the model property\ninjector.mapClass(\"model\", MyModel);\n// get instance created\nvar model1 = injector.getValue(\"model\");\nalert(model1); // contains a MyModel instance\nvar model2 = injector.getValue(\"model\");\nalert(model2); // contains another MyModel instance\nalert(model1 === model2); // alert false\n```\n\n## get instance with mapping name as singleton\n\n```js\ninjector.mapClass(\"model\", MyModel, true);\nvar model = injector.getValue(\"model\");\n```\n\nFull example:\n\n```js\n// create injector\nvar injector = new infuse.Injector();\n// create model class\nvar MyModel = function() {\n\tthis.data = \"data\";\n}\n// map class to the model property\ninjector.mapClass(\"model\", MyModel, true);\n// get instance created\nvar model1 = injector.getValue(\"model\");\nalert(model1); // contains a MyModel instance\nvar model2 = injector.getValue(\"model\");\nalert(model2); // contains another MyModel instance\nalert(model1 === model2); // alert true\n```\n\n## get instance with class\n\n```js\ninjector.mapClass(\"model\", MyModel);\nvar model = injector.getValueFromClass(MyModel);\n```\n\nFull example:\n\n```js\n// create injector\nvar injector = new infuse.Injector();\n// create model class\nvar MyModel = function() {\n\tthis.data = \"data\";\n}\n// map class to the model property\ninjector.mapClass(\"model\", MyModel);\n// get instance created\nvar model1 = injector.getValueFromClass(MyModel);\nalert(model1); // contains a MyModel instance\nvar model2 = injector.getValueFromClass(MyModel);\nalert(model2); // contains another MyModel instance\nalert(model1 === model2); // alert false\n```\n\n## get instance with class as singleton\n\n```js\ninjector.mapClass(\"model\", MyModel, true);\nvar model = injector.getValueFromClass(MyModel);\n```\n\nFull example:\n\n```js\n// create injector\nvar injector = new infuse.Injector();\n// create model class\nvar MyModel = function() {\n\tthis.data = \"data\";\n}\n// map class to the model property\ninjector.mapClass(\"model\", MyModel, true);\n// get instance created\nvar model1 = injector.getValueFromClass(MyModel);\nalert(model1); // contains a MyModel instance\nvar model2 = injector.getValueFromClass(MyModel);\nalert(model2); // contains another MyModel instance\nalert(model1 === model2); // alert true\n```\n\n## create child injector (inherit the mapping from the parent injector)\n\n```js\nvar child = injector.createChild();\n```\n\nFull example:\n\n```js\n// create injector\nvar injector = new infuse.Injector();\n// map value to the name property on the parent injector\ninjector.mapValue(\"name\", \"John\");\n// create child injector\nvar child = injector.createChild();\n// map value to the type property on the child injector\nchild.mapValue(\"type\", \"male\");\n// create class that will receive the name and type value\nvar FooClass = function() {\n\tthis.name = null;\n\tthis.type = null;\n}\n// instance the class with the child injector\nvar fooChild = child.createInstance(FooClass);\nalert(fooChild.name); // will alert \"John\"\nalert(fooChild.type); // will alert \"male\"\nvar fooParent = injector.createInstance(FooClass);\nalert(fooParent.name); // will alert \"John\"\nalert(fooParent.type); // will alert null\n```\n\n## getValue vs createInstance\n\nThe method createInstance will always return a new instance.\n\nThe method getValue needs to have a mapping registered and might return the same instance depending if the class has been mapped as singleton.\n\n```js\n// return a new instance every time\nvar instance1 = injector.createInstance(MyClass);\nvar instance2 = injector.createInstance(MyClass);\nvar instance3 = injector.createInstance(MyClass);\n\n// return a new instance every time\ninjector.mapClass(\"name\", MyClass);\nvar instance1 = injector.getValue(\"name\");\nvar instance2 = injector.getValue(\"name\");\nvar instance3 = injector.getValue(\"name\");\n\n// return a new instance every time\ninjector.mapClass(\"name\", MyClass);\nvar instance1 = injector.getValueFromClass(MyClass);\nvar instance2 = injector.getValueFromClass(MyClass);\nvar instance3 = injector.getValueFromClass(MyClass);\n\n// return the same instance every time\ninjector.mapClass(\"name\", MyClass, true); // mapped as singleton\nvar instance1 = injector.getValue(\"name\");\nvar instance2 = injector.getValue(\"name\");\nvar instance3 = injector.getValue(\"name\");\n\n// return the same instance every time\ninjector.mapClass(\"name\", MyClass, true); // mapped as singleton\nvar instance1 = injector.getValueFromClass(MyClass);\nvar instance2 = injector.getValueFromClass(MyClass);\nvar instance3 = injector.getValueFromClass(MyClass);\n```\n\n## post construct\n\nA post construct method can be added, it will be automatically called once the injection is done.\n\n```js\n// create injector\nvar injector = new infuse.Injector();\n// map value to the data property\ninjector.mapValue(\"data\", \"some data\");\n// create model class\nvar MyModel = function() {\n\tthis.data = null;\n}\nMyModel.prototype = {\n\tpostConstruct: function() {\n\t\t// called after injection\n\t\t// this.data is injected\n\t\talert(this.data);\n\t}\n}\ninjector.createInstance(MyModel);\n```\n\n## License\n\nSee [LICENSE file](./LICENSE.md).\n","@stackstorm/browserify-postcss":"# browserify-postcss\n[![version](https://img.shields.io/npm/v/browserify-postcss.svg)](https://www.npmjs.org/package/browserify-postcss)\n[![status](https://travis-ci.org/zoubin/browserify-postcss.svg)](https://travis-ci.org/zoubin/browserify-postcss)\n[![dependencies](https://david-dm.org/zoubin/browserify-postcss.svg)](https://david-dm.org/zoubin/browserify-postcss)\n[![devDependencies](https://david-dm.org/zoubin/browserify-postcss/dev-status.svg)](https://david-dm.org/zoubin/browserify-postcss#info=devDependencies)\n\nA [browserify] transform to work with [postcss].\n\n## Example\n\nThe build script:\n\n```javascript\nvar browserify = require('browserify')\nvar fs = require('fs')\n\nvar b = browserify(__dirname + '/src/entry.js')\nb.transform('browserify-postcss', {\n  // a list of postcss plugins\n  plugin: [\n    'postcss-import',\n    'postcss-advanced-variables',\n    ['postcss-custom-url', [\n      ['inline', { maxSize: 10 }],\n      ['copy', {\n        assetOutFolder: __dirname + '/static/assets',\n        baseUrl: 'assets',\n        name: '[name].[hash]',\n      }],\n    ]],\n  ],\n  // basedir where to search plugins\n  basedir: __dirname + '/src',\n  // insert a style element to apply the styles\n  inject: true,\n})\nb.bundle().pipe(\n  fs.createWriteStream(to)\n)\n\n```\n\nentry.js:\n\n```js\nrequire('./entry.css')\n\nconsole.log('styles from entry.css are applied')\n\n```\n\n## Options\n\n### plugin\nSpecify a list of [postcss] plugins to apply.\n\nType: `String`, `Array`\nDefault: `null`\n\n### basedir\nSpecify where to look for plugins.\n\n### postCssOptions\nSpecify the [options](https://github.com/postcss/postcss/blob/master/docs/api.md#processorprocesscss-opts)\nfor the [postcss] processor.\n\nThe `from` and `to` fields will be set to the css file path by default.\n\nThe `to` option is used to calculated `url()` in the final styles.\nHowever, if your [postcss] plugin does not need it,\ndon't bother to specify.\n\n### inject\nSpecify how to use the styles:\n\nIf `true`, styles are applied immediately.\nIf `false`, `require('style.css')` will return the string representation of the styles.\n\n### extensions\nA list of file extensions to identify styles.\n\nType: `Array`\n\nDefault: `['.css', '.scss', '.sass']`\n\n## Watch\nImported files will **NOT** be watched when used with [watchify].\n\n## Related\n\n* [reduce-css]: bundle css files without `require`ing them in js.\n\n\n[browserify]: https://github.com/substack/node-browserify\n[watchify]: https://github.com/substack/watchify\n[postcss]: https://github.com/postcss/postcss\n[reduce-css]: https://github.com/reducejs/reduce-css\n","@theia/cortex-debug":"# Theia - Cortex Debug Extension\n\nSee [here](https://www.theia-ide.org/doc/index.html) for a detailed documentation.\n\nBased on [Marus/cortex-debug](https://github.com/Marus/cortex-debug) ([marketplace](https://marketplace.visualstudio.com/items?itemName=marus25.cortex-debug))\n\n## License\n- [Eclipse Public License 2.0](http://www.eclipse.org/legal/epl-2.0/)\n- [ä¸ (Secondary) GNU General Public License, version 2 with the GNU Classpath Exception](https://projects.eclipse.org/license/secondary-gpl-2.0-cp)\n","@themost/node":"[![npm](https://img.shields.io/npm/v/@themost%2Fnode.svg)](https://www.npmjs.com/package/@themost%2Fnode)\n![](https://img.shields.io/david/themost-framework/themost-client?path=modules%2F%40themost%2Fnode) ![](https://img.shields.io/david/peer/themost-framework/themost-client?path=modules%2F%40themost%2Fnode)\n![](https://img.shields.io/david/dev/themost-framework/themost-client?path=modules%2F%40themost%2Fnode)\n![GitHub top language](https://img.shields.io/github/languages/top/themost-framework/themost-client)\n[![License](https://img.shields.io/npm/l/@themost/query)](https://github.com/themost-framework/themost/blob/master/LICENSE)\n![GitHub last commit](https://img.shields.io/github/last-commit/themost-framework/themost-client)\n![GitHub Release Date](https://img.shields.io/github/release-date/themost-framework/themost-client)\n[![npm](https://img.shields.io/npm/dw/@themost/node)](https://www.npmjs.com/package/@themost%2Fnode)\n![Snyk Vulnerabilities for npm package](https://img.shields.io/snyk/vulnerabilities/npm/@themost/node)\n\n# @themost/node\n\n![MOST Web Framework Logo](https://www.themost.io/assets/images/most_logo_sw_240.png)\n\n[MOST Web Framework 2.0 **Codename Blueshift**](https://github.com/themost-framework/themost) - NodeJS client module\n\n## Installation\n\n    npm install @themost/node\n\n\n### Usage\n\n    import {NodeDataContext} from '@themost/node/client';\n    const context = new NodeDataContext(\"http://data.example.com\");\n    context.model(\"Order\")\n        .select(\"id\",\"customer\", \"orderDate\", \"orderNumber\")\n        .expand(\"customer\")\n        .where(\"orderStatus/alternateName\")\n        .equal(\"OrderPaymentDue\")\n        .orderBy(\"orderDate\")\n        .take(10)\n        .getItems().then(function(result) {\n            //enumerate items\n        }).catch((err) =>\n            console.log(err);\n        });\n\n### ClientDataContext Class\n\n#### model(name)\n\nGets an instance of ClientDataModel class based on the given name.\n\n    context.model(\"Order\").where(\"orderStatus\").equal(1).getItems().then(function(result) {\n        //\n    }).catch((err) =>\n        console.log(err);\n    });\n\n#### getService()\n\nGets the instance of ClientDataService associated with this data context.\n\n    console.log(context.getService().getBase());\n\n#### setService(service)\n\nAssociates the given ClientDataService instance with this data context.\n\n    context.setService(new MyDataService(\"http://data.example.com\"));\n\n### ClientDataModel Class\n\n#### asQueryable()\n\nReturns an instance of ClientDataQueryable class associated with this model.\n\n    context.model(\"Order\")\n        .asQueryable()\n        .select(\"id\",\"customer/description as customerDescription\", \"orderDate\", \"orderedItem/name as orderedItemName\")\n        .where(\"paymentMethod/alternateName\").equal(\"DirectDebit\")\n        .orderByDescending(\"orderDate\")\n        .take(10)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n            console.log(err);\n    });\n\n#### getName()\n\nGets a string which represents the name of this data model.\n\n#### getService()\n\nGets the instance of ClientDataService associated with this data model.\n\n#### remove(obj)\n\nRemoves the given item or array of items.\n\n    var order = {\n        id:1\n    };\n    context.model(\"Order\").remove(order).then(function(result) {\n        //\n    }).catch((err) =>\n        console.log(err);\n    }\n\n#### save(obj)\n\nCreates or updates the given item or array of items.\n\n    var order = {\n        id:1,\n        orderStatus:7\n    };\n    context.model(\"Order\").save(order).then(function(result) {\n        //\n    }).catch((err) =>\n        console.log(err);\n    }\n\n#### select(...attr)\n\nInitializes and returns an instance of ClientDataQueryable class by selecting an attribute or a collection of attributes.\n\n    context.model(\"Order\")\n        .select(\"id\",\"customer\",\"orderedItem\",\"orderStatus\")\n        .orderBy(\"orderDate\")\n        .take(25)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n            console.log(err);\n    });\n\n#### skip(num)\n\nInitializes and returns an instance of ClientDataQueryable class by specifying the number of records to be skipped.\n\n    context.model(\"Order\")\n        .skip(10)\n        .take(10)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n            console.log(err);\n    });\n\n#### take(num)\n\nInitializes and returns an instance of ClientDataQueryable class by specifying the number of records to be taken.\n\n    context.model(\"Order\")\n        .take(10)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n            console.log(err);\n    });\n\n#### where(attr)\n\nInitializes a comparison expression by using the given attribute as left operand\nand returns an instance of ClientDataQueryable class.\n\n    context.model(\"Order\")\n        .where(\"orderedItem/category\").equal(\"Laptops\")\n        .take(10)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n            console.log(err);\n    });\n\n### ClientDataQueryable Class\n\nClientDataQueryable class enables developers to perform simple and extended queries against data models.\nThe ClienDataQueryable class follows [DataQueryable](https://docs.themost.io/most-data/DataQueryable.html)\nwhich is introduced by [MOST Web Framework ORM server-side module](https://github.com/kbarbounakis/most-data).\n\n#### Logical Operators\n\nOr:\n\n    context.model(\"Product\")\n        .where(\"category\").equal(\"Desktops\")\n        .or(\"category\").equal(\"Laptops\")\n        .orderBy(\"price\")\n        .take(5)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nAnd:\n\n    context.model(\"Product\")\n        .where(\"category\").equal(\"Laptops\")\n        .and(\"price\").between(200,750)\n        .orderBy(\"price\")\n        .take(5)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\n#### Comparison Operators\n\nEqual:\n\n    context.model(\"Order\")\n            .where(\"id\").equal(10)\n            .getItem()\n            .then((result) => {\n                //\n            }).catch((err) =>\n                console.log(err);\n        });\n\nNot equal:\n\n    context.model(\"Order\")\n            .where(\"orderStatus/alternateName\").notEqual(\"OrderProblem\")\n            .orderByDescending(\"orderDate\")\n            .take(10)\n            .getItems()\n            .then((result) => {\n                //\n            }).catch((err) =>\n                console.log(err);\n        });\n\nGreater than:\n\n    context.model(\"Order\")\n        .where(\"orderedItem/price\").greaterThan(968)\n        .and(\"orderedItem/category\").equal(\"Laptops\")\n        .and(\"orderStatus/alternateName\").notEqual(\"OrderCancelled\")\n        .select(\"id\",\n            \"orderStatus/name as orderStatusName\",\n            \"customer/description as customerDescription\",\n            \"orderedItem\")\n        .orderByDescending(\"orderDate\")\n        .take(10)\n        .getItems()\n        .then((result) => {\n            return done();\n        }).catch((err) =>\n        console.log(err);\n        return done(err);\n    });\n\nGreater or equal:\n\n    context.model(\"Product\")\n        .where(\"price\").greaterOrEqual(1395.9)\n        .orderByDescending(\"price\")\n        .take(10)\n        .getItems()\n        .then((result) => {\n           //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nLower than:\n\n    context.model(\"Product\")\n        .where(\"price\").lowerThan(263.56)\n        .orderBy(\"price\")\n        .take(10)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nLower or equal:\n\n    context.model(\"Product\")\n        .where(\"price\").lowerOrEqual(263.56)\n        .and(\"price\").greaterOrEqual(224.52)\n        .orderBy(\"price\")\n        .take(5)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nContains:\n\n    context.model(\"Product\")\n        .where(\"name\").contains(\"Book\")\n        .and(\"category\").equal(\"Laptops\")\n        .orderBy(\"price\")\n        .take(5)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nBetween:\n\n    context.model(\"Product\")\n        .where(\"category\").equal(\"Laptops\")\n        .or(\"category\").equal(\"Desktops\")\n        .andAlso(\"price\").between(200,750)\n        .orderBy(\"price\")\n        .take(5)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\n#### Aggregate Functions\n\nCount:\n\n    context.model(\"Product\")\n        .select(\"category\", \"count(id) as total\")\n        .groupBy(\"category\")\n        .orderByDescending(\"count(id)\")\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nMin:\n\n    context.model(\"Product\")\n        .select(\"category\", \"min(price) as minimumPrice\")\n        .where(\"category\").equal(\"Laptops\")\n        .or(\"category\").equal(\"Desktops\")\n        .groupBy(\"category\")\n        .orderByDescending(\"min(price)\")\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nMax:\n\n    context.model(\"Product\")\n        .select(\"category\", \"max(price) as maximumPrice\")\n        .where(\"category\").equal(\"Laptops\")\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\n### String Functions:\n\nIndex Of:\n\n    context.model(\"Product\")\n        .where(\"name\").indexOf(\"Intel\")\n        .greaterOrEqual(0)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nSubstring:\n\n    context.model(\"Product\")\n        .where(\"name\").substr(6,4)\n        .equal(\"Core\")\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nStarts with:\n\n    context.model(\"Product\")\n        .where(\"name\").startsWith(\"Intel Core\")\n        .equal(true)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nEnds with:\n\n    context.model(\"Product\")\n        .where(\"name\").endsWith(\"Edition\")\n        .equal(true)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nLower case:\n\n    context.model(\"Product\")\n        .where(\"category\").toLowerCase()\n        .equal(\"laptops\")\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nUpper case:\n\n    context.model(\"Product\")\n        .where(\"category\").toUpperCase()\n        .equal(\"LAPTOPS\")\n        .take(10)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\n#### Date Functions:\n\nDate:\n\n    context.model(\"Order\")\n        .where(\"orderDate\").getDate()\n        .equal(\"2015-04-18\")\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nMonth:\n\n    context.model(\"Order\")\n        .where(\"orderDate\").getMonth()\n        .equal(4)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nDay:\n\n    context.model(\"Order\")\n        .where(\"orderDate\").getMonth().equal(4)\n        .and(\"orderDate\").getDay().lowerThan(15)\n        .getItems()\n        .then((result) => {\n           //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nYear:\n\n    context.model(\"Order\")\n        .where(\"orderDate\").getMonth().equal(5)\n        .and(\"orderDate\").getDay().lowerOrEqual(10)\n        .and(\"orderDate\").getFullYear().equal(2015)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nHours:\n\n    context.model(\"Order\")\n        .where(\"orderDate\").getMonth().equal(5)\n        .and(\"orderDate\").getDay().lowerOrEqual(10)\n        .and(\"orderDate\").getHours().between(10,18)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nMinutes:\n\n    context.model(\"Order\")\n        .where(\"orderDate\").getMonth().equal(5)\n        .and(\"orderDate\").getHours().between(9,17)\n        .and(\"orderDate\").getMinutes().between(1,30)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nSeconds:\n\n    context.model(\"Order\")\n        .where(\"orderDate\").getMonth().equal(5)\n        .and(\"orderDate\").getHours().between(9,17)\n        .and(\"orderDate\").getMinutes().between(1,30)\n        .and(\"orderDate\").getSeconds().between(1,45)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\n#### Math Functions\n\nRound:\n\n    context.model(\"Product\")\n        .where(\"price\").round().lowerOrEqual(177)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nFloor:\n\n    context.model(\"Product\")\n        .where(\"price\").floor().lowerOrEqual(177)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\nCeiling:\n\n    context.model(\"Product\")\n        .where(\"price\").ceil().greaterOrEqual(177)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\n#### Methods\n\n##### and(name)\n\nPrepares a logical AND expression.\n\nParameters:\n- name: The name of field that is going to be used in this expression\n\n##### andAlso(name)\n\nPrepares a logical AND expression.\nIf an expression is already defined, it will be wrapped with the new AND expression\n\nParameters:\n- name: The name of field that is going to be used in this expression\n\n        context.model(\"Product\")\n            .where(\"category\").equal(\"Laptops\")\n            .or(\"category\").equal(\"Desktops\")\n            .andAlso(\"price\").floor().lowerOrEqual(177)\n            .getItems()\n            .then((result) => {\n                //\n            }).catch((err) =>\n            console.log(err);\n        });\n\n##### expand(...attr)\n\nParameters:\n- attr: A param array of strings which represents the field or the array of fields that are going to be expanded.\nIf attr is missing then all the previously defined expandable fields will be removed\n\nDefines an attribute or an array of attributes to be expanded in the final result. This operation should be used\nwhen a non-expandable attribute is required to be expanded in the final result.\n\n    context.model(\"Order\")\n        .where(\"customer\").equal(337)\n        .orderByDescending(\"orderDate\")\n        .expand(\"customer\")\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\n##### first()\n\nExecutes the specified query and returns the first item.\n\n    context.model(\"User\")\n        .where(\"name\").equal(\"alexis.rees@example.com\")\n        .first()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\n##### getItem()\n\nExecutes the specified query and returns the first item.\n\n    context.model(\"User\")\n        .where(\"name\").equal(\"alexis.rees@example.com\")\n        .item()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\n##### getItems()\n\nExecutes the specified query and returns an array of items.\n\n    context.model(\"Product\")\n        .where(\"category\").equal(\"Laptops\")\n        .take(10)\n        .getItems()\n        .then((result) => {\n            //\n        }).catch((err) =>\n        console.log(err);\n    });\n\n##### getList()\n\nExecutes the underlying query and returns a result set based on the specified paging parameters. The result set\ncontains the following attributes:\n\n- total (number): The total number of records\n- skip (number): The number of skipped records\n- records (Array): An array of objects which represents the query results.\n\n        context.model(\"Product\")\n            .where(\"category\").equal(\"Laptops\")\n            .skip(10)\n            .take(10)\n            .getList()\n            .then((result) => {\n                //\n            }).catch((err) =>\n            console.log(err);\n        });\n\n##### skip(val)\n\nPrepares a paging operation by skipping the specified number of records\n\nParameters:\n- val: The number of records to be skipped\n\n         context.model(\"Product\")\n                 .where(\"category\").equal(\"Laptops\")\n                 .skip(10)\n                 .take(10)\n                 .getList()\n                 .then((result) => {\n                     //\n                 }).catch((err) =>\n                 console.log(err);\n             });\n\n##### take(val)\n\nPrepares a data paging operation by taking the specified number of records\n\nParameters:\n- val: The number of records to take\n\n         context.model(\"Product\")\n                 .where(\"category\").equal(\"Laptops\")\n                 .skip(10)\n                 .take(10)\n                 .getList()\n                 .then((result) => {\n                     //\n                 }).catch((err) =>\n                 console.log(err);\n             });\n\n##### groupBy(...attr)\n\nPrepares a group by expression\n\n    context.model(\"Order\")\n     .select(\"orderedItem/model as productModel\", \"orderedItem/name as productName\",\"count(id) as orderCount\")\n     .where(\"orderDate').getFullYear().equal(2015)\n     .groupBy(\"orderedItem\")\n     .orderByDescending(\"count(id)\")\n     .take(5).getItems().then(function(result) {\n            //\n        }).catch((err) =>\n           console.log(err);\n        });\n\n##### orderBy(...attr)\n\nPrepares an ascending sorting operation\n\n    context.model(\"Product\")\n         .orderBy(\"category\",\"name\")\n         .take(25).getItems().then(function(result) {\n                //\n            }).catch((err) =>\n               console.log(err);\n            });\n\n##### thenBy(...attr)\n\n Continues a descending sorting operation\n\n     context.model(\"Product\")\n          .orderBy(\"category\")\n          .thenBy(\"name\")\n          .take(25).getItems().then(function(result) {\n                 //\n             }).catch((err) =>\n                console.log(err);\n             });\n\n##### orderByDescending(...attr)\n\n Prepares an descending sorting operation\n\n     context.model(\"Product\")\n          .orderByDescending(\"price\")\n          .take(25).getItems().then(function(result) {\n                 //\n             }).catch((err) =>\n                console.log(err);\n             });\n\n##### thenByDescending(...attr)\n\n Continues a descending sorting operation\n\n     context.model(\"Product\")\n          .orderBy(\"category\")\n          .thenByDescending(\"price\")\n          .take(25).getItems().then(function(result) {\n                 //\n             }).catch((err) =>\n                console.log(err);\n             });\n","@twilroad/bootstrapper":"## ææ¡£\n\næ´å¤ææ¡£ï¼è¯·åå¾ **[Notadd å®æ¹ææ¡£ç«ç¹](https://docs.notadd.com)** æ¥éï¼\n","@types/poly2tri":"This is a stub types definition for poly2tri.js (https://github.com/r3mi/poly2tri.js).\npoly2tri.js provides its own type definitions, so you don't need @types/poly2tri installed!","@uhhhh2/web3x":"# web3x\n\n[![Version](https://img.shields.io/npm/v/web3x.svg)](https://www.npmjs.com/package/web3x)\n[![Downloads](https://img.shields.io/npm/dw/web3x.svg)](https://www.npmjs.com/package/web3x)\n[![Downloads](https://img.shields.io/npm/dw/web3x-es.svg)](https://www.npmjs.com/package/web3x-es)\n[![GitHub Code Size](https://img.shields.io/github/languages/code-size/xf00f/web3x.svg)](https://github.com/xf00f/web3x)\n[![GitHub Stars](https://img.shields.io/github/stars/xf00f/web3x.svg)](https://github.com/xf00f/web3x/stargazers)\n[![GitHub Issues](https://img.shields.io/github/issues/xf00f/web3x.svg)](https://github.com/xf00f/web3x/issues)\n[![Coverage](https://img.shields.io/coveralls/github/xf00f/web3x/master.svg)](https://coveralls.io/github/xf00f/web3x)\n[![License: LGPL v3](https://img.shields.io/badge/License-LGPL%20v3-blue.svg)](https://github.com/xf00f/web3x/blob/master/LICENSE)\n\nTypeScript port of web3.js - for perfect types and tiny builds.\n\n![Demo](https://user-images.githubusercontent.com/44038056/48001064-5d377d00-e0ff-11e8-994f-36d165f9124e.gif)\n\n## Table of contents\n\n- [Why?](#why)\n- [Usage](#usage)\n- [Contract type safety](#contract-type-safety)\n- [The EVM provider](#the-evm-provider)\n- [Differences](#differences)\n- [Example projects](#example-projects)\n- [Documentation](#documentation)\n- [Packages](#packages)\n\n## Why?\n\nweb3.js is a very popular Ethereum library, but:\n\n- It has inaccurate typings and there's no way to to introduce type safety to contract code.\n- It's large, weighing in at ~800k uncompressed.\n\nweb3x solves the above issues and more.\n\n- It's pure TypeScript and generates contract types from ABIs.\n- It's small, with a minimum sized contract interaction weighing in at ~150k uncompressed.\n- It's expanding with additional features. For example the `EvmProvider` which provides a full inplace EVM implementation for executing contract code in your DAPP for simplified development workflows.\n\nweb3x also adopts a lean, functional design, and resolves many out the outstanding issues in the web3.js repository.\nIt is under active development, view the [CHANGELOG](CHANGELOG.md) to see updates and planned roadmap.\n\n## Usage\n\nThere are two builds of the library. `web3x` uses CommonJS style imports and is best used for Node.js backends. `web3x-es` uses ES6 imports and is best used for ES6 aware tools like Webpack.\n\n### Using inbuilt providers\n\nThe inbuilt providers are all [EIP-1193](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md) compatible, and are used as follows:\n\n```typescript\nimport { Address } from 'web3x-es/address';\nimport { WebsocketProvider } from 'web3x-es/providers';\nimport { Eth } from 'web3x-es/eth';\nimport { fromWei } from 'web3x-es/utils';\n\nasync function main() {\n  const provider = new WebsocketProvider('wss://mainnet.infura.io/ws');\n  const eth = new Eth(provider);\n  const balance = await eth.getBalance(Address.ZERO);\n  document.body.innerText = `Balance of 0 address ETH: ${fromWei(balance, 'ether')}`;\n}\n\nmain().catch(console.error);\n```\n\n### Using legacy providers, e.g. MetaMask\n\nUntil MetaMask and other providers are EIP-1193 compatible, you can use them with an adapter as follows:\n\n```typescript\nimport { LegacyProvider, LegacyProviderAdapter } from 'web3x-es/providers';\nimport { Eth } from 'web3x-es/eth';\n\ndeclare const web3: {\n  currentProvider: LegacyProvider;\n};\n\nconst eth = new Eth(new LegacyProviderAdapter(web3.currentProvider));\n```\n\nOr a shorthand version:\n\n```typescript\nimport { Eth } from 'web3x-es/eth';\nconst eth = Eth.fromCurrentProvider();\n```\n\nSee [example projects](example-projects) for more complex usage examples.\n\n## Contract type safety\n\nInteracting with contracts without type safety is tedious at best, and dangerous at worst. web3x provides a code generator called `web3x-codegen` to generate typings for contract ABIs either local, or remote from a simple configuration file called `contracts.json`.\n\n### Defining contracts.json\n\nAn example `contracts.json` looks like:\n\n```json\n{\n  \"outputPath\": \"./src/contracts\",\n  \"contracts\": {\n    \"DaiContract\": {\n      \"source\": \"etherscan\",\n      \"net\": \"mainnet\",\n      \"address\": \"0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359\"\n    },\n    \"MyTruffleContract\": {\n      \"source\": \"truffle\",\n      \"buildFile\": \"../truffle-project/build/contracts/MyContract.json\"\n    },\n    \"MyRawAbiContract\": {\n      \"source\": \"files\",\n      \"abiFile\": \"../my-contract/abi.json\",\n      \"initDataFile\": \"../my-contract/init-code.bin\"\n    }\n  }\n}\n```\n\nRun the code generator:\n\n```\nyarn web3x-codegen\n```\n\nThe generator will create 3 contracts:\n\n- For the first it uses etherscan to download the contract ABI and initialisation code at the given address, and generates the interface at `./src/contracts/DaiContract.ts`.\n- For the second it specifies a truffle build output and generates its interface at `./src/contracts/MyTruffleContract.ts`.\n- For the third it reads a raw ABI file and compiled initialisation code from local files, and generates its interface at `./src/contracts/MyRawAbiContract.ts`. The `initDataFile` property is optional but you won't be able to easily deploy the contract without it.\n\nFor an example of the code generated, take a look at this [example](example-projects/node/src/contracts/DaiContract.ts).\n\n### Using generated contracts\n\nThe following code demonstrates how to use the generated contract class. It's a similar API as used in web3.js, only now with type safety.\n\n```typescript\nimport { Address } from 'web3x/address';\nimport { fromWei } from 'web3x/utils';\nimport { WebsocketProvider } from 'web3x/providers';\nimport { Eth } from 'web3x/eth';\nimport { DaiContract } from './contracts/DaiContract';\n\nconst DAI_CONTRACT_ADDRESS = Address.fromString('0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359');\n\nasync function main() {\n  const provider = new WebsocketProvider('wss://mainnet.infura.io/ws');\n  const eth = new Eth(provider);\n\n  try {\n    const contract = new DaiContract(eth, DAI_CONTRACT_ADDRESS);\n    const daiBalance = await contract.methods.balanceOf(Address.ZERO).call();\n    console.log(`Balance of 0 address DAI: ${fromWei(daiBalance, 'ether')}`);\n  } finally {\n    provider.disconnect();\n  }\n}\n\nmain().catch(console.error);\n```\n\nDeploying contracts is trivial as well, as the bytecode is imported by `web3x-codegen` and included as part of the contract class.\nThe following code deploys an exact replica of the DAI contract on mainnet, only now you can mint your own funds.\n\n```typescript\nimport { Address } from 'web3x/address';\nimport { fromWei, toWei } from 'web3x/utils';\nimport { WebsocketProvider } from 'web3x/providers';\nimport { Eth } from 'web3x/eth';\nimport { DaiContract } from './contracts/DaiContract';\n\nasync function main() {\n  const from = Address.fromString('0x903ddd91207f737255ca93eb5885c0e087be0fc3');\n  const gasPrice = 50000;\n  const provider = new WebsocketProvider('wss://mainnet.infura.io/ws');\n  const eth = new Eth(provider);\n\n  try {\n    const contract = new DaiContract(eth);\n    await contract\n      .deploy('xf00f token')\n      .send({ from, gasPrice })\n      .getReceipt();\n    await contract.methods\n      .mint(toWei(1000, 'ether'))\n      .send({ from, gasPrice })\n      .getReceipt();\n    const balance = await contract.methods.balanceOf(from).call();\n    console.log(`Balance of ${from}: ${fromWei(balance, 'ether')}`);\n  } finally {\n    provider.disconnect();\n  }\n}\n\nmain().catch(console.error);\n```\n\n## The EVM provider\n\nThere is an implmentation of the EVM which can be used for simplifying development workflows. Assuming you are building a browser\nbased DAPP the EVM will execute contract code directly in the browser without any dependency on third party processes such as ganache.\nThis can speed up prototyping of DAPPs and their associated contract code. This is an early-stage feature, not all opcodes have been\nimplmented so YMMV.\n\nAn example of how you might use this to deploy a contract and fund an account follows. The code below will persist all state in a browsers\nIndexedDB. If you want to use an in-memory implementation you can use `levelup(memdown())` as per the test case [here](src/evm/provider/evm-provider.e2e.test.ts).\n\n```typescript\nimport { EvmProvider } from 'web3x-es/evm/provider';\nimport { Eth } from 'web3x-es/eth';\nimport { toWei } from 'web3x-es/utils';\nimport { Wallet } from 'web3x-es/wallet';\nimport { DaiContract } from './contracts/DaiContract';\n\nasync function getComponents(fresh: boolean = false) {\n  const daiContractAddrStr = window.localStorage.getItem('DaiContractAddress');\n  const daiContractAddr = !fresh && daiContractAddrStr ? Address.fromString(daiContractAddrStr) : await bootstrap();\n\n  // Load the wallet this provider was initialised with.\n  const wallet = await Wallet.fromLocalStorage('', 'provider-wallet');\n\n  // Blocks will be mined with a 1000ms delay.\n  const provider = await EvmProvider.fromLocalDb('testdb', { blockDelay: 1000, wallet });\n  const eth = new Eth(provider);\n  const daiContract = new DaiContract(eth, daiContractAddr, { gasPrice: 50000 });\n\n  return { provider, eth, daiContract, wallet };\n}\n\nasync function bootstrap() {\n  console.log('Erasing existing database.');\n  await EvmProvider.eraseLocalDb('testdb');\n\n  const provider = await EvmProvider.fromLocalDb('testdb');\n  const eth = new Eth(provider);\n\n  const wallet = new Wallet(10);\n  await wallet.saveToLocalStorage('', 'provider-wallet');\n\n  // Create all wallet accounts on the simulated chain. Will preload ETH into each account.\n  await provider.loadWallet(wallet);\n\n  const bootstrapAccount = wallet.get(0)!.address;\n  eth.defaultFromAddress = bootstrapAccount;\n\n  const daiContract = new DaiContract(eth, undefined, { gasPrice: 50000 });\n\n  // Deploy the contract.\n  await daiContract\n    .deploy(utf8ToHex('xf00f token'))\n    .send()\n    .getReceipt();\n  console.log(`Deployed DAI contract at ${daiContract.address!}`);\n\n  // Mint some DAI into the bootstrap account.\n  await daiContract.methods\n    .mint(bootstrapAccount, toWei('1000', 'ether'))\n    .send()\n    .getReceipt();\n\n  console.log(`Minted 1000 DAI into ${bootstrapAccount}`);\n\n  window.localStorage.setItem('DaiContractAddress', daiContract.address!.toString());\n  return daiContract.address!;\n}\n\nasync function main() {\n  const { provider, eth, daiContract, wallet } = getComponents();\n\n  const from = wallet.get(0)!.address;\n  const to = wallet.get(1)!.address;\n\n  // Transfer funds to recipient address.\n  await daiContract.methods\n    .transfer(to, toWei('1000', 'ether'))\n    .send({ from })\n    .getReceipt();\n\n  console.log(`Transferred 1000 DAI to ${to}`);\n}\n\nmain().catch(console.error);\n```\n\n## Differences\n\nThis is not a perfect drop in replacement for web3.js, there are differences.\n\n- Callbacks for request/response style calls no longer supported, promises only.\n- PromiEvent interface has been removed, in favour of `getTxHash()`, `getReceipt()` methods.\n- Address objects must be used instead of strings. e.g. `Address.fromString('0x903ddd91207f737255ca93eb5885c0e087be0fc3')`\n- Buffers are used for keys and data instead of `0x` prefixed strings.\n- You should explicitly import parts of the library rather then accessing them via the web3 object.\n- Sanitized some hybrid types, e.g. access wallet accounts via `wallet.get(0)` rather than `wallet[0]`.\n\n## Example projects\n\nTwo example TypeScript projects are included, one for [webpack](example-projects/webpack) and one for [node.js](example-projects/node). They are configured to work with jest for testing. Adapting them to pure JavaScript if you don't want to use TypeScript should be trivial.\n\n## Documentation\n\nAPI documentation has not yet been ported from web3.js. For now the recommended approach for familiarising yourself with the library would be the following, in preferential order:\n\n- Read the web3.js documentation at https://web3js.readthedocs.io/en/1.0/ to familiarise yourself with its API.\n- Take a look at the example projects such as the [webpack example](example-projects/webpack/src/index.ts).\n- Rely on your IDE and TypeScript to provide insight into the API.\n- Delve into the code. It's significantly easier to follow and understand than web3.js.\n\n## Packages\n\n- [web3x](https://www.npmjs.com/package/web3x) (for Node.js)\n- [web3x-es](https://www.npmjs.com/package/web3x-es) (for ES6 aware tools such as Webpack)\n","@vacom/logbook":"# Logbook\n\nA simple library with no dependencies, which uses console.log but better looks and functionality in a simple API\n\n![Logbook](http://i63.tinypic.com/sev9tg.jpg)\n\n## Installation\n\nJust install the dependency and start using\n\n```javascript\nnpm i @vacom/logbook or yarn add @vacom/logbook\n```\n\n### How to import\n\nAfter installing the dependency, just import the components you need\n\n```javascript\nimport Log from \"@vacom/logbook\";\n```\n\n## Usage\n\n```jsx\nimport Log from \"@vacom/logbook\";\n\n//Simple usage\n//args: Value\nLog.info(\"Any value, object or data type\");\n\n/** STYLES **/\n//args: Title, Value, Color\nLog.color(\"title\", \"value\", \"#2274A5\");\n\n/** STATES **/\n//args: Value\nLog.warn(\"This is a warning\");\nLog.error(\"This is a error\");\nLog.success(\"This is a success\");\nLog.time(\"This is a time log\");\n\n/** DATA **/\n//Table\n//args: Value: Array\nLog.table([{ id: 1, name: \"john\" }, { id: 2, name: \"Jack\" }]);\n\n//Simple Group\nLog.group\n  .title(\"A group\")\n  .child(\"Child\")\n  .end();\n\n//Nested Group\nLog.group\n  .title(\"A group\")\n  .child(\"Child\")\n  .title(\"Nested group\")\n  .child(\"nested child\")\n  .end()\n  .end();\n\n/** SEQUENCE **/\n\n//Trace\n//show how the code ended up at a certain point\n//args: Value\nLog.trace(\"trace\");\n\n//Assert\n//args: Condition, Value\n//Write a message to the console, only if the first argument is _false_\nLog.assert(\n  document.getElementById(\"demo\"),\n  \"You have no element with ID 'demo'\"\n);\n\n//Count\nfor (i = 0; i < 10; i++) {\n  Log.count();\n}\n\n/** UTILITIES **/\nLog.clear(); //Clears everything in the console\n```\n\n## License\n\nMIT Â© [vacom](https://github.com/vacom)\n","@webpack-utilities/test":"[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![test][test]][test-url]\n[![coverage][cover]][cover-url]\n[![code style][style]][style-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <img width=\"200\" height=\"200\" src=\"https://cdn.worldvectorlogo.com/logos/jest.svg\">\n  <a href=\"https://webpack.js.org/\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n  <h1>Test Utils</h1>\n  <p>Loader && Plugin Test Helpers</p>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm i -D @webpack-utilities/test\n```\n\n<h2 align=\"center\">Usage</h2>\n\n> Coming soon...\n\n\n[npm]: https://img.shields.io/npm/v/@webpack-utilities/test.svg\n[npm-url]: https://npmjs.com/package/@webpack-utilities/test\n\n[node]: https://img.shields.io/node/v/@webpack-utilities/test.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/webpack-utilites/test.svg\n[deps-url]: https://david-dm.org/webpack-utilities/test\n\n[test]: http://img.shields.io/travis/webpack-utilities/test.svg\n[test-url]: https://travis-ci.org/webpack-utilities/test\n\n[cover]: https://img.shields.io/coveralls/github/webpack-utilities/test.svg\n[cover-url]: https://coveralls.io/github/webpack-utilities/test\n\n[style]: https://img.shields.io/badge/code%20style-standard-yellow.svg\n[style-url]: http://standardjs.com/\n\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n","@xpertsea/vaadin-grid":"[![npm version](https://badge.fury.io/js/%40vaadin%2Fvaadin-grid.svg)](https://badge.fury.io/js/%40vaadin%2Fvaadin-grid)\n[![Published on webcomponents.org](https://img.shields.io/badge/webcomponents.org-published-blue.svg)](https://www.webcomponents.org/element/vaadin/vaadin-grid)\n[![Build Status](https://travis-ci.org/vaadin/vaadin-grid.svg?branch=master)](https://travis-ci.org/vaadin/vaadin-grid)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/vaadin/web-components?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n[![Published on Vaadin  Directory](https://img.shields.io/badge/Vaadin%20Directory-published-00b4f0.svg)](https://vaadin.com/directory/component/vaadinvaadin-grid)\n[![Stars on vaadin.com/directory](https://img.shields.io/vaadin-directory/star/vaadinvaadin-grid.svg)](https://vaadin.com/directory/component/vaadinvaadin-grid)\n\n# &lt;vaadin-grid&gt;\n\n[Live Demo â](https://vaadin.com/components/vaadin-grid/html-examples)\n|\n[API documentation â](https://vaadin.com/components/vaadin-grid/html-api)\n\n[&lt;vaadin-grid&gt;](https://vaadin.com/components/vaadin-grid) is a free, high quality data grid / data table Web Component, part of the [Vaadin components](https://vaadin.com/components).\n\n<!---\n```\n<custom-element-demo>\n  <template>\n    <script src=\"../webcomponentsjs/webcomponents-lite.js\"></script>\n    <link rel=\"import\" href=\"../iron-ajax/iron-ajax.html\">\n    <link rel=\"import\" href=\"vaadin-grid.html\">\n    <link rel=\"import\" href=\"vaadin-grid-selection-column.html\">\n    <link rel=\"import\" href=\"vaadin-grid-sort-column.html\">\n    <next-code-block></next-code-block>\n  </template>\n</custom-element-demo>\n```\n-->\n```html\n  <vaadin-grid theme=\"row-dividers\" column-reordering-allowed multi-sort>\n    <vaadin-grid-selection-column auto-select frozen></vaadin-grid-selection-column>\n    <vaadin-grid-sort-column width=\"9em\" path=\"firstName\"></vaadin-grid-sort-column>\n    <vaadin-grid-sort-column width=\"9em\" path=\"lastName\"></vaadin-grid-sort-column>\n    <vaadin-grid-column id=\"addresscolumn\" width=\"15em\" flex-grow=\"2\" header=\"Address\"></vaadin-grid-column>\n  </vaadin-grid>\n\n  <script>\n    // Customize the \"Address\" column's renderer\n    document.querySelector('#addresscolumn').renderer = (root, grid, rowData) => {\n      root.textContent = `${rowData.item.address.street}, ${rowData.item.address.city}`;\n    };\n\n    // Populate the grid with data\n    const grid = document.querySelector('vaadin-grid');\n    fetch('https://demo.vaadin.com/demo-data/1.0/people?count=200')\n      .then(res => res.json())\n      .then(json => grid.items = json.result);\n  </script>\n```\n\n[<img src=\"https://raw.githubusercontent.com/vaadin/vaadin-grid/master/screenshot.png\" alt=\"Screenshot of vaadin-grid, using the default Lumo theme\">](https://vaadin.com/components/vaadin-grid)\n\n## Installation\n\nThe Vaadin components are distributed as Bower and npm packages.\nPlease note that the version range is the same, as the API has not changed.\nYou should not mix Bower and npm versions in the same application, though.\n\nUnlike the official Polymer Elements, the converted Polymer 3 compatible Vaadin components\nare only published on npm, not pushed to GitHub repositories.\n\n### Polymer 2 and HTML Imports Compatible Version\n\nInstall `vaadin-grid`:\n\n```sh\nbower i vaadin/vaadin-grid --save\n```\n\nOnce installed, import it in your application:\n\n```html\n<link rel=\"import\" href=\"bower_components/vaadin-grid/vaadin-grid.html\">\n```\n### Polymer 3 and ES Modules Compatible Version\n\nInstall `vaadin-grid`:\n\n```sh\nnpm i @vaadin/vaadin-grid --save\n```\n\nOnce installed, import it in your application:\n\n```js\nimport '@vaadin/vaadin-grid/vaadin-grid.js';\n```\n\n## Getting started\n\nVaadin components use the Lumo theme by default.\n\nTo use the Material theme, import the correspondent file from the `theme/material` folder.\n\n## Entry points\n\n- The component with the Lumo theme:\n\n  `theme/lumo/vaadin-grid.html`\n\n- The component with the Material theme:\n\n  `theme/material/vaadin-grid.html`\n\n- Alias for `theme/lumo/vaadin-grid.html`:\n\n  `vaadin-grid.html`\n\n\n## Running demos and tests in browser\n\n1. Fork the `vaadin-grid` repository and clone it locally.\n\n1. Make sure you have [npm](https://www.npmjs.com/) installed.\n\n1. When in the `vaadin-grid` directory, run `npm install` and then `bower install` to install dependencies.\n\n1. Run `polymer serve --open`, browser will automatically open the component API documentation.\n\n1. You can also open demo or in-browser tests by adding **demo** or **test** to the URL, for example:\n\n  - http://127.0.0.1:8080/components/vaadin-grid/demo\n  - http://127.0.0.1:8080/components/vaadin-grid/test\n\n\n## Running tests from the command line\n\n1. When in the `vaadin-grid` directory, run `polymer test`\n\n\n## Following the coding style\n\nWe are using [ESLint](http://eslint.org/) for linting JavaScript code. You can check if your code is following our standards by running `gulp lint`, which will automatically lint all `.js` files as well as JavaScript snippets inside `.html` files.\n\n\n## Big Thanks\n\nCross-browser Testing Platform and Open Source <3 Provided by [Sauce Labs](https://saucelabs.com).\n\n\n## Contributing\n\n  To contribute to the component, please read [the guideline](https://github.com/vaadin/vaadin-core/blob/master/CONTRIBUTING.md) first.\n\n\n## License\n\nApache License 2.0\n\nVaadin collects development time usage statistics to improve this product. For details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\n","a2-file-drop":"# Introduction\n\nAllows you to place multiple drag and drop hotspots onto a webpage.\n\n* Multiple observable streams can be setup for dropped files\n* Multiple hotspots can provide files to a shared stream\n* Only one stream will highlight at a time (See note below)\n* Supports both drag and drop and file dialogs\n* File data is normalised for ease of use\n  * Where possible file path information is retained - if a folder is dropped\n\nNOTE: If multiple hotspots are defined for a single stream then all those\nhotspots will activate when a user hovers over any of them. This improves\ndiscoverability.\n\n\n## Usage\n\nNote:: You can create your own directive that is customised for your application.\n`DropService` does all the heavy lifting allowing maximum flexibility for app integration.\n\n### Drag and Drop Directive\n\n1. Include the directive in your Component or Directive\n     * `import {DropTarget} from 'a2-file-drop/dist/drop-target';`\n2. Add the directive to the target elements\n     * `<div drop-target drop-stream=\"media-uploads\" drop-indicate=\"hover-class\"></div>`\n\n### File Input Directive\n\n1. Include the directive in your Component or Directive\n     * `import {FileStream} from 'a2-file-drop/dist/file-stream';`\n2. Add the directive to the target elements\n     * `<input type=\"file\" multiple file-stream=\"media-uploads\">`\n\n### Processing the files once they have been dropped\n\n1. Create a service that will `import {DropService} from 'a2-file-drop/dist/drop-service';`\n2. Ensure dropservice is only initialised once `bootstrap(App, [DropService]);`\n3. Observe events coming from the relevent file stream\n    * Inject the dependency `constructor(dropService: DropService) {}`\n    * `var stream = dropService.getStream('media');`\n    * `stream.filter().map()` etc etc\n    * then:\n\n```typescript\n\nstream.subscribe((obj) => {\n    if (obj.data && obj.event === 'drop') {\n        obj.data.promise.then((data) => {\n            // At this point all file data has been collected\n            console.log(data.files);\n        });\n    }\n});\n\n// OR\n\nstream.filter((obj) => {\n    // Files only available on a drop event\n    return obj.data && obj.data.length > 0;\n}).flatMap((obj) => {\n    // Wait for the files to be collected\n    return obj.data.promise;\n}).map((obj) => {\n    // Return just the array of files\n    return obj.files;\n}).subscribe((files) => {\n    console.log(files);\n});\n\n```\n\nThe subscription emit events:\n\n* `'over'`: There is currently a hover event\n* `'left'`: There is no more hover event\n* `'drop'`: Files have been dropped or selected\n\n\n## Options\n\n* `drop-target=\"#selector\"` if you want to use a different element as your actual target (html, body etc)\n    * This makes drop box style apps where the whole page is a drop target possible\n    * Defaults to the element defined on if no selector is provided\n* `drop-stream=\"stream name\"` is the name your upload logic will use to recieve dropped file data\n* `drop-indicate=\"class-name\"` is the class added to the drop-target when the mouse pointer is above\n\n\n## Building from src\n\nThe project is written in typescript and transpiled into ES5.\n\n1. Install TypeScript: `npm install -g typescript` (if you haven't already)\n2. Configure compile options in `tsconfig.json`\n3. Perform build using: `tsc`\n\nYou can find more information here: https://github.com/Microsoft/TypeScript/wiki/tsconfig.json\n\n## Scripts\n\n1. Build Script: `npm run build`\n2. Test Script: `npm run test`\n\n\n## Publishing\n\n1. Sign up to https://www.npmjs.com/\n2. Configure `package.json` https://docs.npmjs.com/files/package.json\n3. run `npm publish` https://docs.npmjs.com/cli/publish\n\n\n# License\n\nMIT\n","ac-rev-hash":"# ac-rev-hash\n> Create a hash for file revving\n\nIt will create a `md5` hash from the input buffer and slice it to 20 characters,\nwhich is unique enough for this purpose.\n\n\n## Install\n\n```\n$ npm install --save ac-rev-hash\n```\n\n\n## Usage\n\n```js\nvar fs = require('fs');\nvar revHash = require('ac-rev-hash');\nvar buffer = fs.readFileSync('unicorn.png');\n\nrevHash(buffer);\n//=> 'bb9d8fe615bb9d8fe615'\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n","aez.wasm":"# aez.wasm [![Travis CI](https://img.shields.io/travis/nazar-pc/aez.wasm/master.svg?label=Travis%20CI)](https://travis-ci.org/nazar-pc/aez.wasm)\n[AEZ cipher](http://web.cs.ucdavis.edu/~rogaway/aez/) compiled to WebAssembly using Emscripten and optimized for small size\n\nNOTE from C implementation:\n```\n// ** This version is slow and susceptible to side-channel attacks. **\n// ** Do not use for any purpose other than to understand AEZ.      **\n```\n\n## How to install\n```\nnpm install aez.wasm\n```\n\n## How to use\nNode.js:\n```javascript\nvar aez = require('aez.wasm')\n\naez.ready(function () {\n    var plaintext            = Buffer.from('37c8f1a1c981c04263769feb059be120', 'hex');\n    var ad                   = Buffer.from('38e7de89bfabf8b4064118449633e2adb942c22b63c9c0971d19d6845dedd9a0', 'hex');\n    var nonce                = Buffer.from('54d3b0f09e55592d449c5117', 'hex');\n    var key                  = Buffer.from('ead50aed64ee3bd8925b7fbbbe619cdf803cbcf386fccce48ea6b921c36efdb821e47fe3fbdf1a0a90e36d29467797ea', 'hex');\n    var ciphertext_expansion = 16;\n    var ciphertext = aez.encrypt(plaintext, ad, nonce, key, ciphertext_expansion);\n    console.log(ciphertext);\n    var plaintext_decrypted = aez.decrypt(ciphertext, ad, nonce, key, ciphertext_expansion);\n    console.log(plaintext_decrypted);\n});\n```\nBrowser:\n```javascript\nrequirejs(['aez.wasm'], function (aez) {\n    aez.ready(function () {\n        var plaintext            = Buffer.from('37c8f1a1c981c04263769feb059be120', 'hex');\n        var ad                   = Buffer.from('38e7de89bfabf8b4064118449633e2adb942c22b63c9c0971d19d6845dedd9a0', 'hex');\n        var nonce                = Buffer.from('54d3b0f09e55592d449c5117', 'hex');\n        var key                  = Buffer.from('ead50aed64ee3bd8925b7fbbbe619cdf803cbcf386fccce48ea6b921c36efdb821e47fe3fbdf1a0a90e36d29467797ea', 'hex');\n        var ciphertext_expansion = 16;\n        var ciphertext = aez.encrypt(plaintext, ad, nonce, key, ciphertext_expansion);\n        console.log(ciphertext);\n        var plaintext_decrypted = aez.decrypt(ciphertext, ad, nonce, key, ciphertext_expansion);\n        console.log(plaintext_decrypted);\n    });\n})\n```\n\n# API\n### aez.ready(callback)\n* `callback` - Callback function that is called when WebAssembly is loaded and library is ready for use\n\n### aez.encrypt(plaintext : Uint8Array, ad : Uint8Array, nonce : Uint8Array, key : Uint8Array, ciphertext_expansion : number) : Uint8Array\nEncrypts `plaintext`, returns ciphertext. Will throw `Error` if encryption fails.\n\n* `plaintext` - Arbitrary size plaintext\n* `ad` - Arbitrary size associated data\n* `nonce` - Arbitrary size nonce\n* `key` - Arbitrary size key\n* `ciphertext_expansion` - How much longer ciphertext must be comparing to plaintext (read AEZ paper for details)\n\n### aez.encrypt(ciphertext : Uint8Array, ad : Uint8Array, nonce : Uint8Array, key : Uint8Array, ciphertext_expansion : number) : Uint8Array\nDecrypts `ciphertext`, returns plaintext. Will throw `Error` if decryption fails.\n\n* `ciphertext` - Ciphertext\n* `ad` - Arbitrary size associated data\n* `nonce` - Arbitrary size nonce\n* `key` - Arbitrary size key\n* `ciphertext_expansion` - How much shorter plaintext must be comparing to ciphertext (read AEZ paper for details)\n\nTake a look at `src/index.ls` for JsDoc sections with arguments and return types as well as methods description, look at `tests/index.ls` for usage examples.\n\n## Contribution\nFeel free to create issues and send pull requests (for big changes create an issue first and link it from the PR), they are highly appreciated!\n\nWhen reading LiveScript code make sure to configure 1 tab to be 4 spaces (GitHub uses 8 by default), otherwise code might be hard to read.\n\n## License\nFree Public License 1.0.0 / Zero Clause BSD License\n\nhttps://opensource.org/licenses/FPL-1.0.0\n\nhttps://tldrlegal.com/license/bsd-0-clause-license\n","aframe-super-hot-html-loader":"## aframe-super-hot-loader\n\n[aframe]: https://aframe.io\n[hmr]: https://webpack.js.org/concepts/hot-module-replacement/\n\nWebpack loaders for enabling [Hot Module Replacement][hmr] on [A-Frame][aframe]\nHTML, components, and shaders.\n\nLive reload A-Frame, components, and shaders. Never refresh the page during\ndevelopment again!\n\n**[Watch Video](https://youtu.be/uh_RQay3x80)**\n\n### Usage\n\n```\nnpm install --save aframe-super-hot-loader\nnpm install --save aframe-super-hot-html-loader\n```\n\nThere are two separate Webpack loaders, one for JS and one for HTML. In your\nWebpack config:\n\n```\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        test: /\\.js/,\n        exclude: /(node_modules)/,\n        use: ['aframe-super-hot-loader']\n      },\n      {\n        test: /\\.html/,\n        exclude: /(node_modules)/,\n        use: ['aframe-super-hot-html-loader']\n      }\n    ]\n  }\n  // ...\n}\n```\n\n[wds]: https://webpack.js.org/configuration/dev-server/\n\nThen run [webpack-dev-server][wds] with `hot` enabled:\n\n```\nwebpack-dev-server --hot --inline\n```\n\nor in your Webpack config:\n\n```\nmodule.exports = {\n  devServer: {\n    hot: true\n  }\n};\n```\n\n### Example\n\nThere's a boilerplate example in the `examples/` directory:\n\n```\ncd examples\nnpm install\nnpm run start\n```\n\nThen try it out by modifying files. If you'd like to incorporate into your own\nproject, you can start from that boilerplate base and / or absorb the Webpack\nconfiguration.\n","ajonp-video-capture":"![Built With Stencil](https://img.shields.io/badge/-Built%20With%20Stencil-16161d.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE5LjIuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA1MTIgNTEyIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTEyOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI%2BCjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI%2BCgkuc3Qwe2ZpbGw6I0ZGRkZGRjt9Cjwvc3R5bGU%2BCjxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik00MjQuNywzNzMuOWMwLDM3LjYtNTUuMSw2OC42LTkyLjcsNjguNkgxODAuNGMtMzcuOSwwLTkyLjctMzAuNy05Mi43LTY4LjZ2LTMuNmgzMzYuOVYzNzMuOXoiLz4KPHBhdGggY2xhc3M9InN0MCIgZD0iTTQyNC43LDI5Mi4xSDE4MC40Yy0zNy42LDAtOTIuNy0zMS05Mi43LTY4LjZ2LTMuNkgzMzJjMzcuNiwwLDkyLjcsMzEsOTIuNyw2OC42VjI5Mi4xeiIvPgo8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNDI0LjcsMTQxLjdIODcuN3YtMy42YzAtMzcuNiw1NC44LTY4LjYsOTIuNy02OC42SDMzMmMzNy45LDAsOTIuNywzMC43LDkyLjcsNjguNlYxNDEuN3oiLz4KPC9zdmc%2BCg%3D%3D&colorA=16161d&style=flat-square)\n\n# Video Capture\n\nThis is a stencil to build a video capture Web Component.\n\n## Using this component\n\n### Script tag\n\n- [Publish to NPM](https://docs.npmjs.com/getting-started/publishing-npm-packages)\n- Put a script tag similar to this `<script src='https://unpkg.com/ajonp-video-capture@0.0.1/dist/ajonp.js'></script>` in the head of your index.html\n- Then you can use the element anywhere in your template, JSX, html etc\n\n### Node Modules\n- Run `npm install ajonp-video-capture --save`\n- Put a script tag similar to this `<script src='node_modules/ajonp-video-capture/dist/myname.js></script>` in the head of your index.html\n- Then you can use the element anywhere in your template, JSX, html etc\n\n### In a stencil-starter app\n- Run `npm install ajonp-video-capture --save`\n- Add `{ name: 'ajonp-video-capture' }` to your [collections](https://github.com/ionic-team/stencil-starter/blob/master/stencil.config.js#L5)\n- Then you can use the element anywhere in your template, JSX, html etc\n# stencil-video\n","alagator":"# alagator\r\n\r\nWrite algorithms that can be re-used for synchronous and asynchronous code using promises and `yield`\r\n\r\n[![Build Status](https://travis-ci.org/ForbesLindesay/alagator.png?branch=master)](https://travis-ci.org/ForbesLindesay/alagator)\r\n[![Dependency Status](https://gemnasium.com/ForbesLindesay/alagator.png)](https://gemnasium.com/ForbesLindesay/alagator)\r\n[![NPM version](https://badge.fury.io/js/alagator.png)](http://badge.fury.io/js/alagator)\r\n\r\n## Installation\r\n\r\n    npm install alagator\r\n\r\n## Example\r\n\r\nA fully backwards compatible version of [@substack](https://github.com/substack)'s [mkdirp](https://github.com/substack/node-mkdirp/blob/master/index.js) but without writing the algorithm out twice:\r\n\r\n```js\r\nvar path = require('path')\r\nvar fs = require('fs')\r\n\r\nvar Promise = require('promise')\r\nvar alagator = require('alagator')\r\n\r\nmodule.exports = mkdirpFactory(true, Promise.denodeify(fs.mkdir), Promise.denodeify(fs.stat))\r\nmodule.exports.sync = mkdirpFactory(false, fs.mkdirSync, fs.statSync)\r\n\r\nmodule.exports.mkdirp = module.exports.mkdirP = module.exports\r\n\r\nfunction mkdirpFactory(async, mkdir, stat) {\r\n  var rec = alagator(function *(p, mode, made) {\r\n    if (mode === undefined) {\r\n      mode = 0777 & (~process.umask());\r\n    }\r\n    if (!made) made = null;\r\n\r\n    if (typeof mode === 'string') mode = parseInt(mode, 8);\r\n    p = path.resolve(p);\r\n\r\n    try {\r\n      yield mkdir(p, mode);\r\n      made = made || p;\r\n    }\r\n    catch (err0) {\r\n      switch (err0.code) {\r\n        case 'ENOENT' :\r\n          made = yield rec(path.dirname(p), mode, made);\r\n          yield rec(p, mode, made);\r\n          break;\r\n\r\n        // In the case of any other error, just see if there's a dir\r\n        // there already.  If so, then hooray!  If not, then something\r\n        // is borked.\r\n        default:\r\n          var stat;\r\n          try {\r\n              stat = yield stat(p);\r\n          }\r\n          catch (err1) {\r\n              throw err0;\r\n          }\r\n          if (!stat.isDirectory()) throw err0;\r\n          break;\r\n      }\r\n    }\r\n\r\n    return made;\r\n  }, async)\r\n  return rec\r\n}\r\n```\r\n\r\n## API\r\n\r\n### alagator(generatorFunction, isAsync)\r\n\r\nisAsync defaults to `true`.\r\n\r\nThe `alagator` method takes a generator function, and then either `true` (for async) or `false` (for sync).  If `false` is passed, it makes `yield` act as a pass through, so the method runs fully synchronously.  If `true` is passed, it makes `yield` await the resolution of a promise (or array of promises) so that the function becomes async (it also uses `Promise.nodeify` to support both callback and promise based use).  The above mkdirp example could be used in any of the following 3 ways:\r\n\r\n```js\r\nvar mkdirp = require('mkdirp')\r\n\r\nmkdirp('/foo/bar', function(err) {\r\n  if (err) throw err\r\n  console.log('/foo/bar exists')\r\n})\r\n\r\n//or\r\n\r\nmkdirp('/foo/bar')\r\n  .then(function() {\r\n    console.log('/foo/bar exists')\r\n  })\r\n  .done()\r\n\r\n//or\r\n\r\nmkdirp.sync('/foo/bar')\r\nconsole.log('/foo/bar exists')\r\n```\r\n\r\n### spawn(generatorFunction, isAsync)\r\n\r\nExactly as above, except the function is immediately called with no arguments.\r\n\r\n\r\n### use with other promise libraries\r\n\r\nIf you want the promise returned from async versions of your algorithms to be of a specific type (other than [promise](https://github.com/then/promise)) we've got you covered.  Simply pass a wrap function in place of `true`:\r\n\r\n```js\r\nvar Q = require('q')\r\n\r\nmodule.exports = mkdirpFactory(Q, Q.denodeify(fs.mkdir), Q.denodeify(fs.stat))\r\nmodule.exports.sync = mkdirpFactory(false, fs.mkdirSync, fs.statSync)\r\n```\r\n\r\nThis will still make use of the same [promise](https://github.com/then/promise) library internally, but externally will exclusively use Q.\r\n\r\n## License\r\n\r\n  MIT","am-bucker":"What is it\n==========\n\nBucker is a simple logging module that has everything you need to make your logs sane, readable, and useful.\n\n\nUsage\n=====\n\n```javascript\nvar logger = require('bucker').createLogger(opts, module);\n\nlogger.info('informational message');\nlogger.debug('debug message');\nlogger.warn('warning');\nlogger.error('error');\nlogger.log('also works for informational messsages');\nlogger.module('something_else').info('and you can override the module name temporarily if you want');\nlogger.tags(['showing', 'off']).info('and we also support tags now');\n```\n\nWhere opts is an optional object containing your configuration options, and the module reference is optionally used for namespacing your logs and can be omitted.\n\nLog levels available are, debug, info, warn, and error. When specifying a level in your initial options, items will only be logged if they are equal to or above the level chosen. For example, if options contains a level of 'info', debug messages will be ignored while info, warn, and error level messages will be logged.\n\nMessages are passed through [util.format](http://nodejs.org/api/util.html#util_util_format_format) so can be more than simple strings, and work very similar to console.log.\n\nIncluded in the logger is a middleware for connect/express that writes access logs, to use it simply add it to your middleware stack\n\n```javascript\napp.use(logger.middleware());\n```\nIn addition to the connect middleware, bucker also exports a Hapi plugin. To use it, simply load it into your plugins\n\n```javascript\npack.require('bucker', { .. opts .. }, function (err) {\n  if (err) console.error('failed loading bucker plugin');\n});\n```\n\n\nFrontend Usage\n==============\n\nThanks to Johannes Boyne, there exists a module to relay frontend logs to a receiver on your server for storage and display. You can read more about it [here](https://github.com/johannesboyne/bucker-receiver)\n\n\nOptions\n=======\n\n* app - filename to save application log items to.\n* error - filename to save error log items to. if this is not specified, errors will be combined with the regular app log if one is available.\n* access - filename to save access log items to.\n* console - boolean specifying if we should print to console or not.\n* syslog - a host:port combination to send logs to via syslog (e.g. 'localhost:6500'). port defaults to 514 if not specified. this may also be specified as an object, as in ``` { host: 'localhost', port: 514 } ```\n* logstash - an object describing the host to ship logstash formatted events to, this is documented further below\n* level - minimum level to log, this can be specified as a string (i.e. 'error') or as a number (i.e. 3). items that are below this level will not be logged.\n* name - name to use when namespacing logs. note that this will override the module reference if one is passed.\n* handleExceptions - a boolean to indicate whether or not we should add an uncaughtException handler. the handler will log the event as an exception, then process.exit(1).\n* hapi - when using bucker for logging as a hapi plugin we add a handler to the server's 'log' event and log the data with an appropriate log level based on the tags provided. You can prevent this behavior by adding the property 'handleLog', set as false to the hapi object ``` hapi: { handleLog: false } ```\n\nThe above list describes the most basic usage of each option. Below, I've written out an example config object that shows all available options.\nIn addition to the 'app' option, individual configurations may be set for each log level supporting the same options as the 'app' and 'error' items. If no level options are specified, the defaults (those passed to the 'app' and/or 'error' options) will be used.\n\n```javascript\n{ file: {\n    filename: '/path/to/file',\n    format: ':level :time :data',\n    timestamp: 'HH:mm:ss',\n    accessFormat: ':time :level :method :status :url'\n  },\n  console: {\n    color: false\n  },\n  syslog: {\n    host: 'localhost',\n    port: 514,\n    facility: 18\n  },\n  logstash: {\n    redis: true, // send as redis pubsub messages\n    // udp: true, // or send directly over UDP, *NOTE* you can only use one or the other, never both\n    host: '127.0.0.1', // defaults to localhost\n    port: 12345, // defaults to 6379 for redis, 9999 for udp\n    key: 'bucker_logs', // defaults to 'bucker', this is only used for the redis transport\n    channel: true, // use redis pubsub\n    list: false, // use a redis list *NOTE* if channel is false, list usage is forced\n    source_host: 'bacon.com' // this sets the @source_host field in logstash\n  }\n}\n```\n\nNote that the format and timestamp options are not available to the syslog facility, though they are available to file and console. the accessFormat option is available for every transport. Timestamp may be set to false to prevent timestamps from being printed. Obviously, the filename option is exclusive to the file transport. Additionally, the color option is exclusive to the console transport and the facility, host, and port options to the syslog transport.\n\nNone of the format options are available to the logstash transport, since it sends logs using logstash's internal format.\n\nIf you have questions, feature requests, or comments, please create an issue and I'll respond to them as soon as I'm able.\n","ambsa-kit":"# Ambsa Kit\n\n[![Build Status](https://travis-ci.org/allansachsambia/AmbsaKit.svg?branch=master)](https://travis-ci.org/allansachsambia/AmbsaKit)\n[![npm](https://img.shields.io/npm/v/ambsa-kit.svg?style=flat-square)](https://www.npmjs.com/package/ambsa-kit)\n\nReact components for web development.\n\n## Table of Contents\n\n- [Installation](#installation)\n- [Examples](#examples)\n  - [CodeSandbox Examples](#codesandbox-examples)\n  - [Build Local Examples](#build-local-examples)\n- [Components](#components)\n  - [AmbsaHero](#ambsa-hero)\n  - [AmbsaFooter](#ambsa-footer)\n  - [AmbsaNav](#ambsa-nav)\n  - [AmbsaBreadcrumbs](#ambsa-breadcrumbs)\n  - [AmbsaArticle](#ambsa-article)\n- [Credit](#credit)\n\n## Installation\n\nTo install:\n\n```\nnpm install ambsa-kit\n```\n\n## Examples\n\n### CodeSandbox Examples\n\n- [AmbsaHero](https://codesandbox.io/s/w79zppvv7l)\n- [AmbsaFooter](https://codesandbox.io/s/wkv6p61748)\n- [AmbsaNav](https://codesandbox.io/s/w6zpwkz1vk)\n- [AmbsaBreadcrumbs](https://codesandbox.io/s/rroz2616zq)\n- [AmbsaArticle](https://codesandbox.io/s/kwpvx54mr3)\n\n### Build Local Examples\n\nTo build an example clone the project, run the installer and start the app:\n\n```\ngit clone https://github.com/allansachsambia/AmbsaKit.git\n```\n\n## Components\n\n### Ambsa Hero\n\n![image](https://github.com/allansachsambia/AmbsaKit/blob/master/_mockups/ambsa-hero/with-children/desktop.png?raw=true)\n\n##### Use\n\n```\nimport { AmbsaNav } from \"ambsa-kit\";\n\nexport default class Index extends React.Component {\n  render() {\n    const image = \"https://picsum.photos/1800/1224/?random\";  \n    return (\n      <div>\n        <AmbsaHero image={image} stick=\"right\" brightness=\"lighter\">\n          <div>\n            <h1 className=\"ambsa-hero-display\">Ambsa Hero</h1>\n            <p className=\"ambsa-hero-lead\">\n              Maecenas gravida, sem id tincidunt aliquam, lorem nunc vulputate\n              mauris, non gravida arcu nisi quis tellus. Integer euismod\n              molestie elit, et euismod felis tristique et. Proin tristique\n              tempor erat, nec scelerisque diam varius quis. Ut convallis mi non\n              tortor egestas vulputate. Maecenas eu varius dui. Duis eget augue\n              nec orci fringilla bibendum.\n            </p>\n          </div>\n        </AmbsaHero>\n      </div>\n    );\n  }\n}\n```\n\n##### Properties\n\nProperty        |       Type            |       Description\n:---------------|:----------------------|:--------------------------------\nimage           | String                | optional; background image url\nstick           | String                | optional; background-position position helper for the background image limited to max-width: 1300px.  Options: '***left***', '***center***', and '***right***'\nbrightness      | String                | optional; sets the brightness of the background image. Options: '***darker***', '***dark***', '***light***', and '***lighter***'.\n\n### Ambsa Footer\n\n![image](https://github.com/allansachsambia/AmbsaKit/blob/master/_mockups/ambsa-footer/desktop.png?raw=true)\n\n##### Use\n\nAmbsaFooter takes two values as attributes: `about` adds content under\nthe about section, and `copyright` adds copyright content to the bottom of\nthe page.  Both should be of type `String`.  AmbsaFooter also accepts nested\ncontent and expects two div elements with specific classNames, the first is\n`explore`, the second is `icons`.  The element with the explore className should\nhave nested spans as children which themselves contain links related to the\nsite.  The icons section expects links that wrap icons.  FontAwesome works\nwell but incorporating it is optional.\n\n```\nimport { AmbsaFooter } from \"ambsa-kit\";\n\nexport default class Index extends React.Component {\n  render() {\n    const about = \"Qui ipsum elit ex fabulas.\";\n    const copyright = \"Copyright Â© 2018 Allan Sachs-Ambia\";\n    return (\n      <div>\n      <AmbsaFooter about={about} copyright={copyright}>\n        <div className=\"explore\">\n          <span>\n            <i className=\"fa fa-angle-right\" />\n            <a href=\"http://tinytuba.com/\">Tiny Tuba</a>\n          </span>\n          <span>\n            <i className=\"fa fa-angle-right\" />\n            <a href=\"http://heeeeeeeey.com/\">Heeeeeeeey</a>\n          </span>\n          <span>\n            <i className=\"fa fa-angle-right\" />\n            <a href=\"http://endless.horse/\">Endless Horse</a>\n          </span>\n          <span>\n            <i className=\"fa fa-angle-right\" />\n            <a href=\"http://www.fallingfalling.com/\">Falling</a>\n          </span>\n          <span>\n            <i className=\"fa fa-angle-right\" />\n            <a href=\"http://beesbeesbees.com/\">Bees Bees Bees</a>\n          </span>\n        </div>\n        <div className=\"icons\">\n          <a href=\"http://www.mail.com\">\n            <i className=\"fa fa-envelope\" aria-hidden=\"true\" />\n          </a>\n          <a href=\"http://www.facebook.com\">\n            <i className=\"fa fa-facebook\" aria-hidden=\"true\" />\n          </a>\n          <a href=\"http://www.twitter.com\">\n            <i className=\"fa fa-twitter\" aria-hidden=\"true\" />\n          </a>\n          <a href=\"http://www.instagram.com\">\n            <i className=\"fa fa-instagram\" aria-hidden=\"true\" />\n          </a>\n        </div>\n      </AmbsaFooter>\n      </div>\n    );\n  }\n}\n```\n\n##### Properties\n\nProperty        |       Type            |       Description\n:---------------|:----------------------|:--------------------------------\nabout           | String                | optional; a short website description\ncopyright       | String                | optional; copyright text\n\n### Ambsa Nav\n\n<!-- Pending -->\n![image](https://github.com/allansachsambia/AmbsaKit/blob/master/_mockups/ambsa-nav/ambsa-nav-closed.png?raw=true)\n\n![image](https://github.com/allansachsambia/AmbsaKit/blob/master/_mockups/ambsa-nav/ambsa-nav-opened.png?raw=true)\n\n##### Use\n\nAmbsaNav takes one prop named 'brand' which expects an image passed in as JSX.  \nThis element can be resized and styled. The child elements passed in will end\nup as the content in the center of the menu area after the pancake button has\nbeen clicked and the navbar expanded, for example: a list of links, with a\ntitle.\n\n```\nimport BallOfYarn from \"./../svgs/BallOfYarn\";\nimport { AmbsaNav } from \"ambsa-kit\";\n\nexport default function App() {\n  return (\n    <div>\n      <AmbsaNav brand={<BallOfYarn />}>\n        <div className=\"menu-title\">MENU</div>\n        <ul>\n          <li className=\"item\">\n            <a href=\"#\">LINK 1</a>\n          </li>\n          <li className=\"item\">\n            <a href=\"#\">LINK 2</a>\n          </li>\n          <li className=\"item\">\n            <a href=\"#\">LINK 3</a>\n          </li>\n          <li className=\"item\">\n            <a href=\"#\">LINK 4</a>\n          </li>\n          <li className=\"item\">\n            <a href=\"#\">LINK 5</a>\n          </li>\n          <li className=\"item\">\n            <a href=\"#\">LINK 6</a>\n          </li>\n        </ul>\n      </AmbsaNav>\n    </div>\n  );\n}\n\n```\n\n##### Properties\n\nProperty        |       Type            |       Description\n:---------------|:----------------------|:--------------------------------\nbrand           | Object                | optional; an image passed in as JSX\n\n### Ambsa Breadcrumbs\n\n<!-- Pending -->\n![image](https://github.com/allansachsambia/AmbsaKit/blob/master/_mockups/ambsa-breadcrumbs/All.png?raw=true)\n\n##### Use\n\nNest links and span elements inside AmbsaBreadcrumbs to make breadcrumbs.  To\nchange separators just pass your JSX svg image or plain <img> in as the value\nof the separator attribute and override the styles to resize.\n\n```\nimport { AmbsaBreadcrumbs } from \"ambsa-kit\";\n\nexport default function App() {\n  return (\n    <div>\n      <AmbsaBreadcrumbs>\n        <a href=\"#\">Link 1</a>\n        <a href=\"#\">Link 2</a>\n        <a href=\"#\">Link 3</a>\n        <a href=\"#\">Link 4</a>\n        <span>Link 5</span>\n      </AmbsaBreadcrumbs>\n    </div>\n  );\n}\n```\n\n##### Properties\n\nProperty        |       Type            |       Description\n:---------------|:----------------------|:--------------------------------\nseparator       | Object                | optional; an image passed in as JSX\n\n### Ambsa Article\n\n<!-- Pending -->\n![image](https://github.com/allansachsambia/AmbsaKit/blob/master/_mockups/ambsa-article/desktop.png?raw=true)\n\n##### Use\n\nInclude the background image source and title, and nest paragraphs inside\nAmbsaArticle to produce the article.\n\n```\nimport { AmbsaArticle } from \"ambsa-kit\";\n\nconst image =\n  \"https://github.com/allansachsambia/AmbsaKit/blob/master/examples/src/media/tim-mossholder-530857-unsplash.jpg?raw=true\";\n\nexport default function App() {\n  return (\n    <div className=\"ambsa-kit ambsa-kit-article\">\n      <AmbsaArticle title=\"Article\" image={image}>\n        <p>\n          Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n          accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae\n          ab illo inventore veritatis et quasi architecto beatae vitae dicta\n          sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\n          aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos\n          qui ratione voluptatem sequi nesciunt.{\" \"}\n        </p>\n        <p>\n          Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet,\n          consectetur, adipisci velit, sed quia non numquam eius modi tempora\n          incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut\n          enim ad minima veniam, quis nostrum exercitationem ullam corporis\n          suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis\n          autem vel eum iure reprehenderit qui in ea voluptate velit esse quam\n          nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo\n          voluptas nulla pariatur?\n        </p>\n      </AmbsaArticle>\n    </div>\n  );\n}\n\n```\n\n##### Properties\n\nProperty        |       Type            |       Description\n:---------------|:----------------------|:--------------------------------\ntitle           | String                | optional; article title\nimage           | String                | optional; background image source\n\n## Credit\n\n\n\n\n> Photos used in examples by [Tim Mossholder](https://unsplash.com/@timmossholder) and [Joanna Kosinska](https://unsplash.com/@joannakosinska)\n","angular-kit":"# Angular Kit\n`ng-kit` is a collection of angularJS modules made with Bootstrap3.\n\n## Development\nTo create a environment from scratch, install all the following dependencies.\n### NVM and NPM\n```\nnvm install 5\n```\n### NPM global packages\n```\nnpm install -g grunt-cli@1.2.0 grunt@0.4.5 npm@3.8.6\n```\n\n### Install Ruby and SASS\n```\nsudo apt-get install ruby ruby-dev gcc make\nsudo gem install sass\n```","angular-model-factory":"# modelFactory \n\n[![Build Status](https://travis-ci.org/Swimlane/angular-model-factory.svg?branch=master)](https://travis-ci.org/Swimlane/model-factory) [![npm version](https://badge.fury.io/js/angular-model-factory.svg)](http://badge.fury.io/js/angular-model-factory) [![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release) [![Bower version](https://badge.fury.io/bo/angular-model-factory.svg)](http://badge.fury.io/bo/angular-model-factory) [![Codacy Badge](https://www.codacy.com/project/badge/d6659f50bd234f099738358a2a17bf9c)](https://www.codacy.com/public/amcdaniel2/model-factory) [![Join the chat at https://gitter.im/Swimlane/angular-model-factory](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Swimlane/angular-model-factory?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nA light-weight model layer that bridges the gap between AngularJS and your RESTful APIs.\n\nWhy would you use this over other available solutions?\n\n- Lightweight/Simple, the code simply does some basic copy/extending and prototypical instances; no magic required.\n- Patterns/Practices, the model definition closely resembles Angular's ngResource meaning its easy to swap out, replace later, eases scaling/transition, and its designed for Angular; not a backbone port!\n- Utilizes Angular at the core, it doesn't duplicate things Angular already does.  Any action can be passed a `$http` configuration option, all your interceptors still work, it uses Angular's cache, etc!\n- Compliant, URI Template matches the specs.\n- Small - 1.45KB gzipped/minified ( excludes depedencies )\n- Minimal Dependencies, only use URI template and deep-diff ( this isn't even required ) utility.  NO underscore, lodash, jquery, etc!\n- Its full of awesome features\n\n\nSee [wiki](https://github.com/Swimlane/model-factory/wiki) for documentation.\n\n\n## Features\n\n- URI Templates (RFC6570)\n- Model instances\n- Collections\n- Single Datastore\n- Caching / Cache invalidation\n- Default value population\n- Pending / Completed Status\n- Relationships\n- Object Deep Diff / Reversion\n- Track active promises to prevent duplicate sends\n\n\n## Other Solutions\n\nAfter doing quite a bit of research before writing this, I took a look at other solutions.  Here is what I found and why I wrote my own.\n\n- [Restmod](https://github.com/platanus/angular-restmod)\nVery nice solution but very opinionated and hyper-active. 22kb min\n\n- [Modelizer](https://github.com/VasilioRuzanni/angular-modelizer)\nGood but requires Lodash. 23kb min\n\n- [ModelCore](https://github.com/klederson/ModelCore/)\nGood but not very well tested and not active.\n\n- [angular-watch-resource](https://github.com/marmorkuchen-net/angular-watch-resource) - Really only handles collections\n\n- [angular-restful](http://esdrasedu.github.io/angular-restful/#/) - Very basic but nice\n\n- [ngResource](https://docs.angularjs.org/api/ngResource/service/$resource)\nOut of the box model layer, very limited.\n\n- [angularjs-rails-resource](https://github.com/FineLinePrototyping/angularjs-rails-resource)\nToo rails-ish.\n\n- [angular-nested-resource](https://github.com/roypeled/angular-nested-resource) - Okay API, not loving the nested architecture.\n\n- [Aar.js](http://aarjs.com/)\nVery light, not sure what value this adds.\n\n- [Angular Activerecord](https://github.com/bfanger/angular-activerecord)\nA copy of BackboneModel but doesn't really work with Angular patterns.\n\n- [Angular-Data](http://angular-data.pseudobry.com/)\nNot really a model layer but a data store.  Very very heavy ( 67kb min )\n\n- [ngActiveResource](https://github.com/FacultyCreative/ngActiveResource)\nVery ruby-ish api.  Requires lodash.  Has validation but thats not needed in angular if you do it right.\n\n- [restangular](https://github.com/mgonto/restangular) \nI don't consider this a model layer; it feels moore like a fancy http layer that returns promises because everyone complains about ngResource not doing it.  It requires underscore.\n\n- [BreezeJS](http://www.breezejs.com/) \nThis is a very full featured model/cache/validation etc.  Its framework agnostic, which means it follows its own patterns and not angulars.  Its very heavy, requires server data massaging, and the API looks like Microsoft Entity Framework.\n\n- [ng-backbone](https://github.com/adrianlee44/ng-backbone)\nAnother backbone model clone.  This one actually requires backbone and lodash.\n\n## Install\n\nInstall via bower:\n\n```\n$ bower install angular-model-factory --save\n```\n\nInstall via npm:\n\n```\n$ npm install angular-model-factory --save\n```\n\nAlternatively you can download/clone the repo and link the files in `dist/`. \n\n### Dependencies\n\n- Angular >= 1.3\n- [deep-diff](https://github.com/flitbit/diff)\n- [uri-templates](https://github.com/geraintluff/uri-templates)\n\n\n## Contribute\n\nLibraries like this live and get better with an active community. Have something to contribute? We'd love to see it. Just head over to our [contribution guidelines](CONTRIBUTING.md).\n\n## Credits\n\n`angular-model-factory` is a [Swimlane](http://swimlane.com) open-source project; we believe in giving back to the open-source community by sharing some of the projects we build for our application. Swimlane is an automated cyber security operations and incident response platform that enables cyber security teams to leverage threat intelligence, speed up incident response and automate security operations.\n","angular-typed-storage":"[![npm version](https://badge.fury.io/js/angular-typed-storage.svg)](https://badge.fury.io/js/angular-typed-storage)\r\n[![Build Status](https://travis-ci.org/cdibbs/angular-typed-storage.svg?branch=master)](https://travis-ci.org/cdibbs/angular-typed-storage)\r\n[![dependencies Status](https://david-dm.org/cdibbs/angular-typed-storage/status.svg)](https://david-dm.org/cdibbs/angular-typed-storage)\r\n[![devDependencies Status](https://david-dm.org/cdibbs/angular-typed-storage/dev-status.svg)](https://david-dm.org/cdibbs/angular-typed-storage?type=dev)\r\n[![codecov](https://codecov.io/gh/cdibbs/angular-typed-storage/branch/master/graph/badge.svg)](https://codecov.io/gh/cdibbs/angular-typed-storage)\r\n\r\n# [Deprecated]\r\nIt was unnecessarily heavy and restrictive to wrap this library up as an Angular module. Please use\r\nthe unwrapped version, here: [typed-storage](https://github.com/ossplz/typed-storage).\r\n\r\n## New Usage\r\n\r\nWith Angular's dependency injection, the new usage looks like this:\r\n``` typescript\r\nimport { TypedStorageService, typedStorageFactory, TypedStorageKey } from 'typed-storage';\r\n\r\n@NgModule({\r\n  // ...\r\n  providers: [\r\n    <FactoryProvider>{ provide: TypedStorageService, useFactory: typedStorageFactory },\r\n    // ...\r\n  ]\r\n})\r\nexport class AppModule {\r\n```\r\n\r\n# TypedStorage\r\nThe Angular 2 & 4 TypedStorage module provides an easy way to store and retrieve nested\r\nview models from browser storage (either localStorage or sessionStorage).\r\n\r\n## What it is not\r\nIn some browsers, such as Internet Explorer, it cannot be a drop-in replacement for localStorage or sessionStorage when using\r\nproperty- or dictionary-style references (as opposed to .getItem()/.setItem). The specific\r\nJavascript feature we use for this is the Proxy class. See Mozilla's notes on [browser support for the Proxy class](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#Browser_compatibility)), for more information.\r\n\r\nWill work:\r\n```typescript\r\nlocalStorage[\"mykey\"] = 653;\r\n// browser refresh...\r\nlet someValue = localStorage[\"mykey\"];\r\n// someValue == \"314\"\r\n```\r\n\r\nWill also work:\r\n```typescript\r\ntypedStorage.setItem(\"mykey\", 653);\r\n// browser refresh...\r\nlet someValue = typedStorage.getItem(\"mykey\");\r\n// someValue == \"314\"\r\n```\r\n\r\nWill only work in modern browsers:\r\n```typescript\r\ntypedStorage[\"mykey\"] = 653;\r\n// browser refresh...\r\nlet someValue = typedStorage[\"mykey\"];\r\n// someValue == undefined\r\n```\r\n\r\n## Features\r\n- It implements the Storage interface:\r\n```typescript\r\nlet s: Storage = localStorage;\r\ns = sessionStorage;\r\ns = typedStorage;\r\n```\r\n- Allows optional namespacing in the underlying storage provider to avoid key collisions with\r\n  other modules used by your application.\r\n- Can use either string keys or instances of TypedStorageKey<T> for better type safety.\r\n\r\n## Usage\r\n\r\n```typescript\r\n// This presumes TypedStorage was configured with namespace com.example.myapp and localStorage:\r\nlet myKey = new TypedStorageKey(MyClass, \"myInst\");\r\nlet myInst: MyClass = new MyClass();\r\ntypedStorage.setItem(myKey, myInst);\r\ntypedStorage[myKey] = myInst; // property access will only work in modern browsers.\r\n// localStorage now contains key \"com.example.myapp.myInst\" with a JSON-serialized representation of myInst.\r\n\r\n// ...\r\n\r\nmyInst = typedStorage.getItem(myKey);\r\n// or\r\nmyInst = typedStorage[myKey];\r\ntypedStorage.removeItem(myKey);\r\n```\r\n\r\n## View Models\r\nWe use [SimpleMapper](https://github.com/cdibbs/simple-mapper) to recursively map deserialized objects back\r\ninto their original view models. Nested models that you want mapped should use SimpleMapper's @mappable attribute.\r\n\r\n```typescript \r\nexport class MyWidget {\r\n    Id: number = 0;\r\n    Name: string = null;\r\n    get Display(): string { \r\n        return `${Name} (Id: ${Id})`;\r\n    }\r\n\r\n    @mappable(MyWidget)\r\n    Wiggy: MyWidget = null;\r\n}\r\n```\r\n\r\n*Note:* Each property must have a default value, otherwise SimpleMapper will not be able to detect the property at run-time. The Typescript,\r\n`Id: number;` (with no default value) compiles to return Javascript's `undefined` at run-time. Not even the property key will exist in the\r\ncompiled Javascript.\r\n\r\n## Installation\r\n\r\nRun `npm install --save-dev angular-typed-storage` inside of an Angular 4 project.\r\n\r\n## Setup\r\n\r\n\r\nInside your application's app.module.ts file, make the following additions.\r\n\r\n```typescript\r\n// ...\r\nimport { TypedStorageModule } from 'angular-typed-storage';\r\n\r\n// ...\r\nimport * as vm from './view-models'; // optional, if using VM refs instead of name strings.\r\n\r\n@NgModule({\r\n    declarations: [\r\n        // ...\r\n    ],\r\n    providers: [\r\n        { provide: TypedStorageLoggerToken, useValue: console /* or a logger matching console's sig */ }\r\n    ],\r\n    imports: [\r\n        // ...\r\n        TypedStorageModule.forRoot({ns: \"com.example.app\", storage: localStorage })\r\n    ]\r\n})\r\nexport class AppModule {\r\n    constructor() {\r\n```\r\n\r\n## Options\r\n```typescript\r\nlet config: IConfig = {\r\n    /** Deprecated. This defaults to console. Please use TypedStorageLoggerToken in your providers, instead. */\r\n    logger: undefined,\r\n\r\n    /** The namespace to use, i.e., com.example.myapp. Default: null = do not use namespace. */\r\n    ns: \"com.example.myapp\",\r\n\r\n    /** The dictionary of view models to use for recursive mapping, if any. Default: empty.*/\r\n    viewModels: {},\r\n\r\n    /**\r\n     * Whether or not to use Proxy to facilitate indexer access to typed storage, i.e., typedStorage[myprop] == typedStorage.getItem(myprop).\r\n     * Proxy does not exist in some older browsers like Internet Explorer. Default: false.\r\n     */\r\n    noProxy: false,\r\n\r\n    /** Underlying storage: either localStorage or sessionStorage. Default: localStorage. */\r\n    storage: localStorage,\r\n}\r\n```\r\n\r\nThe view models would all be exported via `index.ts` \"Barrels\" (see [Angular glossary](https://angular.io/docs/ts/latest/guide/glossary.html)):\r\n\r\n```typescript\r\nexport * from './user-view-model.ts';\r\nexport * from './cat-view-model.ts';\r\n// ...\r\n```\r\n\r\nAnd in your classes, import like this:\r\n\r\n```typescript\r\nimport { TypedStorageService, TypedStorageKey } from 'angular-typed-storage';\r\n\r\nexport class MyService {\r\n  private userKey: TypedStorageKey<UserViewModel> = new TypedStorageKey(UserViewModel, \"user\");\r\n\r\n  constructor(private typedStorage: TypedStorageService) {\r\n  // ...\r\n  }\r\n\r\n  ngOnInit() {\r\n      doSomething(this.typedStorage.getItem(userKey));\r\n  }\r\n}\r\n```\r\n\r\n## Build\r\n\r\nRun `npm run build` to build the project. The build artifacts will be stored in the `dist/` directory.\r\n\r\n## Running unit tests\r\n\r\nRun `npm test` to execute the unit tests via [Karma](https://karma-runner.github.io).\r\n\r\n## Code coverage\r\n\r\nWhile running tests, code coverage will be available at ./coverage/chrome/html/index.html.\r\n\r\n## Documentation\r\n\r\nRun 'npm run compodoc' to generate documentation.\r\nThen run 'npm run compodoc-serve' to see auto-generated documentation and documentation coverage on port 8080.\r\n\r\n## Further help\r\n\r\nFeel free to post issues.","anysols-model":"# Anysols Model\nWrapper for mongoose with intercepts for operations\n\n[![Coverage Status](https://coveralls.io/repos/github/anysols/anysols-model/badge.svg?branch=master)](https://coveralls.io/github/anysols/anysols-model?branch=master)\n\n```bash\nnpm install --save anysols-model\n```\n## Establishing database connection\n```js\nconst {AnysolsModel} = require('anysols-model');\n\n const anysolsModel = new AnysolsModel();\n\n    const config = {\n        \"host\": \"localhost\",\n        \"port\": \"27017\",\n        \"database\": \"anysols-model\",\n        \"dialect\": \"mongodb\",\n    };\n\n    anysolsModel.connect(config).then(() => {\n        console.log('connection success');\n        anysolsModel.databaseExists().then(() => {\n            console.log('db exists');\n            cb(anysolsModel);\n        }, () => {\n            console.log(\"db does not exists\");\n        });\n    }, (err) => {\n        console.log('connection failed');\n    });\n```\n\n## Intercepting database operations\n```js\n// after establishing connection\n\n anysolsModel.addInterceptor(\"my-intercept\", {\n    intercept: (modelName, operation, when, records) => {\n        return new Promise((resolve, reject) => {\n            if (modelName === 'student') {\n                if (operation === 'create') {\n                    if (when === \"before\") {\n                        console.log(\"Student before\");\n                        if (!Array.isArray(records)) {\n                            let record = records;\n                            record.set(\"computed\",  record.get(\"name\") + \" +++ computed\");\n                        }\n                    } else if (when === \"after\")\n                        console.log(\"Student after\");\n                }\n            }\n            resolve(records);\n        });\n    }\n});\n\nanysolsModel.defineModel({\n    name: 'student',\n    fields: [{\n        name: 'name',\n        type: 'string'\n    }, {\n        name: 'computed',\n        type: 'string'\n    }]\n});\n\nlet Student = anysolsModel.model(\"student\");\nlet s = new Student({});\ns.set(\"name\", \"John\");\ns.save().then(function () {\n    Student.find().exec().then(function (students) {\n        console.log(JSON.stringify(students, null, 4));\n    });\n});\n```\n\n## Define custom field type\n```js\n// after establishing connection\n\n anysolsModel.registerFieldDefinition(new FieldDefinition(\"customType\", field => {\n     return true\n }, function (field, fieldDefinition) {\n     return {\n         type: MONGOOSE_TYPES.STRING\n     }\n }));\n\n anysolsModel.defineModel({\n     name: 'student',\n     fields: [{\n         name: 'name',\n         type: 'string'\n     }, {\n         name: 'dob',\n         type: 'date'\n     }, {\n         name: 'custom_field',\n         type: 'customType'\n     }]\n });\n\n let Student = anysolsModel.model(\"student\");\n let s = new Student();\n s.set(\"name\", \"John\");\n s.set(\"dob\", new Date());\n s.set(\"custom_field\", \"testing\");\n s.save().then(function () {\n     console.log(\"Student created\");\n     anysolsModel.closeConnection();\n });\n```\n\nCheck the examples >> [here](./examples) <<\n\n## Code of Conduct\n[Contributor Covenant](/CODE_OF_CONDUCT.md)\n\n## License\n[Apache License 2.0](/LICENSE)\n","aoztest":"# aoztest\nfirst node test\n","apibee":"## ApiBee\n\nMake Express routes grouped by some keys.\n\n\n## Basic Usage\ncd into `your project` && `npm install apibee --save-dev`\n\nExample for `routes.js`\n```javascript\n'use strict';\n\nvar bee = require('apibee');\n\nmodule.exports = function(router) {\n  var api = new bee(router)\n\n  api.group('Index', function(api) {\n    api.get('/read', function(req, res) {\n      //do stuff\n    });\n    api.post('/update', function(req, res) {\n      //do stuff  \n    })\n  }\n\n  api.group('User CRUD', function(api) {\n    api.get('/read', function(req, res) {\n      //do stuff\n    });\n    api.post('/update', function(req, res) {\n      //do stuff  \n    })\n  }\n};\n```\n\n## License\n[GPL](http://www.gnu.org/licenses/gpl-2.0.html)\n","apollo-angular-link-network-status":"# Network Status Link for Angular\n\nInformation about the network status of your GraphQL operations. Built for Apollo Angular.\n\n## Installation\n\n    yarn add apollo-angular-link-network-status\n    # or\n    npm install apollo-angular-link-network-status\n\n## Example\n\n - [working example on StackBlitz.io](https://stackblitz.com/edit/apollo-angular-network-status?file=app%2Fgraphql.module.ts)\n\nSetup the module:\n\n```typescript\nimport { ApolloNetworkStatusModule } from 'apollo-angular-link-network-status';\n\n@NgModule({\n  imports: [\n    //...\n    ApolloNetworkStatusModule\n  ]\n})\nexport class AppModule {}\n```\n\nUse the link:\n\n```typescript\nimport { ApolloNetworkStatus } from 'apollo-angular-link-network-status';\n\n@NgModule({\n  // ...\n  providers: [{\n    provide: APOLLO_OPTIONS,\n    useFactory(networkStatus: ApolloNetworkStatus, httpLink: HttpLink) {\n      return {\n        link: networkStatus.concat( // <-- as a regular Apollo Link\n          httpLink.create({ uri })\n        ),\n        cache: new InMemoryCache()\n      }\n    },\n    deps: [ApolloNetworkStatus, HttpLink]\n  }]\n})\nexport class AppModule {}\n```\n\nUsage inside of a component or a service:\n\n```typescript\nimport { Component } from '@angular/core';\nimport { ApolloNetworkStatus } from 'apollo-angular-link-network-status';\n\n@Component({\n  selector: 'app',\n  template: `\n    <app-list></app-list>\n    <div *ngIf=\"(networkStatus.isPending | async)\">Loading</div>\n  `,\n})\nexport class AppComponent {\n  constructor(public networkStatus: ApolloNetworkStatus) {\n    networkStatus.isPending.subscribe(isPending => {\n      console.log('isPending', isPending);\n    });\n\n    networkStatus.onRequest.subscribe(event => {\n      console.log('request', event);\n    });\n\n    networkStatus.onSuccess.subscribe(event => {\n      console.log('success', event);\n    });\n\n    networkStatus.onError.subscribe(event => {\n      console.log('error', event);\n    });\n\n    networkStatus.onCancel.subscribe(event => {\n      console.log('cancel', event);\n    });\n  }\n}\n```\n","apollo-resolvers":"# apollo-resolvers\nExpressive and composable resolvers for Apollostack's GraphQL server\n\n[![NPM](https://nodei.co/npm/apollo-resolvers.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/apollo-resolvers/)\n\n[![CircleCI](https://circleci.com/gh/boltsource/apollo-resolvers/tree/master.svg?style=shield)](https://circleci.com/gh/boltsource/apollo-resolvers/tree/master)  [![Beerpay](https://beerpay.io/thebigredgeek/apollo-resolvers/badge.svg?style=beer-square)](https://beerpay.io/thebigredgeek/apollo-resolvers)  [![Beerpay](https://beerpay.io/thebigredgeek/apollo-resolvers/make-wish.svg?style=flat-square)](https://beerpay.io/thebigredgeek/apollo-resolvers?focus=wish)\n\n## Overview\n\nWhen standing up a GraphQL backend, one of the first design decisions you will undoubtedly need to make is how you will handle authentication, authorization, and errors.  GraphQL resolvers present an entirely new paradigm that existing patterns for RESTful APIs fail to adequately address.  Many developers end up writing duplicitous authorization checks in a vast majority of their resolver functions, as well as error handling logic to shield the client from encountering exposed internal errors.  The goal of `apollo-resolvers` is to simplify the developer experience in working with GraphQL by abstracting away many of these decisions into a nice, expressive design pattern.\n\n`apollo-resolvers` provides a pattern for creating resolvers that work, essentially, like reactive middleware.  By creating a chain of resolvers to satisfy individual parts of the overall problem, you are able to compose elegant streams that take a GraphQL request and bind it to a model method or some other form of business logic with authorization checks and error handling baked right in.\n\nWith `apollo-resolvers`, data flows between composed resolvers in a natural order.  Requests flow down from parent resolvers to child resolvers until they reach a point that a value is returned or the last child resolver is reached.  Thrown errors bubble up from child resolvers to parent resolvers until an additional transformed error is either thrown or returned from an error callback or the last parent resolver is reached.\n\nIn addition to the design pattern that `apollo-resolvers` provides for creating expressive and composible resolvers, there are also several provided helper methods and classes for handling context creation and cleanup, combining resolver definitions for presentation to `graphql-tools` via `makeExecutableSchema`, and more.\n\n## Example from Apollo Day\n\n[![Authentication and Error Handling in GraphQL](https://img.youtube.com/vi/xaorvBjCE7A/0.jpg)](https://www.youtube.com/watch?v=xaorvBjCE7A)\n\n## Quick start\n\nInstall the package:\n\n```bash\nnpm install apollo-resolvers\n```\n\nCreate a base resolver for last-resort error masking:\n\n```javascript\nimport { createResolver } from 'apollo-resolvers';\nimport { createError, isInstance } from 'apollo-errors';\n\nconst UnknownError = createError('UnknownError', {\n  message: 'An unknown error has occurred!  Please try again later'\n});\n\nexport const baseResolver = createResolver(\n   //incoming requests will pass through this resolver like a no-op\n  null,\n\n  /*\n    Only mask outgoing errors that aren't already apollo-errors,\n    such as ORM errors etc\n  */\n  (root, args, context, error) => isInstance(error) ? error : new UnknownError()\n);\n```\n\nCreate a few child resolvers for access control:\n```javascript\nimport { createError } from 'apollo-errors';\n\nimport { baseResolver } from './baseResolver';\n\nconst ForbiddenError = createError('ForbiddenError', {\n  message: 'You are not allowed to do this'\n});\n\nconst AuthenticationRequiredError = createError('AuthenticationRequiredError', {\n  message: 'You must be logged in to do this'\n});\n\nexport const isAuthenticatedResolver = baseResolver.createResolver(\n  // Extract the user from context (undefined if non-existent)\n  (root, args, { user }, info) => {\n    if (!user) throw new AuthenticationRequiredError();\n  }\n);\n\nexport const isAdminResolver = isAuthenticatedResolver.createResolver(\n  // Extract the user and make sure they are an admin\n  (root, args, { user }, info) => {\n    /*\n      If thrown, this error will bubble up to baseResolver's\n      error callback (if present).  If unhandled, the error is returned to\n      the client within the `errors` array in the response.\n    */\n    if (!user.isAdmin) throw new ForbiddenError();\n\n    /*\n      Since we aren't returning anything from the\n      request resolver, the request will continue on\n      to the next child resolver or the response will\n      return undefined if no child exists.\n    */\n  }\n)\n```\n\nCreate a profile update resolver for our user type:\n```javascript\nimport { isAuthenticatedResolver } from './acl';\nimport { createError } from 'apollo-errors';\n\nconst NotYourUserError = createError('NotYourUserError', {\n  message: 'You cannot update the profile for other users'\n});\n\nconst updateMyProfile = isAuthenticatedResolver.createResolver(\n  (root, { input }, { user, models: { UserModel } }, info) => {\n    /*\n      If thrown, this error will bubble up to isAuthenticatedResolver's error callback\n      (if present) and then to baseResolver's error callback.  If unhandled, the error\n      is returned to the client within the `errors` array in the response.\n    */\n    if (!user.isAdmin && input.id !== user.id) throw new NotYourUserError();\n    return UserModel.update(input);\n  }\n);\n\nexport default {\n  Mutation: {\n    updateMyProfile\n  }\n};\n```\n\nCreate an admin resolver:\n```javascript\nimport { createError, isInstance } from 'apollo-errors';\nimport { isAuthenticatedResolver, isAdminResolver } from './acl';\n\nconst ExposedError = createError('ExposedError', {\n  message: 'An unknown error has occurred'\n});\n\nconst banUser = isAdminResolver.createResolver(\n  (root, { input }, { models: { UserModel } }, info) => UserModel.ban(input),\n  (root, args, context, error) => {\n    /*\n      For admin users, let's tell the user what actually broke\n      in the case of an unhandled exception\n    */\n\n    if (!isInstance(error)) throw new ExposedError({\n      // overload the message\n      message: error.message\n    });\n  }\n);\n\nexport default {\n  Mutation: {\n    banUser\n  }\n};\n```\n\nCombine your resolvers into a single definition ready for use by `graphql-tools`:\n```javascript\nimport { combineResolvers } from 'apollo-resolvers';\n\nimport User from './user';\nimport Admin from './admin';\n\n/*\n  This combines our multiple resolver definition\n  objects into a single definition object\n*/\nconst resolvers = combineResolvers([\n  User,\n  Admin\n]);\n\nexport default resolvers;\n```\n\nConditional resolvers:\n```javascript\nimport { and, or } from 'apollo-resolvers';\n\nimport isFooResolver from './foo';\nimport isBarResolver from './bar';\n\nconst banResolver = (root, { input }, { models: { UserModel } }, info)=> UserModel.ban(input);\n\n// Will execute banResolver if either isFooResolver or isBarResolver successfully resolve\n// If none of the resolvers succeed, the error from the last conditional resolver will\n// be returned\nconst orBanResolver = or(isFooResolver, isBarResolver)(banResolver);\n\n// Will execute banResolver if both isFooResolver and isBarResolver successfully resolve\n// If one of the condition resolvers throws an error, it will stop the execution and\n// return the error\nconst andBanResolver = and(isFooResolver, isBarResolver)(banResolver);\n\n// In both cases, conditions are evaluated from left to right\n```\n\n## Resolver context\n\nResolvers are provided a mutable context object that is shared between all resolvers for a given request.  A common pattern with GraphQL is inject request-specific model instances into the resolver context for each request.  Models frequently reference one another, and unbinding circular references can be a pain.  `apollo-resolvers` provides a request context factory that allows you to bind context disposal to server responses, calling a `dispose` method on each model instance attached to the context to do any sort of required reference cleanup necessary to avoid memory leaks:\n\n``` javascript\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport { GraphQLError } from 'graphql';\nimport { graphqlExpress } from 'apollo-server-express';\nimport { createExpressContext } from 'apollo-resolvers';\nimport { formatError as apolloFormatError, createError } from 'apollo-errors';\n\nimport { UserModel } from './models/user';\nimport schema from './schema';\n\nconst UnknownError = createError('UnknownError', {\n  message: 'An unknown error has occurred.  Please try again later'\n});\n\nconst formatError = error => {\n  let e = apolloFormatError(error);\n\n  if (e instanceof GraphQLError) {\n    e = apolloFormatError(new UnknownError({\n      data: {\n        originalMessage: e.message,\n        originalError: e.name\n      }\n    }));\n  }\n\n  return e;\n};\n\nconst app = express();\n\napp.use(bodyParser.json());\n\napp.use((req, res, next) => {\n  req.user = null; // fetch the user making the request if desired\n  next();\n});\n\napp.post('/graphql', graphqlExpress((req, res) => {\n  const user = req.user;\n\n  const models = {\n    User: new UserModel(user)\n  };\n\n  const context = createExpressContext({\n    models,\n    user\n  }, res);\n\n  return {\n    schema,\n    formatError, // error formatting via apollo-errors\n    context // our resolver context\n  };\n}));\n\nexport default app;\n```\n","array-intersection":"# array-intersection [![NPM version](https://badge.fury.io/js/array-intersection.svg)](http://badge.fury.io/js/array-intersection)\n\n> Return an array with the unique values present in _all_ given arrays using strict equality for comparisons.\n\nBased on [mout's](http://moutjs.com/) implementation of `intersection`.\n\n## Install\n\n**Install with NPM**\n\nInstall with [npm](https://www.npmjs.com/)\n\n```bash\nnpm i array-intersection --save\n```\n\n**Install with Bower**\n\nInstall with [bower](http://bower.io/)\n\n```bash\nbower install array-intersection --save\n```\n\n## Usage\n\n```js\nvar intersection = require('array-intersection');\n\nintersection(['a', 'a', 'c'])\n//=> ['a', 'c']\n\nintersection(['a', 'b', 'c'], ['b', 'c', 'e'])\n//=> ['b', 'c']\n\nintersection(['a', 'b', 'c'], ['b', 'c', 'e'], ['b', 'c', 'e'])\n//=> ['b', 'c']\n```\n\n## Related projects\n\n* [array-every](https://github.com/jonschlinkert/array-every): Returns true if the callback returns truthy for all elements in the given array.\n* [array-slice](https://github.com/jonschlinkert/array-slice): Array-slice method. Slices `array` from the `start` index up to, but not including, the `end`â¦ [more](https://github.com/jonschlinkert/array-slice)\n* [array-unique](https://github.com/jonschlinkert/array-unique): Return an array free of duplicate values. Fastest ES5 implementation.\n* [arr-union](https://github.com/jonschlinkert/arr-union): Combines a list of arrays, returning a single array with unique values, using strict equalityâ¦ [more](https://github.com/jonschlinkert/arr-union)\n* [filter-array](https://github.com/jonschlinkert/filter-array): Iterates over the elements in an array, returning an array with only the elements forâ¦ [more](https://github.com/jonschlinkert/filter-array)\n* [index-of](https://github.com/jonschlinkert/index-of): Get the index of the first element in an array that returns truthy for theâ¦ [more](https://github.com/jonschlinkert/index-of)\n\n## Running tests\n\nInstall dev dependencies:\n\n```bash\nnpm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/array-intersection/issues/new)\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright (c) 2015 Jon Schlinkert\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on May 07, 2015._","at-commander":"# AT Commander\r\n\r\n__Please note that this is still a beta version__\r\n\r\nPromise based AT(tention) command handler for serial ports (typically for use with external modem components and the like).\r\n\r\nThis module is ment to serve only as a basis for your specific device implementations - it is rather device agnostic, so to speak.\r\n\r\nFor a sample (beta) implementation of a real device see [telit-modem](https://www.npmjs.com/package/telit-modem)\r\n\r\nFeatures:\r\n\r\n- Send simple commands and receive boolean success/failure responses\r\n- Catch complex responses and preprocess\r\n- Set up notifications / event handlers for unsolicited messages\r\n- Command queue\r\n\r\nThis module uses the npm https://www.npmjs.com/package/serialport for serial communication.\r\n\r\n\r\n## Todos\r\n\r\n* Complete documentation..\r\n* Add more serialport configuration options (modem options are passthrough anyway, so just note that in the documentation...)\r\n* Add tests\r\n* Generic refactoring\r\n* Rethink timeout principle - is it ok like this or should it be remodelled? (timeout not absolute to actual command start but relative to last incoming data) (-> process.nextTick ??)\r\n\r\n## Possible issues\r\n\r\nIn case something doesn't work as expected, please first look here.\r\n\r\n* After an inbuffer handling change (auto-discard of CR/NL prefixes) reading a specific number of bytes might have an unexpected behaviour. Well, changing this ment a simplification of usage but also a change in semantics as incoming data is being interpreted.\r\n\r\n## Overview\r\n\r\n* [Usage](#usage)\r\n  * [Example](#example)\r\n  * [Promise based commands](#promise-based-commands)\r\n* [Classes](#classes)\r\n  * [Modem](#modem)\r\n    * [Modem(options)](#modem-options)\r\n    * [getConfig()](#getConfig)\r\n    * [setConfig(options)](#setConfig-options)\r\n    * [open(path)](#open-path)\r\n    * [isOpen()](#isOpen)\r\n    * [pause()](#pause)\r\n    * [close(callback)](#close-callback)\r\n    * [closeGracefully(callback)](#closeGracefully-callback)\r\n    * [on(event, callback)](#on-event-callback)\r\n    * [isProcessingCommands()](#isProcessingCommands)\r\n    * [startProcessing()](#startProcessing)\r\n    * [stopProcessing(abortCurrent, callback)](#stopProcessing-abortCurrent-callback)\r\n    * [getPendingCommands()](#getPendingsCommands)\r\n    * [clearPendingCommands()](#clearPendingCommands)\r\n    * [getCurrentCommand()](#getCurrentCommand)\r\n    * [abortCurrentCommand()](#abortCurrentCommand)\r\n    * [run(command, expected, options)](#run-command-expected-options)\r\n    * [addCommand(command, expected, options)](#addCommand-command-expected-options)\r\n    * [read(n)](#read-n)\r\n    * [write(buf)](#write-buffer)\r\n    * [getInBuffer()](#)\r\n    * [clearInBuffer()](#)\r\n    * [getNotifications()](#)\r\n    * [clearNotifications()](#)\r\n    * [addNotification(name, regex, handler)](#)\r\n    * [removeNotification(name)](#)\r\n  * [Command](#command)\r\n  * [Notification](#notification)\r\n* [Events](#events)\r\n\r\n## Usage\r\n\r\n### Example\r\n\r\n    var ATCommander = require('at-commander');\r\n    var Command = ATCommander.Command;\r\n\r\n    // all options are optional, these are the default options\r\n    var opts = {\r\n        // the following options define the options used by serialport\r\n        parser: serialport.parsers.raw,\r\n        baudRate: 115200,\r\n        dataBits: 8,\r\n        stopBits: 1,\r\n\r\n        // command termination string (is added to every normal string type command)\r\n        EOL: \"\\r\\n\",\r\n\r\n        // this regex is used by default to detect one-line responses\r\n        lineRegex: /^\\r\\n(.+)\\r\\n/,\r\n\r\n        // (default) command timeout\r\n        timeout: 500\r\n    };\r\n\r\n    var modem = new ATCommander.Modem(opts);\r\n\r\n    var port = 'COM4'; // on Windows\r\n    var port = '/tty/serial/by-id/blabalbla'; // linux based machines\r\n\r\n    modem.open(port).catch((err) => {\r\n        console.log(\"Failed to open serial\", err);\r\n    }).then(function(){\r\n\r\n        // check if a response is coming\r\n        // NOTE: run(command) bypasses the command queue and is executed immediatly (unless another command is being executed already)\r\n        modem.run('AT').then((success) => {\r\n\r\n            modem.startProcessing();\r\n\r\n        });\r\n\r\n        // fill up command queue\r\n        // queue is only processed it modem.startProcessing() is called.\r\n        modem.addCommand('AT+CMG=1');\r\n\r\n        // identical to previous command\r\n        modem.addCommand('AT+CMG=1', undefined);\r\n\r\n        // with expected result 'OK' and command specific timeout\r\n        modem.addCommand('AT+FOOO', 'OK', {\r\n            timeout: 10000\r\n        }).then(function(){\r\n            // command got expected response\r\n        }).catch(function(command){\r\n            // some error occurred\r\n        });\r\n\r\n        // consider the next incoming 6 bytes as the wanted response\r\n        modem.addCommand('AT+FOOO', 6).then(function(buffer){\r\n            // buffer contains the next 6 incoming bytes (please note, that beginning CR + NL characters are trimmed automatically, thus (at the moment) if you expect to be reading only these characters your logic will fail)\r\n        }).catch(function(command){\r\n            // most likely to fail only if there is a timeout\r\n        });\r\n\r\n        modem.addCommand('AT+CREG=?', /\\+CREG=(.*),(.*)/).then((matches) => {\r\n            // matches contains the response's string matches according to the given regex\r\n        });\r\n\r\n        modem.addCommand('AT+FOOO',  function(buffer){\r\n            // complex response detectors are passed the updated response buffer contents whenever there is new data arriving\r\n            var str = buffer.toString();\r\n            if (str.matches(/^OK/r/n/){\r\n                return 4; // return the byte count the response (these many bytes will be consumed from the buffer)\r\n            }\r\n            return 0; // return 0 if expected response not received yet\r\n        }).then((buffer) => {\r\n            // complex response detectors receive the whole (consumed) buffer as argument\r\n        });\r\n\r\n\r\n        // add a notification\r\n        modem.addNotification('myEventName', /^+CMI=(.*),(.*)/, function(buffer, matches) {\r\n            modem.addCommand(\"AT+CMR=\"+matches[1], parseInt(matches[2])).then((buf) => {\r\n                // buf contains my wanted result\r\n            });\r\n        });\r\n\r\n\r\n        modem.addNotification('shutdown', /SHUTDOWN/, function(){\r\n            modem.close();\r\n        });\r\n    });\r\n\r\n### Promise based commands\r\n\r\nThe `Modem` methods `run`, `addCommand` return a promise that will be resolved/rejected with variable parameters that depend on the (Command)[#command] options.\r\n\r\nThe following setup illustrates the differences\r\n\r\n    var CommandStates = require('at-commander').CommandStates;\r\n\r\n    // please note, it is also possible to call modem.run directly with the arguments as passed to the constructor of command\r\n    // modem.run thus is just a nice wrapper\r\n    var myCommand = new ATCommander.Command(cmd, expected);\r\n    modem.run(myCommand).then(function(result){\r\n        if (typeof expected === 'undefined' || typeof expected === 'string'){\r\n            // result is a boolean denoting wether the one-line response matched the expected value\r\n            // in case expected was undefined, the default response (OK) is assumed\r\n            // NOTE this will have to be refactored to make it configurable on the fly\r\n        }\r\n        if (typeof expected === 'number'){\r\n            // result will be of type Buffer container the number of bytes as denoted by expected\r\n        }\r\n        if (expected instanceof RegExp){\r\n            // result will be the return value of inBufferString.match(expected)\r\n        }\r\n        if (typeof expected === 'function'){\r\n            // result will be the relevant inBuffer part that was detected using expected\r\n        }\r\n\r\n\r\n\r\n    }).catch(function(command){\r\n        // in case of an error, the given object is an instance of Command\r\n        // command is the same object as myCommand\r\n\r\n        // furthermore several fields will be set:\r\n\r\n        switch (command.state){\r\n\r\n            case CommandStates.Init:\r\n                //this state should never occur in an error case\r\n                break;\r\n\r\n            case CommandStates.Rejected:\r\n                // this state only occurs when passing a command using .run() (or write(), read())\r\n                // and denotes the situation where the modem is already processing a command\r\n                // (this is because .run() bypasses the command queue)\r\n                break;\r\n\r\n            case CommandStates.Running:\r\n                // this state should never occur in an error/catch case\r\n                // it denotes that the command is being processed by the modem\r\n                break;\r\n\r\n            case CommandStates.Finished:\r\n                // this state should never occur in an error/catch case\r\n                // it denotes that the command terminated as configured\r\n\r\n                // command.result.buf -> read buffer that satisfied the expected result requirements\r\n\r\n                break;\r\n\r\n            case CommandStates.Failed:\r\n                // this state occurs if the commands result processor function returns an undefined value\r\n                // by default this will also be the case if the expected result is a string type and the read in line\r\n                // did not match (thus causing a rejection)\r\n                // note that if you provide result processor functions yourself, you might want to be aware of this (or\r\n                // make use of it)\r\n\r\n                // command.result.buf -> read line that did not match\r\n\r\n                break;\r\n\r\n            case CommandStates.Timeout:\r\n                // this state denotes that there was no reply from the attached serial device in the given time constraint\r\n                // also the contents of the inBuffer will be passed to the command (and consumed from the inBuffer)\r\n\r\n                // command.result.buf -> will be a Buffer object\r\n\r\n                break;\r\n\r\n            case CommandStates.Aborted:\r\n                // this state denotes that the command was user aborted\r\n                break;\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n## Classes\r\n\r\n### Modem\r\n\r\n#### Modem (options)\r\nSee [setConfig(options)](#setConfig-options).\r\n\r\n#### getConfig ()\r\nReturns config..\r\n\r\n#### setConfig (options)\r\n**_options (optional)_**\r\n* `parser`: See https://www.npmjs.com/package/serialport#serialport-path-options-opencallback (Note: likely you will never want to change this!)\r\n* `baudRate`: See https://www.npmjs.com/package/serialport#serialport-path-options-opencallback\r\n* `dataBits`: See https://www.npmjs.com/package/serialport#serialport-path-options-opencallback\r\n* `stopBits`: See https://www.npmjs.com/package/serialport#serialport-path-options-opencallback\r\n* `EOL`: (default: `\"\\r\\n\"`) Command termination string (is added to every normal string type command)\r\n* `lineRegex`: (default `\"^(.+)\\r\\n\"`) This RegExp is used to detect one-line responses and notifications.\r\n* `timeout`: (default: `500`) default command timeout in millisec as well as the unsolicited notification timeout\r\n* `defaultExpectdResult`: (default: `\"OK\"`) Expected result if none given (see run(), addCommand)\r\n\r\n#### open (path)\r\n\r\n**_path_**\r\n\r\nDenotes path to serial port (on linux typically something like `/tty/tty.serialXYZ`, on windows `COM4`)\r\n\r\nReturns a promise.\r\n\r\n#### isOpen ()\r\nFacade for https://www.npmjs.com/package/serialport#isopen\r\n\r\n#### pause ()\r\nFacade for https://www.npmjs.com/package/serialport#pause\r\n\r\n#### close (callback)\r\nForces serial shutdown. Facade for https://www.npmjs.com/package/serialport#close-callback\r\n\r\n#### closeGracefully (callback)\r\nIf tries to finish any pending commands before shutting down serial.\r\n\r\n\r\n#### on (event, callback)\r\nPlease refer to [Events](#events)\r\n\r\n#### isProcessingCommands ()\r\nIf set to true, command queue will be automatically processed.\r\n\r\n#### startProcessing ()\r\nStart automatic processing of command queue.\r\n\r\n#### stopProcessing (abortCurrent, callback)\r\nStop automatic processing of command queue.\r\n\r\n**_boolean abortCurrent (optional)_**\r\n\r\n**_function callback (optional)_**\r\n\r\nCallback to run once abortion completes.\r\n\r\n\r\n#### getPendingCommands ()\r\nReturns array of pending (Commands)[#command]\r\n\r\n#### clearPendingCommands ()\r\nCleats pending commands list.\r\n\r\n#### getCurrentCommand ()\r\nReturns false if no command is pending at the moment, (Command)[#command] otherwise.\r\n\r\n#### abortCurrentCommand ()\r\n\r\n#### run (command, expected, options)\r\n\r\nIf and only if no other command is currently being processed, runs the given command\r\n\r\n**_string|buffer|Command command (required)_**\r\n\r\nIf it is a (Command)[#command], any other parameters are ignored, otherwise the string|buffer is used as command to write to the serial.\r\n\r\n**_string|number|regex|function expected (optional, default: `OK`)_**\r\n\r\n**_object options (optional)_**\r\n\r\n* `timeout`: command timeout in msec (if not defined, default of modem is used, see setConfig())\r\n* `resultProcessor`: result preprocessor, it's result will be considered the processed and final result as passed to promise\r\n\r\nReturns a promise.\r\n\r\n\r\n#### addCommand (command, expected, options)\r\n\r\nAdds the given command to the pending commands list.\r\nThe calling semantics are identical to `run(command, expected, callback, processor)`\r\n\r\nReturns a promise.\r\n\r\n\r\n#### read (n)\r\nShortcut helper to `run` a command that just reads n bytes.\r\nNOTE: after some refactoring initial CR|NL are automatically discarded and will thus never be read. This will likely have to change..\r\n\r\n**_number n (required)_**\r\n\r\nNumber of bytes to read.\r\n\r\nReturns a promise.\r\n\r\n\r\n#### write (buffer)\r\nShortcut helper to `run` a command that just writes `buffer` to serial and does not wait for a response.\r\n\r\n**_Buffer buffer (required)_**\r\n\r\nBuffer to write to serial.\r\n\r\nReturns a promise.\r\n\r\n#### getInBuffer ()\r\nGet contents of serial in buffer.\r\n\r\n#### clearInBuffer ()\r\nClear contents of serial in buffer.\r\n\r\n#### getNotifications ()\r\nGet array of registered notifications.\r\n\r\n#### clearNotifications ()\r\nClear deregister all notifications.\r\n\r\n#### addNotification (notification, regex, handler)\r\nRegister a new notification.\r\n\r\n**_string|Notification notification (required)_**\r\n\r\nIn case a [Notification](#notification) is passed the remaining parameters are ignored.\r\nOtherwise a string to uniquely identify the notification is expected. Will overwrite any previsouly notifications with the same value.\r\n\r\n**_RegExp regex (optional)_**\r\n\r\nMatching expression that will be looked out for in the buffer to detect any unsolicited incoming data.\r\n\r\n**_function handler(Buffer buffer, Array matches) (optional)_**\r\n\r\nNotification handler that will be called once `regex` matches incoming data. Will be passed the whole matches buffer and corresponding matches as arguments.\r\n\r\n#### removeNotification (name)\r\nUnregister notification with given name.\r\n\r\n\r\n### Command\r\n\r\n    var Command = require('at-commander').Command;\r\n\r\n    var myCommand = new Command(command, expected, options);\r\n\r\n    modem.run(myCommand); // or\r\n    modem.addCommand(myCommand);\r\n\r\nThe constructor semantics are very much identical to the options of [run(command, expected, options)](#run-command-expected-options) which serves as shortcut.\r\n\r\n### Notification\r\n\r\n    var Notification = require('at-commander').Notification;\r\n\r\n    var myNotification = new Notification(name, regex, handler);\r\n\r\n    modem.addNotification(myNotification);\r\n\r\nPlease note that [addNotification(notification, regex, handler)](#addNotification-notification-regex-handler) is the friendly shortcut.\r\n\r\n## Events\r\n\r\nEvent handlers can be set using `Modem.on(eventName, callback)`\r\n\r\n### open\r\nPlease see https://www.npmjs.com/package/serialport#onopen-callback\r\n\r\n### close\r\nhttps://www.npmjs.com/package/serialport#onclose-callback\r\n\r\n### data\r\nPlease see https://www.npmjs.com/package/serialport#ondata-callback\r\n\r\n### disconnect\r\nPlease see https://www.npmjs.com/package/serialport#ondisconnect-callback\r\n\r\n### error\r\nPlease see https://www.npmjs.com/package/serialport#onerror-callback\r\n\r\n### notification\r\nWill be called if any registered notification matches incoming data.\r\nWARNING: currently disabled, will have to be refactored\r\n\r\n### command\r\nThe command event is triggered if a command _successfully_ completes.\r\n\r\n`function callback(Command command, result)`\r\n\r\nThe type/contents of `result` is according to the command operations (also see section [Promise based commands](#promise-based-commands)).\r\nThe most interesting thing about this callback is that it contains the used `Command` object which in particular also has the following interesting properties:\r\n\r\n    command.result.buf -> complete accepted response of type Buffer\r\n    command.result.matches -> if and only if an expected response using a matching mechanism is used: the resulting matches\r\n    command.result.processed -> if and only if a (default or custom) processor function is passed to the command (will be the same as result)\r\n\r\n### discarding\r\nThe discarding event is triggered if the inBuffer discards data due to a timeout.\r\n\r\n`function callback(Buffer buffer)`","a_random_app":"TUTORIAL","babel-plugin-object-entries-and-values-to-object-keys":"`Object.values(obj)` -> `Object.keys(obj).map(key => obj[key])`\n\n`Object.entries(obj)` -> `Object.keys(obj).map(key => [key, obj[key]])`\n\nForked from Jacob Mischka's https://github.com/jacobmischka/babel-plugin-object-values-to-object-keys\n","babel-plugin-require-context-hook-babel7":"# babel-plugin-require-context-hook\n\n## Usage\n\nbabelrc:\n\n```\n\"plugins\": [\n\t\"require-context-hook\"\n]\n```\n\nWherever you configure babel-register (your source file, a register script, etc):\n\n```\nrequire('babel-plugin-require-context-hook/register')();\n```\n\n## How it works\n\nThe register script `babel-plugin-require-context-hook/register` implements the function `require.context` with an extra parameter-- the directory in which the calling file resides-- and places that function on the global scope.\n\nThe Babel plugin `babel-plugin-require-context-hook` rewrites all calls to `require.context` into calls to this global function, passing in `__dirname` as the extra parameter.\n","babel-preset-goodway":"# babel-preset-goodway","babel-slot-fill":"# Babel-Slot-Fill \n\nBabel Slot Fill is a simple babel plugin that allows you to write React components like this:\n\n```JSX\nconst Heading = withSlots(props => (\n  <header>\n    <slot as=\"title\" />\n  </header>\n));\n\nconst MyApp = props => (\n  <main>\n    <Heading>\n      <fill name=\"title\">\n        <h1>Title</h1>\n      </fill>\n    </Heading>\n  </main>\n);\n```\n\nwhich compiles out to:\n\n```JSX\nconst Heading = props => (\n  <header>\n    {props.title}\n  <header>\n);\n\nconst MyApp = props => (\n  <main>\n    <Heading title={<h1>Title</h1>} />\n  </main>\n);\n```\n\nThis gives you the developer experience of composing components while also allowing you to pass in more than just `children` to\nyour components.\n\n\n## How to use\n\nFirst install:\n\n```Javascript\nyarn add babel-slot-fill\n```\n\nthen add to your `.babelrc` file:\n\n```JSON\n{\n  \"plugins\": [\n    \"babel-slot-fill\"\n  ]\n}\n```","bac-lib":"//å©è®°è¯\nmnemonic_string = \"soul bounce omit zone believe true behave during uncle eye salmon awful\";\nlet seed = bip39.mnemonicToSeed(mnemonic_string);\nlet node = HDNode.fromSeedHex(seed);\nlet keyPair = ECPair.fromWIF(node.keyPair.toWIF());\nlet privateKey = keyPair.d.toBuffer(32);\nlet pub = keyPair.getPublicKeyBuffer();\nlet a = {\n    \"wid\": \"219c2234-be57-4058-8b2e-35b12a633308\",\n};\n//\nvar signature = bacSign.sign(JSON.stringify(a), privateKey, 1);\n// å©è®°è¯\nconsole.log(\"å©è®°è¯ -> \", mnemonic_string);\n// // address\naddress = HDNode.fromSeedBuffer(seed).getAddress();\nconsole.log(\"address -> \", address);\n// // // ç§é¥\nconsole.log('privateKey -> ', privateKey.toString('hex'));\n// // ç­¾å\nconsole.log('signature -> ', signature.toString(\"hex\"));\n// // data\nconsole.log('data -> ', JSON.stringify(a));","backbone.rel":"# Backbone.Rel\n\nBackbone.Rel extends your Backbone models with a lightweight relationships manager.\n\n## How does it work? API\n\n### Rel\n\nBackbone.Rel exposes a method `rel` that is a relationship *getter*.\n\n### hasMany\n\nYou can implement a `hasMany` method in a `Model` to define a relationship.\nThe method must return an object with the relation name as a key and options as a value.\n\nOptions:\n\n  - `collection`: You must specify the collection.\n  - `filter`: A function that will be used to filter the collection.\n  - `id`: The foreign id pointing to your model.\n\n### belongsTo\n\nYou can implement a `belongsTo` method in a `Model` or a `Collection` to define a relationship.\nThe method must return an object with the relation name as a key and the collection as a value.\n\nIf you want to define a `belongsTo` relationship on a collection you have to store the key\non the collection object in your `initialize`.\n\n## Accesing nested relationships, the \"monadic\" `rel` getter.\n\nYou can pass as many arguments as you want to the `rel` getter in order to get nested relationships.\nAny failure on the getter chain will be properly propagated, avoiding `TypeError: Cannot call method 'foo' of null`.\n\n## Example\n\n``` javascript\n// models/project.js\nModels.Project.hasMany = function () {\n  return {\n    users: {collection: Collections.users, id: 'project_id'}\n  , tasks: {collection: Collection.tasks, filter: function (task) {\n      return task.rel('project') ? task.rel('project').id === this.id : null;\n    }}\n  };\n};\n\n// models/user.js\nModels.User.hasMany = function () {\n  return {\n    tasks: {collection: Collections.tasks, id: 'user_id'}\n  };\n};\n\nModels.User.belongsTo = function () {\n  return {\n    project: Collection.projects\n  };\n};\n\n// models/task.js\nModels.Task.belongsTo = function () {\n  return {\n    user: Collections.users\n  , project: function (task) {\n      return task.rel('user.project');\n    }\n  };\n};\n\nvar project = new Project({id: 1})\n  , user = new User({id: 1, project_id: 1})\n  , task1 = new Task({id: 1, user_id: 1})\n  , task2 = new Task({id: 2, user_id: 1});\n\nassert.equal(user.rel('tasks').length, 2);\nassert.equal(user.rel('project'), project);\nassert.equal(task1.rel('user'), user);\nassert.equal(task1.rel('project'), project);\n```\n\n## Dependencies\n\nBackbone.Rel depends on [underscore.inflection](https://github.com/jeremyruppel/underscore.inflection).\n\n## Tests\n\nYou must have node installed in order to run the tests.\n\n```\nnpm install\nmake\n```\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2012 Pau Ramon <masylum@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","basscss-background-colors":"\nUse this suite of background color utilities to directly style elements.\nThe color values used in this module are from [mrmrs/colors](http://clrs.cc/).\n\n## Background Colors\n\n```html\n<div class=\"center p1 white bg-black\">.bg-black</div>\n<div class=\"center p1 bg-gray\">.bg-gray</div>\n<div class=\"center p1 bg-silver\">.bg-silver</div>\n<div class=\"center p1 bg-white\">.bg-white</div>\n<div class=\"center p1 bg-aqua\">.bg-aqua</div>\n<div class=\"center p1 bg-blue\">.bg-blue</div>\n<div class=\"center p1 white bg-navy\">.bg-navy</div>\n<div class=\"center p1 bg-teal\">.bg-teal</div>\n<div class=\"center p1 bg-green\">.bg-green</div>\n<div class=\"center p1 bg-olive\">.bg-olive</div>\n<div class=\"center p1 bg-lime\">.bg-lime</div>\n<div class=\"center p1 bg-yellow\">.bg-yellow</div>\n<div class=\"center p1 bg-orange\">.bg-orange</div>\n<div class=\"center p1 bg-red\">.bg-red</div>\n<div class=\"center p1 bg-fuchsia\">.bg-fuchsia</div>\n<div class=\"center p1 bg-purple\">.bg-purple</div>\n<div class=\"center p1 white bg-maroon\">.bg-maroon</div>\n<div class=\"center p1 bg-darken-1\">.bg-darken-1</div>\n<div class=\"center p1 bg-darken-2\">.bg-darken-2</div>\n<div class=\"center p1 bg-darken-3\">.bg-darken-3</div>\n<div class=\"center p1 bg-darken-4\">.bg-darken-4</div>\n<div class=\"bg-black\">\n  <div class=\"center p1 white bg-lighten-1\">.bg-lighten-1</div>\n  <div class=\"center p1 white bg-lighten-2\">.bg-lighten-2</div>\n  <div class=\"center p1 white bg-lighten-3\">.bg-lighten-3</div>\n  <div class=\"center p1 white bg-lighten-4\">.bg-lighten-4</div>\n</div>\n```\n\n","benchmark.php":"Read ME","bennewton":"# NPM Contact Card\n\n![version](https://img.shields.io/npm/v/bennewton.svg?style=flat-square)\n\nMy take on the NPX me contact card.\n\nTo run - `npx bennewton`\n\nTo make your own, fork this Repo and update the myData.js, add ascii art to asciiArt.js or leave file empty. When updated, publish to npm as your own new package.\n","binary-lazy-loading":"# binary-lazy-loading\nInstead of brute forcing the entire list of images to be lazily loaded, use binary search algorithm to minimize looping of testing whether the element is in view port or not. \n ## Configure\nCall `registerLazyImageScrollHandler()` in `componentDidMount` of root class to register scroll listener. \n ## How to use it ?\nJust import it using `import LazyImage from 'lazy-image'` & whereever `<img />` tag is needed, use `<LazyImage src={this.props.src} />`. And that will lazy load the image with optimized version of lazy loading. \n","bip-pod-pagerduty":"![PagerDuty](pagerduty.png) bip-pod-pagerduty\n=======\n\n[pagerduty](https://www.pagerduty.com/) pod for [bipio](https://bip.io).\n\n## Installation\n\nFrom bipio server root directory\n\n    npm install bip-pod-pagerduty\n    ./tools/pod-install.js -a pagerduty [-u optional account-wide channel auto install]\n\nThe pod-install script is a server script which will register the pod with the bipio server and add sparse\nconfiguration to your NODE_ENV environment config ('default.json', staging or production)\nkeyed to 'pagerduty', based on the default config in the pod constructor.  It will also move the\npod icon into the server cdn\n\nManually restart the bipio server at your convenience.\n\n## Documentation\n\n[Bipio Docs](https://bip.io/docs/pods/pagerduty)\n\n## License\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n\nCopyright (c) 2017 InterDigital, Inc. All Rights Reserved\n","bitcoin-merkle-tree":"# bitcoin-merkle-tree\n\n[![npm version](https://img.shields.io/npm/v/bitcoin-merkle-tree.svg)](https://www.npmjs.com/package/bitcoin-merkle-tree)\n[![Build Status](https://travis-ci.org/mappum/bitcoin-merkle-tree.svg?branch=master)](https://travis-ci.org/mappum/bitcoin-merkle-tree)\n[![Dependency Status](https://david-dm.org/mappum/bitcoin-merkle-tree.svg)](https://david-dm.org/mappum/bitcoin-merkle-tree)\n\n**Verify Bitcoin Merkle trees**\n\nBitcoin [BIP37](https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki) adds support for `merkleblock` messages, which allow clients to download blocks that only include transactions relevant to them. The transactions are selected via a Bloom Filter.\n\nThis module verifies the Merkle proofs in a `merkleblock` message, and lists the included transactions which match the filter.\n\n## Usage\n\n`npm install bitcoin-merkle-tree`\n\n```js\nvar merkleTree = require('bitcoin-merkle-tree')\n\n// build partial merkle tree object (block #681135 in testnet)\nvar partialMT = merkleTree.build({\n  hashes: [\n    new Buffer('52a893ef120d5e24aa38604ead9ada6628eea417df6d6096ef0dd7b73a89c0e9', 'hex'),\n    new Buffer('a76a1e1bffbbb254bd897e379298549eb8ff4aa57a4bb4c06637b36d76833207', 'hex'),\n    new Buffer('056b4e64697677788744a8ad23cc407cbc1c357ff889d9975edd431fb779466f', 'hex'),\n    new Buffer('3c51bfb4f9cdd2b8e3a5c47cb1b3bdbc8879a1c1b238d4123dcb572a00b2b80e', 'hex'),\n    new Buffer('d6d1f9ca0a4017050379a82ecccb050cf4218f2180087e9592110972a71e375c', 'hex')\n  ],\n  include: [\n    new Buffer('3c51bfb4f9cdd2b8e3a5c47cb1b3bdbc8879a1c1b238d4123dcb572a00b2b80e', 'hex'),\n    new Buffer('d6d1f9ca0a4017050379a82ecccb050cf4218f2180087e9592110972a71e375c', 'hex')\n  ],\n  merkleRoot: new Buffer('b9b4500294c18487dc32a929b587475fbf9652beb7d73010ea37ee0483e52e58', 'hex')\n})\n// { flags: [ 235, 1 ],\n//   hashes:\n//    [ <Buffer 19 d6 5e 9e 20 d4 55 db ae 6d 11 39 66 54 7a 1d 41 91 e3 cf eb 3c 4c 2a b9 0e d2 79 5f 39 c4 cc>,\n//      <Buffer 05 6b 4e 64 69 76 77 78 87 44 a8 ad 23 cc 40 7c bc 1c 35 7f f8 89 d9 97 5e dd 43 1f b7 79 46 6f>,\n//      <Buffer 3c 51 bf b4 f9 cd d2 b8 e3 a5 c4 7c b1 b3 bd bc 88 79 a1 c1 b2 38 d4 12 3d cb 57 2a 00 b2 b8 0e>,\n//      <Buffer d6 d1 f9 ca 0a 40 17 05 03 79 a8 2e cc cb 05 0c f4 21 8f 21 80 08 7e 95 92 11 09 72 a7 1e 37 5c> ],\n//   numTransactions: 5,\n//   merkleRoot: <Buffer b9 b4 50 02 94 c1 84 87 dc 32 a9 29 b5 87 47 5f bf 96 52 be b7 d7 30 10 ea 37 ee 04 83 e5 2e 58> }\n\n// extract included hashes from object\nvar hashes = merkleTree.extract(partialMT)\nconsole.log('Matched transactions: ', hashes.map(function(b) { return b.toString('hex') }))\n```\n\n##### `var partialMerkleTree = merkleTree.build(block)`\n\nConstruct proof object for transactions. Proof object:\n```js\n{\n  flags: number[],\n  hashes: Buffer[],\n  numTransactions: number,\n  merkleRoot: Buffer\n}\n```\n\n##### `var hashes = merkleTree.verify(partialMerkleTree)`\n\nTakes a block from a `merkleblock` message, and verifies the tree. An error will be thrown if the tree does not match the expected Merkle root. Returns an array of txids (as `Buffers`), that matched the Bloom filter.\n","bizfly-unleash-proxy-client":"# Unleash Proxy Client for the browser (js)\n\nThis is a tiny Unleash Client SDK you can use together with the \n[Unleash Hosted Proxy](https://www.unleash-hosted.com/articles/the-unleash-proxy). \nThis makes it super simple to use Unleash-hosted from any single page app. \n\nThis client expect `fetch` to be available. If you need to support older\nbrowsers you should probably use the [fetch polyfill](https://github.com/github/fetch). \n\n\n## How to use the client as a module.\n\n\n**Step 1: Install**\n```js\nnpm install bizfly-unleash-proxy-client --save\n```\n\n**Step 2: Initialize the SDK**\nYou need to have a Unleash-hosted instance, and the proxy need to be enabled. In addition you will need a proxy-specific `clientKey` in order to connect  to the Unleash-hosted Proxy.\n```js\nimport {Â UnleashClient } from 'bizfly-unleash-proxy-client';\n\nconst unleash = new UnleashClient({\n    url: 'https://hostname/hosted/api',\n    clientKey: 'your-proxy-key',\n    appName: 'my-webapp'\n});\n\n// Used to set the context fields, shared with the Unleash Proxy\nunleash.updateContext({userId: '1233'});\n\n// Start the background polling\nunleash.start();\n```\n\n**Step 3: Check if feature toggle is enabled**\n```js\nunleash.isEnabled('proxy.demo');\n```\n\n\n**Step 4: Get toggle variant**\n```js\nconst variant = unleash.getVariant('proxy.demo');\nif(variant.name === 'blue') {\n // somehting with variant blue...\n}\n```\n\n**Listen for updates via the EventEmitter**\nThe client is also an event emitter. This means that your code can subscribe to updates from the client. \nThis is a neat way to update a single page app when toggle state updates. \n\n```js\nunleash.on('update', () => {\n    const myToggle = unleash.isEnabled('proxy.demo');\n    //do something useful\n});\n```\n\n\n## How to use the client via CDN.\n\n```html\n<html>\n<head>\n    <script src=\"https://unpkg.com/bizfly-unleash-proxy-client@latest/build/main.min.js\" type=\"text/javascript\"></script>\n    <script type=\"text/javascript\">\n        var config = {url: 'https://hostname/hosted/api', clientKey: 'some-proxy-key', appName: 'web'};\n        var client = new unleash.UnleashClient(config);\n        clinet.updateContext({userId: '1233'})\n\n        client.on('update', () => {\n            console.log(client.isEnabled('demo.toggle'));\n        });\n        client.start();\n    </script>\n</head>\n</html>\n```","blobby":"# blobby\n\nNo, not that [Mr. Blobby](https://www.youtube.com/watch?v=NngdWbvpztk).\n\nBlobby is an HTTP Proxy for Blob storage systems (such as S3) that automatically\nshards and replicates your data. Useful for single and multi datacenter architectures,\n**blobby** scales your storage and throughput requirements by way of sharding,\nas well as enables fast local reads in multi datacenter replication setups.\nAdditionally **blobby** provides a simple CLI for analyzing your complex data\narchitectures by way of storage comparisons, repairs, stats, and more.\n\n![NPM](https://raw.githubusercontent.com/asilvas/blobby/master/docs/architecture.jpg)\n\n\n## Installation\n\nBlobby can be installed as a local dependency of your app:\n```\nnpm i blobby --save\n./node_modules/.bin/blobby\n```\n\nOr installed globally:\n```\nnpm i blobby -g\nblobby\n```\n\n\n## Basic Usage\n\nStart the HTTP Proxy Server:\n```\nblobby server\n```\n\nCopy between storage systems:\n```\nblobby copy myOldStorage myNewStorage\n```\n\nSee `help` for a full list of commands:\n```\nblobby help\n```\n\n[Full Command List](#full-command-list)\n\n\n## Options\n\nA number of configuration formats are supported, including\nJSON, [JSON5](http://json5.org/), CommonJS, and\n[Secure Configurations](#secure-configuration).\n\n| Option | Type | Default | Desc |\n| --- | --- | --- | --- |\n| config | arrayOf(string) | `[]` | One or more configuration files. If none are provided `config-env` will be used |\n| config-dir | string | `\"config\"` | Directory of configuration files |\n| config-env | string | `\"NODE_ENV\"` | Environment variable used to detect configuration |\n| config-default | string | `\"local\"` | Default configuration to use if environment is not available |\n| config-base | string | none | If specified will use this configuration as the base (defaults) config that will be deep merged |\n| config-exts | arrayOf(string) | `['.json', '.json5', '.js']` | Supported extensions to detect for with configuration files |\n| secure-config | string | none | Directory of secure configuration files |\n| secure-secret | string | none | The secret required to decrypt secure configuration files |\n| secure-file | string | none | File to load that holds the secret required to decrypt secure configuration files |\n| mode | string | `\"headers\"` | Used when comparing files. For usage see [Compare Modes](#compare-modes) |\n| recursive | boolean | `true` | Enable deep query (recursive subdirectories) for operations that support it |\n| removeGhosts | boolean | `false` | For `repair`'s if `true`, will remove missing file instances instead of copying to missing storage |\n| resume-key | string | none | If a previous command was stopped you can resume from where you left off with this option |\n| date-min | string | none | Minimum date required when processing records, all others are ignored |\n| date-max | string | none | Maximum date required when processing records, all others are ignored |\n| retry-min | number | `1000` | Minimum timeout (in ms) for first retry, where retries are applicable |\n| retry-factor | number | `2` | Multiple in time applied to retry attempts, where retries are applicable |\n| retry-attempts | number | `3` | Maximum retry attempts before failure is reported, where retries are applicable |\n\nExample using the default `NODE_ENV` environment variable to load config data:\n\n```\nblobby server --config-dir lib/config\n```\n\n\n\n## Configuration\n\n| Name | Type | Default | Desc |\n| --- | --- | --- | --- |\n| http | HttpBindings | `{ \"default\": { \"port\": 80 } }` | Collection (hash for ease of merging) of HTTP bindings |\n| http.{id} | HttpBinding | (required) | HTTP Binding Object |\n| http.{id}.port | number | `80` | Port to bind to |\n| http.{id}.host | string | undefined | Host to bind to, or nothing to use Node.js default |\n| http.{id}.ssl | Object | (required if enabling SSL) | See [Node.js TLS Options](https://nodejs.org/api/tls.html#tls_new_tls_tlssocket_socket_options) | http.{id}.ssl.pfx | Buffer or string | none | If string will attempt to load pfx from disk |\n| http.{id}.ssl.key | Buffer or string | none | If string will attempt to load private key from disk |\n| http.{id}.ssl.cert | Buffer or string | none | If string will attempt to load certificate from disk |\n| httpAgent | Object|Boolean | [Defaults](https://github.com/node-modules/agentkeepalive#new-agentoptions) | Initialize global http(s) agents with these options. Defaults are optimized for most scenarios. |\n| httpHandler | string | undefined | If path is provided to a module (`Function(req, res)`) will allow parent app to peek into incoming requests. If handler returns `false` Blobby will ignore the request altogether and assume parent is handling the response |\n| storage | StorageBindings | (required) | Collection of storage bindings |\n| storage.{id} | StorageBinding| (required) | Storage Binding Object |\n| storage.{id}.driver | string | (required) | Module name/path to use as storage client |\n| storage.{id}.maxUploadSize | number | none | Size in bytes allowed by uploads |\n| storage.{id}.cacheControl | string | `\"public,max-age=31536000\"` | Default cache control headers to apply for GET's and PUT's if file does not provide it |\n| storage.{id}.accessControl | string | `\"public-read\"` | Default to publically readable. [Full ACL List](http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) |\n| storage.{id}.driver | string | (required) | Module name/path to use as storage client |\n| storage.{id}.dirSplit | number | false | (future) If Number, auto-split paths every N characters to make listing of directories much faster |\n| storage.{id}.auth | string | none | Required to support Uploads and Deletes, see [Secure API Operations](#secure-api-operations) |\n| storage.{id}.replicas | arrayOf(string) | `[]` | Required to support Replication, see [File Replication](#file-replication) |\n| storage.{id}.options | Object | {} | Options provided to storage driver |\n| retry | RetryOptions | (optional) | Retry options used by some HTTP Server operations |\n| retry.min | number | `500` | Minimum timeout (in ms) for first retry |\n| retry.factor | number | `2` | Multiple in time applied to retry attempts |\n| retry.retries | number | `3` | Maximum retry attempts before failure is reported |\n| cors | CorsOptions | (optional) | CORS accessed is enabled by default, for `GET`'s only |\n| cors.access-control-allow-credentials | string | `true` | Allow credentials |\n| cors.access-control-allow-headers | string | `*` | Allow headers |\n| cors.access-control-allow-methods | string | `GET` | Allow methods |\n| cors.access-control-allow-origin | string | `*` | Allow origins |\n| cors.access-control-max-age | string | `86400` | Cache duration of CORS headers |\n| auth | AuthOptions | (optional) | Collection of named auth groups |\n| auth.{id}.driver | string | (required) | Path of the driver to load, ala `blobby-auth-header` |\n| auth.{id}.options | Object | (optional) | Any options to pass to the auth driver |\n| auth.{id}.publicReads | Boolean | `true` | Set to false if GET's also require auth |\n| log | LogOptions | (optional) | Options based on `EventEmitter` |\n| log.warnings | bool | `true` | Log warnings to `console.warn` automatically. You can subscribe to `client.on('warn')`  if you prefer |\n| log.errors | bool | `true` | Log warnings to `console.error` automatically. You can subscribe to `client.on('error')`  if you prefer |\n\n\n### Storage Drivers\n\n* [blobby-s3](https://github.com/asilvas/blobby-s3) - An S3 storage client for Blobby, powered by Knox.\n* [blobby-fs](https://github.com/asilvas/blobby-fs) - A File System storage client for Blobby.\n* [blobby-gcp-storage](https://github.com/asilvas/blobby-gcp-storage) - An Google Cloud storage client for Blobby.\n\n\n## Secure Configuration\n\nAn optional feature for sensitive credentials is to leverage the\nincluded [Config Shield](https://github.com/godaddy/node-config-shield)\nsupport. Any secure configuration objects will be merged into the\nparent configuration object. If `secure-config` option is provided,\nit's expected that for every configuration file, there will be a\ncorresponding secure configuration file using the same file name, but\nunder the **secure-config** directory.\n\n```\nblobby server --secure-config config/secure --secure-file config/secure/secret.txt\n```\n\nExample for creating a secure configuration:\n\n```\nnpm i config-shield -g\ncshield config/secure/local.json config/secure/secret.txt\nset storage { app1: { options: { password: 'super secret!' } } }\nsave\nexit\n```\n\nSee [Config Shield](https://github.com/godaddy/node-config-shield) for\nmore advanced usage.\n\n\n## Server\n\nStart HTTP Server using the provided [Configuration](#configuration).\n\n```\nblobby server\n```\n\n### REST API\n\n| Method | Route | Auth | Info |\n| --- | --- | --- | --- |\n| `GET` | `/{storageId}/{filePath}` | Public | Get a file from storage |\n| `HEAD` | `/{storageId}/{filePath}` | Public | Get info for file from storage |\n| `PUT` | `/{storageId}/{filePath}` | Secure | Create or overwrite file in storage. |\n| `PUT` (copy) | `/{storageId}/{filePath}` | Secure | Copy file via experimental header `x-amz-copy-source: [optional-bucket:]/source/path`. |\n| `DELETE` | `/{storageId}/{filePath}` | Secure | Delete file from storage |\n| `GET` | `/{storageId}/{directoryPath}/` | Secure | Get directory contents by postfixing the path with `/` |\n| `DELETE` | `/{storageId}/{filePath}/` | Secure | Delete directory (recursively) from storage |\n\nExample Usage:\n```\ncurl -XPUT -H \"Authorization: ApiKey shhMySecret\" --data-binary \"@./some-file.jpg\" http://localhost/myStorage/some/file.jpg\ncurl -XHEAD http://localhost/myStorage/some/file.jpg\ncurl http://localhost/myStorage/some/file.jpg\ncurl -H \"Authorization: ApiKey shhMySecret\" http://localhost/myStorage/some/\ncurl -XDELETE -H \"Authorization: ApiKey shhMySecret\" http://localhost/myStorage/some/file.jpg\n```\n\nDefault permissions will be applied via `storage.{id}.accessControl`, but can be overridden via the `x-amz-acl` header, like so:\n\n```\ncurl -XPUT -H \"x-amz-acl: private\" -H \"Authorization: ApiKey shhMySecret\" --data-binary \"@./some-file.jpg\" http://localhost/myStorage/some/file.jpg\n```\n\nThe above examples is a perfect segway into [Secure API Operations](#secure-api-operations).\n\n\n### Secure API Operations\n\nAs indicated in [Configuration](#configuration), `storage.{id}.auth` is required to support uploads and deletes.\n\nExample Config:\n\n```\n  auth: {\n    mainAuth: {\n      driver: './lib/my-jwt-handler',\n      options: { /* options only my auth driver will understand */ }\n    }\n  },\n  storage: {\n    store1: {\n      driver: '...',\n      auth: 'mainAuth' // uploads to store1 require mainAuth\n    }\n  }\n```\n\nIf you're creating your own Authorization handler, you can export a module with the following format:\n\n```\nmodule.exports = function(req, storageId, fileKey, authConfig, cb) {\n  doSomethingAsync(function (err) => {\n    if (err) return void cb(err); // fail authorization\n\n    cb(); // authorization check passed, let them through\n  });\n}\n```\n\nYour handler can be synchronous or asynchronous, but `cb` must be invoked in either case.\n\n#### Authorization Drivers\n\n* [Authorization Header](https://github.com/asilvas/blobby-auth-header) - An HTTP Authorization client.\n\n\n### File Replication\n\nAs indicated in [Configuration](#configuration), `storage.{id}.replicas` is required to enabled\nreplication. An array of one or more replicas can be provided, consisting of the storage identifier\nand optionally the configuration if the desired storage exists in a different environment (such\nas replication across data centers).\n\nFormat is `[ConfigId::]StorageId`, where `ConfigId` only needs to be specified if from a different\nenvironment.\n\nExample of two replicas, one from same environment, other from a different environment:\n\n```\nreplicas: ['myOtherStorage', 'otherConfig::AnotherStorage']\n```\n\n***Important:*** Successful uploads (`PUT`'s) and deletes (`DELETE`'s) are only confirmed if all replica's\nhave been written to. This is to avoid data inconsistencies and race conditions (i.e. performing an\naction on an asset before it's been written in all locations). In cases where speed is more important\nthan consistency, querystring param `waitForReplicas=0` can be set. There is no way to turn off\nreplication without removing from configuration, so this option will only return success once the\nlocal storage is successful. The downside of this approach is that high availability is expected\nfor every replica, and uploads (or deletes) will fail if one of the replica's cannot be written to.\n\n\n\n## Full Command List\n\n```\nCommands:\n  checkdir <dir> <storage..>  One-Way shallow directory compare between storage\n                              bindings and/or environments\n  check <storage..>           One-Way compare files between storage bindings\n                              and/or environments\n  compare <storage..>         Compare files between storage bindings and/or\n                              environments\n  copydir <dir> <storage..>   One-way shallow directory copy between storage\n                              bindings and/or environments\n  copy <storage..>            One-way copy of files between storage bindings\n                              and/or environments\n  shard <storage> <dir>       Look up the given shard for a given storage and\n                              path\n  initialize <storage..>      Perform any initialization tasks required by the\n                              given storage (ex: pre-creating bucket shards in\n                              S3)\n  repair <storage..>          Repair files between storage bindings and/or\n                              environments\n  rmdir <dir> <storage..>     Delete files for the given directory and storage\n                              bindings and/or environments\n  server                      Start HTTP API Server\n  acl <dir> <storage..>       Set ACL's for a given directory for the given\n                              storage bindings and/or environments\n  stats <storage..>           Compute stats for storage bindings and/or\n                              environments\n```\n\n\n\n## Compare\n\nFor comparing the difference between storage bindings\nand/or environments. This is a two-way comparison. Use `check`\ninstead if you only want to do a one-way comparison.\n\n```\nblobby compare <storage..>\n```\n\nExample of comparing two bindings:\n```\nblobby compare old new\n```\n\nExample of comparing one binding across 2 datacenters:\n```\nblobby compare app --config dc1 dc2\n```\n\nExample of comparing two bindings across 2 datacenters:\n```\nblobby compare old new --config dc1 dc2\n```\n\n### Compare Modes\n\n```\nblobby compare old new --mode deep\n```\n\nAvailable modes:\n\n* `fast` - A simple check of file existence. Only recommended\n  when you're comparing stores configured for immutable data. `Size` check will\n  also be performed, if the storage driver provides it.\n* `headers` (recommended) - Similar in speed to `fast`, but requires `ETag` or `LastModified`\n  headers or comparison will fail. Should only be used between storage drivers\n  that support at least one of these headers. NOTE: S3 should only be compared\n  against other S3 storages in this mode due to their inability to overwrite these\n  headers.\n* `deep` - Performs an `ETag` check if available, otherwise falls back\n  to loading files and performing hash checks. This option can range\n  from a little slower, to much slower, depending on `ETag` availability.\n  Recommended for mutable storage comparisons where caching headers are not\n  available (ex: comparing a file system with S3 or vice versa).\n* `force` - If you want to skip comparison for any reason, this will force the\n  comparison to fail, resulting in update of the destination for all source\n  files. Also has the benefit of being the fastest option since destination does\n  not need queried.\n\n\n## Repair\n\nFor repairing the difference between storage bindings\nand/or environments. This is a two-way repair. Use `copy`\ninstead if you only want to do a one-way repair.\n\n![NPM](https://raw.githubusercontent.com/asilvas/blobby/master/docs/repair-env.jpg)\n\n```\nblobby repair <storage..>\n```\n\nExample of syncing data between old and new storage:\n```\nblobby repair old new\n```\n\nExample of syncing one storage across 2 datacenters:\n```\nblobby repair app --config dc1 dc2\n```\n\nExample of syncing two storage across 2 datacenters:\n```\nblobby repair old new --config dc1 dc2\n```\n\nFor usage of `mode`, see [Compare Modes](#compare-modes).\n\n\n## Stats\n\nQuery statistics against your storage(s).\n\n```\nblobby stats <storage..>\n```\n\nExample of querying stats for a single storage:\n```\nblobby stats old\n```\n\n\n\n## Initialize\n\nUseful one-time initialization required by some storage drivers,\nsuch as pre-creating shard buckets in S3.\n\n```\nblobby initialize <storage..>\n```\n\nExample of initializing a single storage:\n```\nblobby initialize new\n```\n\n\n\n## Shard\n\nUseful for identifying the location of a given directory for storage\ndrivers that support sharding.\n\n```\nblobby shard <storage> <dir>\n```\n\nExample:\n```\nblobby shard new 'some/path'\n```\n","blockcypher-unofficial":"# blockcypher-unofficial\n\n## Installation\n\nyou can install the npm module <a href=\"https://www.npmjs.com/package/blockcypher-unofficial\">here</a>\n\n```\nnpm install blockcypher-unofficial\n```\n\n<a href=\"https://github.com/blockai/abstract-common-blockchain\">See abstract-common-blockchain for API</a>\n\n## BlockCyphers's Abstract Common Blockchain Coverage \n  <a href=\"http://abstract-common-blockchain.herokuapp.com\"> Use this link to see what BlockCypher supports </a>\n\n\n## Convention\n\nStandard convention is described fully in the types.json file in the link above.\n\n## Usage\n\nsimply require the npm module at the top of the file\n```javascript\nvar blockcypher = require('blockcypher-unofficial');\n```\n##Networks\nThis adapter supports testnet, mainnet, and blockcyphers testnet. You may access each network by setting the network option to \none of these options:\n\ntestnet3: \"testnet\",\nBlockcypher's testnet: \"blockcypher-testnet\",\nmainnet: (anything but other two)\n\nyou may specify the options you wish to make a call like so:\n\n```javascript\nvar client = blockcypher({\n  network: \"testnet\"\n});\n\n//example call\nclient.Addresses.Unspents([\"address 1\", \"address 2\", ...], callback);\n```\n\nalternatively you can check out the comments above each function in lib if you wish to understand what each function expects and returns.\n\n## Maintainers\n* Andrew Malta: andrew.malta@yale.edu\n* Howard Wu: howardwu@berkeley.edu\n\n\n\n","bmaplib.lushu":"# BMapLib.LuShu\n\n## Installation\n\n### NPM\n\n```bash\n$ npm i --save bmaplib.lushu\n```\n\n### CDN\n\n```html\n<script src=\"//unpkg.com/bmaplib.lushu\"></script>\n```\n\n## Usage\n\n### ES Next\n\n```js\nimport LuShu from 'bmaplib.lushu'\n\n// You should use this lib after BaiduMap loaded. For Example:\n\nloadBaiduMap.then(() => {\n  new LuShu()\n})\n```\n\n### CDN\n\n```html\n<script src=\"//api.map.baidu.com/api?v=2.0\"></script>\n<script src=\"//unpkg.com/bmaplib.lushu\"></script>\n<script>\n  new BMapLib.Lushu()\n</script>\n```","brain-f-games":"#frontend-project-lvl1\n","brl-daily-quotation":"# About this package:\n\nThis package is responsible for listing the daily quotation of foreign currencies against the Brazillian Real (BRL), all based on SOAP services provided by Banco do Brasil for free, which you can see here: [SOAL Service Banco do Brasil](https://www3.bcb.gov.br/sgspub/JSP/sgsgeral/FachadaWSSGS.wsdl)\n\nYou can use destructor to get the requisition function and an object in the desired currency to get the daily quote.\n\n```javascript\nconst { CurrencyCode, getLastQuote } = require('./')\n\ngetLastQuote(CurrencyCode.EURO_BUY).then(console.log)\n```\n\nWith this code, you will obtain an object like this:\n\n```javascript\n{ \n  id: '21620',\n  isSpecial: 'false',\n  source: 'PTAX',\n  fullName: 'Exchange rate - Free - Euro (bid)',\n  shortName: 'Euro (bid)',\n  fullNamePTbr: 'Taxa de cÃ¢mbio - Livre - Euro (compra)',\n  shortNamePTbr: 'Euro (compra)',\n  periodicity: 'DiÃ¡ria',\n  periodicityInitials: 'D',\n  isLocked: 'false',\n  isPublic: 'true',\n  lastValue: '4.3522000',\n  defaultUnitPTbr: 'R$/u.m.c.',\n  defaultUnit: 'R$/c.m.u.',\n  dateCurrency: 2019-06-14T03: 00: 00.000Z\n}\n```\n\nThe quotation obtained is the daily, for more information and consultation of other services, on different dates for example, unfortunately we will have to wait for further updates of this package.\n\nThanks for use this package!!!","browser-logger":"connect-browser-logger\n======================\n\nDisplays Node.js server-side logs in your browser console.","browser-mjml-head-style":"## mj-style\n\nThis tag allows you to set CSS styles that will be applied to the <b>HTML</b> in your MJML document as well as the HTML outputted. The CSS styles will be added to the head of the rendered HTML by default, but can also be inlined by using the `inline=\"inline\"` attribute.\n\nHere is an example showing the use in combination with the `css-class` attribute, which is supported by all body components.\n\n```xml\n<mjml>\n  <mj-head>\n    <mj-attributes>\n      <mj-class name=\"mjclass\" color=\"green\" font-size=\"30px\" />\n    </mj-attributes>\n    <mj-style inline=\"inline\">\n      .blue-text div {\n        color: blue !important;\n      }\n    </mj-style>\n    <mj-style>\n      .red-text div {\n        color: red !important;\n        text-decoration: underline !important;\n      }\n    </mj-style>\n  </mj-head>\n  <mj-body>\n    <mj-section>\n      <mj-column>\n        <mj-text css-class=\"red-text\">I'm red and underlined</mj-text>\n        <mj-text css-class=\"blue-text\">I'm blue because of inline</mj-text>\n        <mj-text mj-class=\"mjclass\">I'm green</mj-text>\n      </mj-column>\n    </mj-section>\n  </mj-body>\n</mjml>\n```\n\n<p align=\"center\">\n  <a href=\"https://mjml.io/try-it-live/components/head-style\">\n    <img width=\"100px\" src=\"https://mjml.io/assets/img/svg/TRYITLIVE.svg\" alt=\"try it live\" />\n  </a>\n</p>\n\nattribute            | unit          | description                         | default value\n---------------------|---------------|-------------------------------------|---------------\ninline               | string        | set to \"inline\" to inline styles    | n/a\n\n<aside class=\"notice\">\n  Mjml generates multiple html elements from a single mjml element. For optimal flexibility, the `css-class` will be applied to the most outer html element, so if you want to target a specific sub-element with a css selector, you may need to look at the generated html to see which exact selector you need.\n</aside>\n","bt-pack":"![https://img.shields.io/badge/vscode-1.25.0-brightgreen.svg](https://img.shields.io/badge/vscode-1.30.2-brightgreen.svg) ![https://img.shields.io/badge/typescript-passing-blue.svg](https://img.shields.io/badge/javascript-passing-blue.svg)\r\n\r\n## BT-Pack\r\nå¯ä¼¸ç¼©çåç«¯æ¨¡æ¿ç»åæåå·¥å·ï¼æä¾å¤é¡µç»ä»¶åå¼åæ¹å¼ï¼åæ¶æ¯æVueåComponentså¼åã\r\n## å®è£\r\ncnpm | npm install bt-pack\r\n## è¿è¡\r\nå¨æ ¹ç®å½ä¸­æ°å»ºä»»ä½Jsæä»¶ï¼å¤å¶ä»¥ä¸åå®¹\r\n\r\n- const pack = require('bt-pack');\r\n- require('bt-utils');\r\n- // çå¬çä¸»ç®å½\r\n- global.listenDirectory = './app/';\r\n- // çå¬çæ¨¡æ¿è·¯å¾\r\n- global.templateDirectory = './app/teamplate/';\r\n- // å¬å±æ¨¡æ¿ç®å½\r\n- global.commonDirectory = './app/teamplate/common/';\r\n- // æåè¾åºç®å½\r\n- global.outDirectory = '/dist/';\r\n- // æ¯å¦æ ¼å¼åä»£ç \r\n- global.formatHtml = false;\r\n- // æ¯å¦åæä»¶æ¹åæå\r\n- global.singleListen = false;\r\n- // æ¯å¦åæ¬å¬å±ç»ä»¶\r\n- global.hasCommon = false;\r\n- // æ¯å¦å¼å¯pxè½¬Emæ¨¡å¼\r\n- global.hasLessPx2Em = false\r\n- // å¼å§è¿è¡\r\n- pack.run();","byted-vuedraggable":"<p align=\"center\"><img width=\"100\"src=\"https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/logo.png\"></p>\n<h1 align=\"center\">Vue.Draggable</h1>\n\n[![GitHub open issues](https://img.shields.io/github/issues/SortableJS/Vue.Draggable.svg?maxAge=2592000)](https://github.com/SortableJS/Vue.Draggable/issues?q=is%3Aopen+is%3Aissue)\n[![npm download](https://img.shields.io/npm/dt/vuedraggable.svg?maxAge=2592000)](https://www.npmjs.com/package/vuedraggable)\n[![npm download per month](https://img.shields.io/npm/dm/vuedraggable.svg)](https://www.npmjs.com/package/vuedraggable)\n[![npm version](https://img.shields.io/npm/v/vuedraggable.svg?maxAge=2592000)](https://www.npmjs.com/package/vuedraggable)\n[![Package Quality](http://npm.packagequality.com/shield/vuedragablefor.svg)](http://packagequality.com/#?package=vuedraggable)\n[![vue2](https://img.shields.io/badge/vue-2.x-brightgreen.svg)](https://vuejs.org/)\n[![MIT License](https://img.shields.io/github/license/SortableJS/Vue.Draggable.svg)](https://github.com/SortableJS/Vue.Draggable/blob/master/LICENSE)\n\nä½¿ç¨äº=èªä¿®æ¹ç byted-sortablejs\n\nVue component (Vue.js 2.0) or directive (Vue.js 1.0) allowing drag-and-drop and synchronization with view model array.\n\nBased on and offering all features of [Sortable.js](https://github.com/RubaXa/Sortable)\n\n## Demo\n\n![demo gif](https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/example.gif)\n\n\n## Features\n\n* Full support of [Sortable.js](https://github.com/RubaXa/Sortable) features:\n    * Supports touch devices\n    * Supports drag handles and selectable text\n    * Smart auto-scrolling\n    * Support drag and drop between different lists\n    * No jQuery dependency\n* Keeps in sync HTML and view model list\n* Compatible with Vue.js 2.0 transition-group\n* Cancellation support\n* Events reporting any changes when full control is needed\n\n## For Vue.js 2.0\n\nUse draggable component:\n\n### Typical use:\n``` html\n<draggable v-model=\"myArray\" :options=\"{group:'people'}\" @start=\"drag=true\" @end=\"drag=false\">\n   <div v-for=\"element in myArray\">{{element.name}}</div>\n</draggable>\n```\n.vue file:\n``` js\n  import draggable from 'vuedraggable'\n  ...\n  export default {\n        components: {\n            draggable,\n        },\n  ...\n```\n\n### With `transition-group`:\n``` html\n<draggable v-model=\"myArray\">\n    <transition-group>\n        <div v-for=\"element in myArray\" :key=\"element.id\">\n            {{element.name}}\n        </div>\n    </transition-group>\n</draggable>\n```\n\nDraggable component should directly wrap the draggable elements, or a `transition-component` containing the draggable elements.\n\n\n### With footer slot:\n``` html\n<draggable v-model=\"myArray\" :options=\"{draggable:'.item'}\">\n    <div v-for=\"element in myArray\" :key=\"element.id\" class=\"item\">\n        {{element.name}}\n    </div>\n    <button slot=\"footer\" @click=\"addPeople\">Add</button>\n</draggable>\n```\n\n\n### With Vuex:\n\n```html\n<draggable v-model='myList'>\n``` \n\n```javascript\ncomputed: {\n    myList: {\n        get() {\n            return this.$store.state.myList\n        },\n        set(value) {\n            this.$store.commit('updateList', value)\n        }\n    }\n}\n```\n\n\n### Props\n#### value\nType: `Array`<br>\nRequired: `false`<br>\nDefault: `null`\n\nInput array to draggable component. Typically same array as referenced by inner element v-for directive.<br>\nThis is the preferred way to use Vue.draggable as it is compatible with Vuex.<br>\nIt should not be used directly but only though the `v-model` directive:\n```html\n<draggable v-model=\"myArray\">\n```\n\n#### list\nType: `Array`<br>\nRequired: `false`<br>\nDefault: `null`\n\nAltenative to the `value` prop, list is an array to be synchronized with drag-and-drop.<br>\nThe main diference is that `list` prop is updated by draggable component using splice method, whereas `value` is immutable.<br>\n**Do not use in conjunction with value prop.**\n\n#### options\nType: `Object`<br>\nRequired: `false`\n\nOption used to initialize the sortable object see: [sortable option documentation](https://github.com/RubaXa/Sortable#options)<br>\nNote that all the method starting by \"on\" will be ignored as draggable component expose the same API via events.\n\n#### element\nType: `String`<br>\nDefault: `'div'`\n\nHTML node type of the element that draggable component create as outer element for the included slot.\n\n#### clone\nType: `Function`<br>\nRequired: `false`<br>\nDefault: `(original) => { return original;}`<br>\n\nFunction called on the source component to clone element when clone option is true. The unique argument is the viewModel element to be cloned and the returned value is its cloned version.<br>\nBy default vue.draggable reuses the viewModel element, so you have to use this hook if you want to clone or deep clone it.\n\n#### move\nType: `Function`<br>\nRequired: `false`<br>\nDefault: `null`<br>\n\nIf not null this function will be called in a similar way as [Sortable onMove callback](https://github.com/RubaXa/Sortable#move-event-object).\nReturning false will cancel the drag operation.\n\n```javascript\nfunction onMoveCallback(evt, originalEvent){\n   ...\n    // return false; â for cancel\n}\n```\nevt object has same property as [Sortable onMove event](https://github.com/RubaXa/Sortable#move-event-object), and 3 additional properties:\n - `draggedContext`:  context linked to dragged element\n   - `index`: dragged element index\n   - `element`: dragged element underlying view model element\n   - `futureIndex`:  potential index of the dragged element if the drop operation is accepted\n - `relatedContext`: context linked to current drag operation\n   - `index`: target element index\n   - `element`: target element view model element\n   - `list`: target list\n   - `component`: target VueComponent\n\nHTML:\n```HTML\n<draggable :list=\"list\" :move=\"checkMove\">\n```\njavascript:\n```javascript\ncheckMove: function(evt){\n    return (evt.draggedContext.element.name!=='apple');\n}\n```\nSee complete example: [Cancel.html](https://github.com/SortableJS/Vue.Draggable/blob/master/examples/Cancel.html), [cancel.js](https://github.com/SortableJS/Vue.Draggable/blob/master/examples/script/cancel.js)\n\n\n### Events\n\n* Support for Sortable events:\n\n  `start`, `add`, `remove`, `update`, `end`, `choose`, `sort`, `filter`, `clone`<br>\n  Events are called whenever onStart, onAdd, onRemove, onUpdate, onEnd, onChoose, onSort, onClone are fired by Sortable.js with the same argument.<br>\n  [See here for reference](https://github.com/RubaXa/Sortable#event-object-demo)\n\n  Note that SortableJS OnMove callback is mapped with the [move prop](https://github.com/SortableJS/Vue.Draggable/blob/master/README.md#move)\n\nHTML:\n```HTML\n<draggable :list=\"list\" @end=\"onEnd\">\n```\n\n* change event\n\n  `change` event is triggered when list prop is not null and the corresponding array is altered due to drag-and-drop operation.<br>\n  This event is called with one argument containing one of the following properties:\n  - `added`:  contains information of an element added to the array\n    - `newIndex`: the index of the added element\n    - `element`: the added element\n  - `removed`:  contains information of an element removed from to the array\n    - `oldIndex`: the index of the element before remove\n    - `element`: the removed element\n  - `moved`:  contains information of an element moved within the array\n    - `newIndex`: the current index of the moved element\n    - `oldIndex`: the old index of the moved element\n    - `element`: the moved element\n\n### Slots\nUse the `footer` slot to add none-draggable element inside the vuedraggable component.\nImportant: it should be used in conjunction with draggable option to tag draggable element.\nNote that footer slot will always be added after the default slot.\nEx:\n\n``` html\n<draggable v-model=\"myArray\" :options=\"{draggable:'.item'}\">\n    <div v-for=\"element in myArray\" :key=\"element.id\" class=\"item\">\n        {{element.name}}\n    </div>\n    <button slot=\"footer\" @click=\"addPeople\">Add</button>\n</draggable>\n```\n\n### Gotchas\n  - Drag operation with empty list:\n\n    To be able to drag items on an empty draggable component, set a min-height more than 0 on the `draggable` component or the `transition-group` if any and ensure the transition group has display: block; otherwise height won't work.\n\n### Fiddle\n\n- Simple:\nhttps://jsfiddle.net/dede89/sqssmhtz/\n\n- Two Lists:\nhttps://jsfiddle.net/dede89/32ao2rpm/\n\n- Example with list clone:\nhttps://jsfiddle.net/dede89/t3m5krea/\n\n- Example with transition-group:\nhttps://jsfiddle.net/dede89/m2v0orcn/\n\n- Example with table:\nhttps://jsfiddle.net/dede89/L54yu3L9/\n\n### Full demo example\n\n[draggable-example](https://github.com/David-Desmaisons/draggable-example)\n\n## For Vue.js 1.0\n\n[See here](documentation/Vue.draggable.for.ReadME.md)\n\n## Installation\n- Available through:\n``` js\n npm install vuedraggable\n```\n``` js\n Bower install vue.draggable\n```\n\n- #### For Modules\n\n  ``` js\n  // ES6\n  //For Vue.js 2.0\n  import draggable from 'vuedraggable'\n  ...\n  export default {\n        components: {\n            draggable,\n            ...\n        }\n        ...\n\n  //For Vue.js 2.0\n  var draggable = require('vuedraggable')\n  ```\n\n- #### For `<script>` Include\n\n```HTML\n\n<!-- CDNJS :: Vue (https://cdnjs.com/) -->\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/vue/2.3.4/vue.min.js\"></script>\n\n<!-- CDNJS :: Sortable (https://cdnjs.com/) -->\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/Sortable/1.6.0/Sortable.min.js\"></script>\n\n<!-- CDNJS :: Vue.Draggable (https://cdnjs.com/) -->\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.14.1/vuedraggable.min.js\"></script>\n\n```\n","cacache":"# cacache [![npm version](https://img.shields.io/npm/v/cacache.svg)](https://npm.im/cacache) [![license](https://img.shields.io/npm/l/cacache.svg)](https://npm.im/cacache) [![Travis](https://img.shields.io/travis/npm/cacache.svg)](https://travis-ci.org/npm/cacache) [![AppVeyor](https://ci.appveyor.com/api/projects/status/github/npm/cacache?svg=true)](https://ci.appveyor.com/project/npm/cacache) [![Coverage Status](https://coveralls.io/repos/github/npm/cacache/badge.svg?branch=latest)](https://coveralls.io/github/npm/cacache?branch=latest)\n\n[`cacache`](https://github.com/npm/cacache) is a Node.js library for managing\nlocal key and content address caches. It's really fast, really good at\nconcurrency, and it will never give you corrupted data, even if cache files\nget corrupted or manipulated.\n\nOn systems that support user and group settings on files, cacache will\nmatch the `uid` and `gid` values to the folder where the cache lives, even\nwhen running as `root`.\n\nIt was written to be used as [npm](https://npm.im)'s local cache, but can\njust as easily be used on its own.\n\n## Install\n\n`$ npm install --save cacache`\n\n## Table of Contents\n\n* [Example](#example)\n* [Features](#features)\n* [Contributing](#contributing)\n* [API](#api)\n  * [Using localized APIs](#localized-api)\n  * Reading\n    * [`ls`](#ls)\n    * [`ls.stream`](#ls-stream)\n    * [`get`](#get-data)\n    * [`get.stream`](#get-stream)\n    * [`get.info`](#get-info)\n    * [`get.hasContent`](#get-hasContent)\n  * Writing\n    * [`put`](#put-data)\n    * [`put.stream`](#put-stream)\n    * [`rm.all`](#rm-all)\n    * [`rm.entry`](#rm-entry)\n    * [`rm.content`](#rm-content)\n  * Utilities\n    * [`clearMemoized`](#clear-memoized)\n    * [`tmp.mkdir`](#tmp-mkdir)\n    * [`tmp.withTmp`](#with-tmp)\n  * Integrity\n    * [Subresource Integrity](#integrity)\n    * [`verify`](#verify)\n    * [`verify.lastRun`](#verify-last-run)\n\n### Example\n\n```javascript\nconst cacache = require('cacache')\nconst fs = require('fs')\n\nconst tarball = '/path/to/mytar.tgz'\nconst cachePath = '/tmp/my-toy-cache'\nconst key = 'my-unique-key-1234'\n\n// Cache it! Use `cachePath` as the root of the content cache\ncacache.put(cachePath, key, '10293801983029384').then(integrity => {\n  console.log(`Saved content to ${cachePath}.`)\n})\n\nconst destination = '/tmp/mytar.tgz'\n\n// Copy the contents out of the cache and into their destination!\n// But this time, use stream instead!\ncacache.get.stream(\n  cachePath, key\n).pipe(\n  fs.createWriteStream(destination)\n).on('finish', () => {\n  console.log('done extracting!')\n})\n\n// The same thing, but skip the key index.\ncacache.get.byDigest(cachePath, integrityHash).then(data => {\n  fs.writeFile(destination, data, err => {\n    console.log('tarball data fetched based on its sha512sum and written out!')\n  })\n})\n```\n\n### Features\n\n* Extraction by key or by content address (shasum, etc)\n* [Subresource Integrity](#integrity) web standard support\n* Multi-hash support - safely host sha1, sha512, etc, in a single cache\n* Automatic content deduplication\n* Fault tolerance (immune to corruption, partial writes, process races, etc)\n* Consistency guarantees on read and write (full data verification)\n* Lockless, high-concurrency cache access\n* Streaming support\n* Promise support\n* Fast -- sub-millisecond reads and writes including verification\n* Arbitrary metadata storage\n* Garbage collection and additional offline verification\n* Thorough test coverage\n* There's probably a bloom filter in there somewhere. Those are cool, right? ð¤\n\n### Contributing\n\nThe cacache team enthusiastically welcomes contributions and project participation! There's a bunch of things you can do if you want to contribute! The [Contributor Guide](CONTRIBUTING.md) has all the information you need for everything from reporting bugs to contributing entire new features. Please don't hesitate to jump in if you'd like to, or even ask us questions if something isn't clear.\n\nAll participants and maintainers in this project are expected to follow [Code of Conduct](CODE_OF_CONDUCT.md), and just generally be excellent to each other.\n\nPlease refer to the [Changelog](CHANGELOG.md) for project history details, too.\n\nHappy hacking!\n\n### API\n\n#### <a name=\"ls\"></a> `> cacache.ls(cache) -> Promise<Object>`\n\nLists info for all entries currently in the cache as a single large object. Each\nentry in the object will be keyed by the unique index key, with corresponding\n[`get.info`](#get-info) objects as the values.\n\n##### Example\n\n```javascript\ncacache.ls(cachePath).then(console.log)\n// Output\n{\n  'my-thing': {\n    key: 'my-thing',\n    integrity: 'sha512-BaSe64/EnCoDED+HAsh=='\n    path: '.testcache/content/deadbeef', // joined with `cachePath`\n    time: 12345698490,\n    size: 4023948,\n    metadata: {\n      name: 'blah',\n      version: '1.2.3',\n      description: 'this was once a package but now it is my-thing'\n    }\n  },\n  'other-thing': {\n    key: 'other-thing',\n    integrity: 'sha1-ANothER+hasH=',\n    path: '.testcache/content/bada55',\n    time: 11992309289,\n    size: 111112\n  }\n}\n```\n\n#### <a name=\"ls-stream\"></a> `> cacache.ls.stream(cache) -> Readable`\n\nLists info for all entries currently in the cache as a single large object.\n\nThis works just like [`ls`](#ls), except [`get.info`](#get-info) entries are\nreturned as `'data'` events on the returned stream.\n\n##### Example\n\n```javascript\ncacache.ls.stream(cachePath).on('data', console.log)\n// Output\n{\n  key: 'my-thing',\n  integrity: 'sha512-BaSe64HaSh',\n  path: '.testcache/content/deadbeef', // joined with `cachePath`\n  time: 12345698490,\n  size: 13423,\n  metadata: {\n    name: 'blah',\n    version: '1.2.3',\n    description: 'this was once a package but now it is my-thing'\n  }\n}\n\n{\n  key: 'other-thing',\n  integrity: 'whirlpool-WoWSoMuchSupport',\n  path: '.testcache/content/bada55',\n  time: 11992309289,\n  size: 498023984029\n}\n\n{\n  ...\n}\n```\n\n#### <a name=\"get-data\"></a> `> cacache.get(cache, key, [opts]) -> Promise({data, metadata, integrity})`\n\nReturns an object with the cached data, digest, and metadata identified by\n`key`. The `data` property of this object will be a `Buffer` instance that\npresumably holds some data that means something to you. I'm sure you know what\nto do with it! cacache just won't care.\n\n`integrity` is a [Subresource\nIntegrity](#integrity)\nstring. That is, a string that can be used to verify `data`, which looks like\n`<hash-algorithm>-<base64-integrity-hash>`.\n\nIf there is no content identified by `key`, or if the locally-stored data does\nnot pass the validity checksum, the promise will be rejected.\n\nA sub-function, `get.byDigest` may be used for identical behavior, except lookup\nwill happen by integrity hash, bypassing the index entirely. This version of the\nfunction *only* returns `data` itself, without any wrapper.\n\nSee: [options](#get-options)\n\n##### Note\n\nThis function loads the entire cache entry into memory before returning it. If\nyou're dealing with Very Large data, consider using [`get.stream`](#get-stream)\ninstead.\n\n##### Example\n\n```javascript\n// Look up by key\ncache.get(cachePath, 'my-thing').then(console.log)\n// Output:\n{\n  metadata: {\n    thingName: 'my'\n  },\n  integrity: 'sha512-BaSe64HaSh',\n  data: Buffer#<deadbeef>,\n  size: 9320\n}\n\n// Look up by digest\ncache.get.byDigest(cachePath, 'sha512-BaSe64HaSh').then(console.log)\n// Output:\nBuffer#<deadbeef>\n```\n\n#### <a name=\"get-stream\"></a> `> cacache.get.stream(cache, key, [opts]) -> Readable`\n\nReturns a [Readable Stream](https://nodejs.org/api/stream.html#stream_readable_streams) of the cached data identified by `key`.\n\nIf there is no content identified by `key`, or if the locally-stored data does\nnot pass the validity checksum, an error will be emitted.\n\n`metadata` and `integrity` events will be emitted before the stream closes, if\nyou need to collect that extra data about the cached entry.\n\nA sub-function, `get.stream.byDigest` may be used for identical behavior,\nexcept lookup will happen by integrity hash, bypassing the index entirely. This\nversion does not emit the `metadata` and `integrity` events at all.\n\nSee: [options](#get-options)\n\n##### Example\n\n```javascript\n// Look up by key\ncache.get.stream(\n  cachePath, 'my-thing'\n).on('metadata', metadata => {\n  console.log('metadata:', metadata)\n}).on('integrity', integrity => {\n  console.log('integrity:', integrity)\n}).pipe(\n  fs.createWriteStream('./x.tgz')\n)\n// Outputs:\nmetadata: { ... }\nintegrity: 'sha512-SoMeDIGest+64=='\n\n// Look up by digest\ncache.get.stream.byDigest(\n  cachePath, 'sha512-SoMeDIGest+64=='\n).pipe(\n  fs.createWriteStream('./x.tgz')\n)\n```\n\n#### <a name=\"get-info\"></a> `> cacache.get.info(cache, key) -> Promise`\n\nLooks up `key` in the cache index, returning information about the entry if\none exists.\n\n##### Fields\n\n* `key` - Key the entry was looked up under. Matches the `key` argument.\n* `integrity` - [Subresource Integrity hash](#integrity) for the content this entry refers to.\n* `path` - Filesystem path where content is stored, joined with `cache` argument.\n* `time` - Timestamp the entry was first added on.\n* `metadata` - User-assigned metadata associated with the entry/content.\n\n##### Example\n\n```javascript\ncacache.get.info(cachePath, 'my-thing').then(console.log)\n\n// Output\n{\n  key: 'my-thing',\n  integrity: 'sha256-MUSTVERIFY+ALL/THINGS=='\n  path: '.testcache/content/deadbeef',\n  time: 12345698490,\n  size: 849234,\n  metadata: {\n    name: 'blah',\n    version: '1.2.3',\n    description: 'this was once a package but now it is my-thing'\n  }\n}\n```\n\n#### <a name=\"get-hasContent\"></a> `> cacache.get.hasContent(cache, integrity) -> Promise`\n\nLooks up a [Subresource Integrity hash](#integrity) in the cache. If content\nexists for this `integrity`, it will return an object, with the specific single integrity hash\nthat was found in `sri` key, and the size of the found content as `size`. If no content exists for this integrity, it will return `false`.\n\n##### Example\n\n```javascript\ncacache.get.hasContent(cachePath, 'sha256-MUSTVERIFY+ALL/THINGS==').then(console.log)\n\n// Output\n{\n  sri: {\n    source: 'sha256-MUSTVERIFY+ALL/THINGS==',\n    algorithm: 'sha256',\n    digest: 'MUSTVERIFY+ALL/THINGS==',\n    options: []\n  },\n  size: 9001\n}\n\ncacache.get.hasContent(cachePath, 'sha521-NOT+IN/CACHE==').then(console.log)\n\n// Output\nfalse\n```\n\n##### <a name=\"get-options\"></a> Options\n\n##### `opts.integrity`\nIf present, the pre-calculated digest for the inserted content. If this option\nis provided and does not match the post-insertion digest, insertion will fail\nwith an `EINTEGRITY` error.\n\n##### `opts.memoize`\n\nDefault: null\n\nIf explicitly truthy, cacache will read from memory and memoize data on bulk read. If `false`, cacache will read from disk data. Reader functions by default read from in-memory cache.\n\n##### `opts.size`\nIf provided, the data stream will be verified to check that enough data was\npassed through. If there's more or less data than expected, insertion will fail\nwith an `EBADSIZE` error.\n\n\n#### <a name=\"put-data\"></a> `> cacache.put(cache, key, data, [opts]) -> Promise`\n\nInserts data passed to it into the cache. The returned Promise resolves with a\ndigest (generated according to [`opts.algorithms`](#optsalgorithms)) after the\ncache entry has been successfully written.\n\nSee: [options](#put-options)\n\n##### Example\n\n```javascript\nfetch(\n  'https://registry.npmjs.org/cacache/-/cacache-1.0.0.tgz'\n).then(data => {\n  return cacache.put(cachePath, 'registry.npmjs.org|cacache@1.0.0', data)\n}).then(integrity => {\n  console.log('integrity hash is', integrity)\n})\n```\n\n#### <a name=\"put-stream\"></a> `> cacache.put.stream(cache, key, [opts]) -> Writable`\n\nReturns a [Writable\nStream](https://nodejs.org/api/stream.html#stream_writable_streams) that inserts\ndata written to it into the cache. Emits an `integrity` event with the digest of\nwritten contents when it succeeds.\n\nSee: [options](#put-options)\n\n##### Example\n\n```javascript\nrequest.get(\n  'https://registry.npmjs.org/cacache/-/cacache-1.0.0.tgz'\n).pipe(\n  cacache.put.stream(\n    cachePath, 'registry.npmjs.org|cacache@1.0.0'\n  ).on('integrity', d => console.log(`integrity digest is ${d}`))\n)\n```\n\n##### <a name=\"put-options\"></a> Options\n\n##### `opts.metadata`\n\nArbitrary metadata to be attached to the inserted key.\n\n##### `opts.size`\n\nIf provided, the data stream will be verified to check that enough data was\npassed through. If there's more or less data than expected, insertion will fail\nwith an `EBADSIZE` error.\n\n##### `opts.integrity`\n\nIf present, the pre-calculated digest for the inserted content. If this option\nis provided and does not match the post-insertion digest, insertion will fail\nwith an `EINTEGRITY` error.\n\n`algorithms` has no effect if this option is present.\n\n##### `opts.algorithms`\n\nDefault: ['sha512']\n\nHashing algorithms to use when calculating the [subresource integrity\ndigest](#integrity)\nfor inserted data. Can use any algorithm listed in `crypto.getHashes()` or\n`'omakase'`/`'ãä»»ããã¾ã'` to pick a random hash algorithm on each insertion. You\nmay also use any anagram of `'modnar'` to use this feature.\n\nCurrently only supports one algorithm at a time (i.e., an array length of\nexactly `1`). Has no effect if `opts.integrity` is present.\n\n##### `opts.memoize`\n\nDefault: null\n\nIf provided, cacache will memoize the given cache insertion in memory, bypassing\nany filesystem checks for that key or digest in future cache fetches. Nothing\nwill be written to the in-memory cache unless this option is explicitly truthy.\n\nIf `opts.memoize` is an object or a `Map`-like (that is, an object with `get`\nand `set` methods), it will be written to instead of the global memoization\ncache.\n\nReading from disk data can be forced by explicitly passing `memoize: false` to\nthe reader functions, but their default will be to read from memory.\n\n##### `opts.tmpPrefix`\nDefault: null\n\nPrefix to append on the temporary directory name inside the cache's tmp dir. \n\n#### <a name=\"rm-all\"></a> `> cacache.rm.all(cache) -> Promise`\n\nClears the entire cache. Mainly by blowing away the cache directory itself.\n\n##### Example\n\n```javascript\ncacache.rm.all(cachePath).then(() => {\n  console.log('THE APOCALYPSE IS UPON US ð±')\n})\n```\n\n#### <a name=\"rm-entry\"></a> `> cacache.rm.entry(cache, key) -> Promise`\n\nAlias: `cacache.rm`\n\nRemoves the index entry for `key`. Content will still be accessible if\nrequested directly by content address ([`get.stream.byDigest`](#get-stream)).\n\nTo remove the content itself (which might still be used by other entries), use\n[`rm.content`](#rm-content). Or, to safely vacuum any unused content, use\n[`verify`](#verify).\n\n##### Example\n\n```javascript\ncacache.rm.entry(cachePath, 'my-thing').then(() => {\n  console.log('I did not like it anyway')\n})\n```\n\n#### <a name=\"rm-content\"></a> `> cacache.rm.content(cache, integrity) -> Promise`\n\nRemoves the content identified by `integrity`. Any index entries referring to it\nwill not be usable again until the content is re-added to the cache with an\nidentical digest.\n\n##### Example\n\n```javascript\ncacache.rm.content(cachePath, 'sha512-SoMeDIGest/IN+BaSE64==').then(() => {\n  console.log('data for my-thing is gone!')\n})\n```\n\n#### <a name=\"clear-memoized\"></a> `> cacache.clearMemoized()`\n\nCompletely resets the in-memory entry cache.\n\n#### <a name=\"tmp-mkdir\"></a> `> tmp.mkdir(cache, opts) -> Promise<Path>`\n\nReturns a unique temporary directory inside the cache's `tmp` dir. This\ndirectory will use the same safe user assignment that all the other stuff use.\n\nOnce the directory is made, it's the user's responsibility that all files\nwithin are given the appropriate `gid`/`uid` ownership settings to match\nthe rest of the cache. If not, you can ask cacache to do it for you by\ncalling [`tmp.fix()`](#tmp-fix), which will fix all tmp directory\npermissions.\n\nIf you want automatic cleanup of this directory, use\n[`tmp.withTmp()`](#with-tpm)\n\nSee: [options](#tmp-options)\n\n##### Example\n\n```javascript\ncacache.tmp.mkdir(cache).then(dir => {\n  fs.writeFile(path.join(dir, 'blablabla'), Buffer#<1234>, ...)\n})\n```\n\n#### <a name=\"tmp-fix\"></a> `> tmp.fix(cache) -> Promise`\n\nSets the `uid` and `gid` properties on all files and folders within the tmp\nfolder to match the rest of the cache.\n\nUse this after manually writing files into [`tmp.mkdir`](#tmp-mkdir) or\n[`tmp.withTmp`](#with-tmp).\n\n##### Example\n\n```javascript\ncacache.tmp.mkdir(cache).then(dir => {\n  writeFile(path.join(dir, 'file'), someData).then(() => {\n    // make sure we didn't just put a root-owned file in the cache\n    cacache.tmp.fix().then(() => {\n      // all uids and gids match now\n    })\n  })\n})\n```\n\n#### <a name=\"with-tmp\"></a> `> tmp.withTmp(cache, opts, cb) -> Promise`\n\nCreates a temporary directory with [`tmp.mkdir()`](#tmp-mkdir) and calls `cb`\nwith it. The created temporary directory will be removed when the return value\nof `cb()` resolves, the tmp directory will be automatically deleted once that \npromise completes.\n\nThe same caveats apply when it comes to managing permissions for the tmp dir's\ncontents.\n\nSee: [options](#tmp-options)\n\n##### Example\n\n```javascript\ncacache.tmp.withTmp(cache, dir => {\n  return fs.writeFileAsync(path.join(dir, 'blablabla'), Buffer#<1234>, ...)\n}).then(() => {\n  // `dir` no longer exists\n})\n```\n\n##### <a name=\"tmp-options\"></a> Options\n\n##### `opts.tmpPrefix`\nDefault: null\n\nPrefix to append on the temporary directory name inside the cache's tmp dir. \n\n#### <a name=\"integrity\"></a> Subresource Integrity Digests\n\nFor content verification and addressing, cacache uses strings following the\n[Subresource\nIntegrity spec](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity).\nThat is, any time cacache expects an `integrity` argument or option, it\nshould be in the format `<hashAlgorithm>-<base64-hash>`.\n\nOne deviation from the current spec is that cacache will support any hash\nalgorithms supported by the underlying Node.js process. You can use\n`crypto.getHashes()` to see which ones you can use.\n\n##### Generating Digests Yourself\n\nIf you have an existing content shasum, they are generally formatted as a\nhexadecimal string (that is, a sha1 would look like:\n`5f5513f8822fdbe5145af33b64d8d970dcf95c6e`). In order to be compatible with\ncacache, you'll need to convert this to an equivalent subresource integrity\nstring. For this example, the corresponding hash would be:\n`sha1-X1UT+IIv2+UUWvM7ZNjZcNz5XG4=`.\n\nIf you want to generate an integrity string yourself for existing data, you can\nuse something like this:\n\n```javascript\nconst crypto = require('crypto')\nconst hashAlgorithm = 'sha512'\nconst data = 'foobarbaz'\n\nconst integrity = (\n  hashAlgorithm +\n  '-' +\n  crypto.createHash(hashAlgorithm).update(data).digest('base64')\n)\n```\n\nYou can also use [`ssri`](https://npm.im/ssri) to have a richer set of functionality\naround SRI strings, including generation, parsing, and translating from existing\nhex-formatted strings.\n\n#### <a name=\"verify\"></a> `> cacache.verify(cache, opts) -> Promise`\n\nChecks out and fixes up your cache:\n\n* Cleans up corrupted or invalid index entries.\n* Custom entry filtering options.\n* Garbage collects any content entries not referenced by the index.\n* Checks integrity for all content entries and removes invalid content.\n* Fixes cache ownership.\n* Removes the `tmp` directory in the cache and all its contents.\n\nWhen it's done, it'll return an object with various stats about the verification\nprocess, including amount of storage reclaimed, number of valid entries, number\nof entries removed, etc.\n\n##### <a name=\"verify-options\"></a> Options\n\n##### `opts.concurrency`\n\nDefault: 20\n\nNumber of concurrently read files in the filesystem while doing clean up.\n\n##### `opts.filter`\nReceives a formatted entry. Return false to remove it.\nNote: might be called more than once on the same entry.\n\n##### `opts.log`\nCustom logger function:\n```\n  log: { silly () {} }\n  log.silly('verify', 'verifying cache at', cache)\n```\n\n##### Example\n\n```sh\necho somegarbage >> $CACHEPATH/content/deadbeef\n```\n\n```javascript\ncacache.verify(cachePath).then(stats => {\n  // deadbeef collected, because of invalid checksum.\n  console.log('cache is much nicer now! stats:', stats)\n})\n```\n\n#### <a name=\"verify-last-run\"></a> `> cacache.verify.lastRun(cache) -> Promise`\n\nReturns a `Date` representing the last time `cacache.verify` was run on `cache`.\n\n##### Example\n\n```javascript\ncacache.verify(cachePath).then(() => {\n  cacache.verify.lastRun(cachePath).then(lastTime => {\n    console.log('cacache.verify was last called on' + lastTime)\n  })\n})\n```\n","cao-design-redux":"cao-design-redux","capsule9":"Capsule9\n\nCapsule9 is extended CSS framework based on [Bulma](https://github.com/jgthms/bulma)\n\n\n## Quick install\n\n```sh\nnpm install capsule9\n```","carwash-data":"# Carwash\n## Clean up data by removing any non-ASCII characters and decoding non UTF-8 text.\nThis is a one line module for the common task of cleaning up data from, say, an HTTP request, where the data may be intentionally obfuscated.\n \nCurrently, I only remove non-ASCII characters and other corrupted characters. If you have another general use case, leave a pull request.\n\n### Usage\n\n```\n\nconst carwash = require('carwash');\n// dezalgoify, not the best example, but it will work\nconsole.log(carwash(\"tÍÌ´ÍÌ¸hÍÍ¢ÍÌ§iÌ·ÍÍÍÍ¢sÌÍ Ì§Í ÍÍÍiÌ¸sÍ  ÍÌ§cÌoÍÍ¡Ì¡rÍÍ¢Ì¢ÍÍrÌ¡ÍÍÌµuÍÌ¸pÍÌ¨Ì´ÍtÍÌ·eÌ´ÍdÒÍ Í Í Í¢ÍÍÍtÌ´Ì¡ÍÍ ÌµeÍÍxÍ tÌ¨ÌÌ§Í¢Í¡ Í¡ÍtÌ§ÍhÍÌ·ÌÌµÌaÌ´Ì¢Ì§Ì·ÍtÍÒÍ¡Ì¡ ÍÌ·Ì§bÍÒrÍÍ oÌ¨ÍÍÌ¡kÒÌ¢ÒÌ§eÌÌÌµÍÍ ÍÍÍ¡mÍÍÍyÌÍÍ Ì¢Ì¨tÍÌ§Ì¢ÒeÍÍrÌ¸Í¡Í¡mÍÍiÌ¢ÒÍnÍ¢Ì¨Ì¶ÌµÍaÌ¨ÌµÍÌ§lÍ¡Ì§ÍÌ\"))\n// prints \"this is corrupted text that broke my terminal\"\n\n```\n","cerebro-yahoo-dic":"#Cerebro Yahoo Dictionary Plugin\n\n\n## Example\n\nType ```yd apple``` then hit enter will open your browser with Yahoo Dictionary result\n","chileexpress":"# Seguimiento de pedidos de Chile Express\n\nMÃ³dulo npm para hacer el seguimiento de uno o mÃ¡s pedidos de Chile Express.\n\n##InstalaciÃ³n\n\n```\n$ npm install chileexpress --save\n```\n\n##Uso\n\n```javascript\nvar chileexpress = require('chileexpress');\n\nchileexpress(['600110073533']).then(r=>{\n\tconsole.log(r);\n}).catch(e => {\n\tconsole.log(e);\n})\n```\n\n\n**FunciÃ³n principal:** Recibe un arreglo de cÃ³digos de seguimiento y retorna una promesa con un arreglo con la informaciÃ³n para cada cÃ³digo de seguimiento\n\n**Params**\n\n- CÃ³digos de seguimiento `Array<String>`\n\n**Returns**: \n\n- Resultados `Promise<Array<result>>`\n\n**Ejemplo de result:**\n\n```javascript\n  {\n    \"info\": {\n      \"orden_de_transporteÂ \": \"600110073533\",\n      \"productoÂ \": \"Encomienda\",\n      \"servicioÂ \": \"Dia Habil Siguiente\",\n      \"estadoÂ \": \"Pieza en ruta al  DESTINATARIO\"\n    },\n    \"entrega\": {\n      \"rut_receptor\": \"14111532-4\",\n      \"fecha_entrega\": \"30/07/2015\",\n      \"hora_entrega\": \"11:24\",\n      \"nombre_receptor\": \"ALEXIS ADASME\"\n    },\n    \"hitos\": [\n      {\n        \"fecha\": \"30/07/2015\",\n        \"hora\": \"11:24\",\n        \"actividad\": \"Pieza en ruta al  DESTINATARIO\"\n      },\n      {\n        \"fecha\": \"29/07/2015\",\n        \"hora\": \"08:42\",\n        \"actividad\": \"Pieza en trÃ¡nsito al destino ANTOFAGASTA BAQUEDANO\"\n      },\n      {\n        \"fecha\": \"28/07/2015\",\n        \"hora\": \"18:33\",\n        \"actividad\": \"Pieza en trÃ¡nsito al destino CENTRO DE DISTRIBUCIÃN SANTIAGO\"\n      },\n      {\n        \"fecha\": \"28/07/2015\",\n        \"hora\": \"17:35\",\n        \"actividad\": \"Pieza recibida en Chilexpress\"\n      }\n    ]\n  }\n\n```\n\n##Consideraciones\nLa cantidad de cÃ³digos de seguimiento ingresados no se controla por el programa. Puede que si se abusa de la consulta Chile Express controle su uso. Usar con discreciÃ³n.\n\n\n","chrono-node-albinodrought":"Chrono\n======\nA natural language date parser in Javascript, designed for extracting date information from any given text. (Java version is also available [here](https://github.com/wanasit/chrono-java))\n\n[![Build Status](https://travis-ci.org/wanasit/chrono.svg?branch=master)](https://travis-ci.org/wanasit/chrono)\n[![Coverage Status](https://img.shields.io/coveralls/wanasit/chrono.svg)](https://coveralls.io/r/wanasit/chrono?branch=master)\n\nChrono supports most date and time formats, such as :\n\n* Today, Tomorrow, Yesterday, Last Friday, etc\n* 17 August 2013 - 19 August 2013\n* This Friday from 13:00 - 16.00\n* 5 days ago\n* 2 weeks from now\n* Sat Aug 17 2013 18:40:39 GMT+0900 (JST)\n* 2014-11-30T08:15:30-05:30\n\n## Install\n\n#### npm (recommended)\n\nJust run:\n\n    $ npm i --save chrono-node\n    \nAnd start using chrono:\n\n    var chrono = require('chrono-node')\n    chrono.parseDate('An appointment on Sep 12-13') \n\n#### Bower\n\nPrefer bower? You can do that, too:\n\nJust run:\n\n    $ bower install chrono\n  \nAnd use:\n   \n```html\n    <script src=\"bower_components/chrono/chrono.min.js\"></script>\n    <script>chrono.parseDate('An appointment on Sep 12-13')</script>\n```\n    \n\n#### Other Options:\n\nDoing something else? No worries. Try these:\n\nPlatform | Installation\n---------|----\nCDN      | Via [jsDelivr]:<br> `<script src=\"https://cdn.jsdelivr.net/npm/chrono-node@VERSION/chrono.min.js\"></script>`\nRails    | Install from [Rails Assets] by adding this to your Gemfile:<br> `gem 'rails-assets-chrono', source: 'https://rails-assets.org'`\nSwift    | Try using the community-made [chrono-swift] wrapper.\n\n[Rails Assets]: https://rails-assets.org/\n[jsDelivr]: https://www.jsdelivr.com/projects/chrono\n[chrono-swift]: https://github.com/neilsardesai/chrono-swift\n\n#### Browserify\n\nChrono's modules are linked and packaged using [Browserify](http://browserify.org) on `src/chrono.js`. By default, `chrono.js` file exports `chrono` object as a window global.\n\n```\nbrowserify src/chrono.js --s chrono -o chrono.js\n```\n\n## Usage\n\nSimply pass a string to function `chrono.parseDate` or `chrono.parse`. \n\n```javascript\n> var chrono = require('chrono-node')\n\n> chrono.parseDate('An appointment on Sep 12-13') \nFri Sep 12 2014 12:00:00 GMT-0500 (CDT)\n    \n> chrono.parse('An appointment on Sep 12-13');\n[ { index: 18,\n    text: 'Sep 12-13',\n    tags: { ENMonthNameMiddleEndianParser: true },\n    start: \n     { knownValues: [Object],\n       impliedValues: [Object] },\n    end: \n     { knownValues: [Object],\n       impliedValues: [Object] } } ]\n```\n\n### Reference Date\n\nToday's \"Friday\" is different from last month's \"Friday\". \nThe meaning of the referenced dates depends on when they are mentioned. \nChrono lets you define a reference date using `chrono.parse(text, ref)` and `chrono.parseDate(text, ref)`.    \n\n```javascript\n\n> chrono.parseDate('Friday', new Date(2012,7,23)); \nFri Aug 24 2012 12:00:00 GMT+0700 (ICT)\n\n> chrono.parseDate('Friday', new Date(2012,7,1)); \nFri Aug 03 2012 12:00:00 GMT+0700 (ICT)\n```\n\n### Detailed Parsed Results\n\nThe function `chrono.parse` returns detailed parsing results as objects of class `chrono.ParsedResult`. \n\n```javascript\nvar results = chrono.parse('I have an appointment tomorrow from 10 to 11 AM')\n\nresults[0].index  // 15\nresults[0].text   // 'tomorrow from 10 to 11 AM'\nresults[0].ref    // Sat Dec 13 2014 21:50:14 GMT-0600 (CST)\n\nresults[0].start.date()  // Sun Dec 14 2014 10:00:00 GMT-0600 (CST)\nresults[0].end.date()    // Sun Dec 14 2014 11:00:00 GMT-0600 (CST)\n```\n\n#### ParsedResult\n\n* `start` The parsed date components as a [ParsedComponents](#parsedcomponents) object\n* `end`   Similar to `start` but can be null.\n* `index` The location within the input text of this result  \n* `text`  The text this result that appears in the input \n* `ref`   The [reference date](#reference-date) of this result\n\n#### ParsedComponents\n\nA group of found date and time components (year, month, hour, etc). ParsedComponents objects consist of `knownValues` and `impliedValues`.\n\n* `assign(component, value)`  Set known value to the component\n* `imply(component, value)`   Set implied value to the component\n* `get(component)`            Get known or implied value for the component\n* `isCertain(component)`      return true if the value of the component is known.\n* `date()`                    Create a javascript Date\n\n```javascript\n// Remove the timezone offset of a parsed date and then create the Date object\n> var results = new chrono.parse('2016-03-08T01:16:07+02:00'); // Create new ParsedResult Object\n> results[0].start.assign('timezoneOffset', 0); // Change value in ParsedComponents Object 'start'\n> var d = results[0].start.date(); // Create a Date object\n> d.toString(); // Display resulting Date object\n'Tue Mar 08 2016 01:16:07 GMT+0000 (GMT)'\n```\n\n### Strict vs Casual \n\nChrono comes with `strict` mode that parse only formal date patterns. \n\n```javascript\n// 'strict' mode\nchrono.strict.parseDate('Today');       // null\nchrono.strict.parseDate('Friday');      // null\nchrono.strict.parseDate('2016-07-01');  // Fri Jul 01 2016 12:00:00 ...\nchrono.strict.parseDate('Jul 01 2016'); // Fri Jul 01 2016 12:00:00 ...\n\n// 'casual' mode (default) \nchrono.parseDate('Today');              // Thu Jun 30 2016 12:00:00 ...\nchrono.casual.parseDate('Friday');      // Fri Jul 01 2016 12:00:00 ...\nchrono.casual.parseDate('Jul 01 2016'); // Fri Jul 01 2016 12:00:00 ...\nchrono.casual.parseDate('Friday');      // Fri Jul 01 2016 12:00:00 ...\n```\n\n\n## Customize Chrono\n\nChronoâs extraction pipeline are mainly separated into 'parse' and ârefineâ phases. During parsing, âparsersâ (`Parser`) are used to extract patterns from the input text. The parsed results ([ParsedResult](#parsedresult)) are the combined, sorted, then refine using ârefinersâ (`Refiner`). In the refining phase, the results can be combined, filtered-out, or attached with additional information.\n\n### Parser\n\nParser is a module for low-level pattern-based parsing. Ideally, each parser should be designed to handle a single specific date format. User can add new type of parsers for supporting new date formats or languages.\n\n```javascript\nvar christmasParser = new chrono.Parser();\n\n// Provide search pattern\nchristmasParser.pattern = function () { return /Christmas/i } \n\n// This function will be called when matched pattern is found\nchristmasParser.extract = function(text, ref, match, opt) { \n    \n    // Return a parsed result, that is 25 December\n    return new chrono.ParsedResult({\n        ref: ref,\n        text: match[0],\n        index: match.index,\n        start: {    \n            day: 25, \n            month: 12, \n        }\n    });\n}\n\n// Create a new custom Chrono. The initial pipeline 'option' can also be specified as \n// - new chrono.Chrono(exports.options.strictOption())\n// - new chrono.Chrono(exports.options.casualOption())\nvar custom = new chrono.Chrono();\ncustom.parsers.push(christmasParser);\n\ncustom.parseDate(\"I'll arrive at 2.30AM on Christmas night\") \n// Wed Dec 25 2013 02:30:00 GMT+0900 (JST)\n\n```\n\nTo create a custom parser, override `pattern` and `extract` methods on an object of class `chrono.Parser`. \n* The `pattern` method must return `RegExp` object of searching pattern. \n* The `extract` method will be called with the \n[match](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec) object when the pattern is found. This function must create and return a [result](#parsedresult) (or null to skip).\n\n### Refiner\n\nRefiner is a higher level module for improving or manipulating the results. User can add a new type of refiner to customize Chrono's results or to add some custom logic to Chrono.\n\n```javascript\nvar guessPMRefiner = new chrono.Refiner();\nguessPMRefiner.refine = function(text, results, opt) {\n    // If there is no AM/PM (meridiem) specified, \n    //  let all time between 1:00 - 4:00 be PM (13.00 - 16.00)\n    results.forEach(function (result) {\n        if (!result.start.isCertain('meridiem') \n            &&  result.start.get('hour') >= 1 && result.start.get('hour') < 4) {\n            \n            result.start.assign('meridiem', 1);\n            result.start.assign('hour', result.start.get('hour') + 12);\n        }\n    });\n    return results;\n} \n\n// Create a new custom Chrono. The initial pipeline 'option' can also be specified as \n// - new chrono.Chrono(exports.options.strictOption())\n// - new chrono.Chrono(exports.options.casualOption())\nvar custom = new chrono.Chrono();\ncustom.refiners.push(guessPMRefiner);\n\n// This will be parsed as PM.\n// > Tue Dec 16 2014 14:30:00 GMT-0600 (CST) \ncustom.parseDate(\"This is at 2.30\");\n\n// Unless the 'AM' part is specified\n// > Tue Dec 16 2014 02:30:00 GMT-0600 (CST)\ncustom.parseDate(\"This is at 2.30 AM\");\n```\n\nIn the example, a custom refiner is created for assigning PM to parsing results with ambiguous [meridiem](http://en.wikipedia.org/wiki/12-hour_clock). The `refine` method of the refiner class will be called with parsing [results](#parsedresult) (from [parsers](#parser) or other previous refiners). The method must return an array of the new results (which, in this case, we modified those results in place).\n\n\n## Development Guides\n\nThis guide explains how to setup chrono project for prospective contributors.\n\n```bash\n# Clone and install library\ngit clone https://github.com/wanasit/chrono.git chrono\ncd chrono\nnpm install\n\n# Try running the test\nnpm run test\n```\n\nChrono's source files is in `src` directory. The built bundle (`chrono.js` and `chrono.min.js`) can be built by [Browserify](http://browserify.org) on `src/chrono.js` using the following command \n\n```\nnpm run make\n```\n\nParsing date from text is complicated. Sometimes, a small change can have effects on unexpected places. So, Chrono is a heavily tested library. Commits that break a test shouldn't be allowed in any condition.\n\nChrono's unit testing is based-on [Qunit](https://qunitjs.com/) and [Karma](https://github.com/karma-runner/karma). During the developement, I recommend running Karma test together with watchify.\n\n```\n# Start karma\nnpm run karma\n\n# Start watch (run on a different terminal)\nnpm run watch\n```\n\n\n","cloud-init-server":"# cloud-init-server\n\nDynamically generate cloud-init files based on templates\n\n","cocos-pkgjson":"# cocos-pkgjson\r\n## English\r\na pkgJson tool, convert plist file to json data. It can be custom pkgLoader used directly\r\n\r\n## ä¸­æè¯´æ\r\nè¿æ¯ä¸ä¸ªç¨äºçæpkgJsonçå·¥å·ï¼å°.plistæä»¶ä¸­çæ°æ®æååºæ¥ï¼çæcocosåºå±SpriteFrameçæ°æ®ç»æï¼è¿æ ·å¨å è½½.pkgJsonä¹åï¼ä½¿ç¨```cc._pkgJsonLoader```å³å¯ç´æ¥ä½¿ç¨æ°æ®ãé¿åäºåå¨å è½½plistæä»¶åï¼è¿éè¦è§£æplistæ°æ®æè½çæåºå±éè¦çç»æãç®åè¨ä¹ï¼å°è§£æplistçæ°æ®æåï¼åå°ç½ç»è¯·æ±ï¼å å¿«æ°æ®è·åã\r\n\r\næè¿ä¸ªæ³æ³åè¿ä¸ªå·¥å·ä¹æ¯ç±äºçå°äºè¿ç¯æç« ï¼[cc.spriteFrameCache æ¹é è¯´æ](http://www.cocos.com/docs/html5/v3/cc-spriteframecache/zh.html)ï¼ä½æ¯å®æ¹å¹¶æ²¡ææä¾pkgJsonæä»¶ççææ¹å¼ï¼èä¸ä¸ªäººå¨çæpkgJsonçåæ¶ï¼ä¹å¨å®æ¹çååºç¡åäºä¸æ¬¡ä¼åï¼çæçpkgJsonä¸æ¬¡å°ä½ï¼cc._pkgJsonLoaderåªè´è´£å°æ°æ®å­å¨å¨cc.loader.cacheä¸­å³å¯ã\r\n\r\n## ä½ç¨\r\n### parse(content) || parse(content, \"frame\")\r\nparse spriteFrame\r\n\r\n### parse(content, other)(other !== \"frame\")\r\nparse plist content to json\r\n\r\n## How to Use\r\n#### Node.js\r\nInstall using npm:\r\n\r\n```\r\nnpm i cocos-pkgjson\r\n```\r\n\r\nThen require() the cocos-pkgjson module in your file:\r\n```\r\nconst fs = require('fs');\r\nconst pkgJson = require('cocos-pkgjson');\r\n\r\n// Here I use fs.readFileSync get .plist file content\r\nlet content = fs.readFileSync(\"test.plist\", \"utf8\");\r\n\r\nconsole.log(JSON.stringify(pkgJson.parse(content)));\r\n```\r\n\r\n```\r\n/**\r\n * content: Data to be parse\r\n * type: type of parse\r\n *      \"frame\": parse spriteFrame, default\r\n *      \"other\": only parse content to Json\r\n */\r\nparse(content, type);\r\n```\r\n\r\nString result:\r\n```\r\n{\"_inited\":true,\"frames\":{\"0.png\":{\"rect\":{\"x\":1,\"y\":55,\"width\":64,\"height\":49},\"rotated\":false,\"offset\":{\"x\":0,\"y\":0},\"size\":{\"width\":64,\"height\":49},\"aliases\":[]},\"1.png\":{\"rect\":{\"x\":1,\"y\":1,\"width\":67,\"height\":52},\"rotated\":false,\"offset\":{\"x\":0,\"y\":0},\"size\":{\"width\":67,\"height\":52},\"aliases\":[]}},\"meta\":{\"image\":\"radio.png\"}}\r\n```\r\n\r\nJson result:\r\n\r\n![](./result.png)\r\n\r\n\r\n### éå¥çcc._pkgJsonLoader\r\n```\r\ncc._pkgJsonLoader = {\r\n    load: function (realUrl, url, res, cb) {\r\n        var self = this, locLoader = cc.loader, cache = locLoader.cache;\r\n        locLoader.loadJson(realUrl, function (err, pkg) {\r\n            if (err) return cb(err);\r\n            var dir = cc.path.dirname(url);\r\n            for (var key in pkg) {\r\n                var filePath = cc.path.join(dir, key);\r\n                cache[filePath] = pkg[key];\r\n            }\r\n            cb(null, true);\r\n        });\r\n    }\r\n};\r\n\r\ncc.loader.register([\"pkgJson\"], cc._pkgJsonLoader);\r\n```","codogo-marketing-scss":"# codogo-marketing-scss #\n\n### What is this repository for? ###\n\nKeeping in sync our 4 marketing sites, which share much of their styling.\n\n### How do I get set up? ###\n\nJust include main.scss in your project's root scss file.\n\n### Who do I talk to? ###\n\nteam@codogo.io","coffee-json-dsl-cfn-runlevel":"# coffee-json-dsl-cfn-runlevel\ncoffee-json-dsl plugin to define runlevels of resources of AWS CloudFormation stack templates\n\n## Overview\n\ncoffee-json-dsl-cfn-runlevel introduces resource runlevel to AWS CloudFormation stack templates.\nThis is a plugin of [coffee-json-dsl][https://github.com/rld2drkw/coffee-json-dsl] and designed to use with\n[coffee-json-dsl-cfn][[https://github.com/rld2drkw/coffee-json-dsl-cfn]] plugin.\n\n","coke-sass":"---\n\n\n---\n\n<h1 id=\"coke\">COKE</h1>\n<h2 id=\"concepto\">CONCEPTO</h2>\n<p>La idea es crear una soluciÃ³n a modo de boilerplate o plantilla para arrancar pequeÃ±os (o grandes) proyectos con mucha carga de SCSS, de forma que se puedan arrancar experimentos, pruebas y proyectos en local a partir de esta plantilla. Y hacer uso de manera opcional de las herramientas disponibles en Coke. Cubrir el hueco que deja Codepen entre otros en entornos locales. No pretende cubrir librerÃ­as CSS como Bootstrap o similares. Es algo ligero y desde el que se puede arrancar cualquier cosa, desde la arquitectura mÃ¡s compleja a un simple fichero para pruebas.</p>\n<h2 id=\"todo\">TODO</h2>\n<ul>\n<li>\n<p>Arreglar line-height / font-size. Entenderlo primero. Venimos de <a href=\"https://github.com/inuitcss/inuitcss/blob/develop/elements/_elements.page.scss\">aquÃ­</a>.</p>\n</li>\n<li>\n<p><strong>Separarnos del fork de Asteroids:</strong></p>\n<ul>\n<li>Dejar 2 entornos: Con <strong>Gulp</strong> y con <strong>Webpack</strong>.</li>\n<li>Simplicar el uso de Pug y de JS.</li>\n</ul>\n</li>\n<li>\n<p><strong>Versionar:</strong></p>\n<ul>\n<li>VersiÃ³n con Pug, SCSS y JS.</li>\n<li>VersiÃ³n sÃ³lo HTML, SCSS y JS.</li>\n<li>VersiÃ³n con sÃ³lo SCSS.</li>\n<li>VersiÃ³n con Icon Fonts gratuito.</li>\n</ul>\n</li>\n<li>\n<p><strong>Crear paquete NPM</strong></p>\n</li>\n<li>\n<p><strong>Documentar</strong> (<a href=\"http://README.md\">README.md</a>)</p>\n</li>\n<li>\n<p>Crear un <strong>Github Pages</strong>.</p>\n</li>\n<li>\n<p><strong>Testear</strong> con usuarios reales, y con proyectos propios (Flexbox / Grid Layout Cheatsheets).</p>\n</li>\n<li>\n<p><strong>Promocionar</strong>, Twitter, Linkedin, Portafolio, etc.</p>\n</li>\n</ul>\n<h2 id=\"ideas\">IDEAS</h2>\n<p>Cambiar el nombre y crear un logo acorde. Con el tema del versionado, jugar con botellas (cocacola, kalimotxo, etc) y/o con comida basura (depende de cuanto aÃ±adas a tu paquete se llena mÃ¡s la botella y/o se completa el combo de comida rÃ¡pida).</p>\n\n","cordova-plugin-notch-fix":"#cordova-plugin-cutout\r\n\r\nDetect if the device screen has cutout or notch\r\n\r\n## Installation\r\n\r\n`cordova plugin add cordova-plugin-cutout`\r\n\r\n## Methods \r\n\r\n### has()\r\n\r\n``` javascript\r\n/** \r\n* @name has\r\n* @returns Promise<boolean>\r\n*/\r\ncutout.has();\r\n```\r\n\r\n## Support \r\n\r\n### Android \r\n\r\nCurrently devices with Android P or newer are supported. For non supported devices, return value will be `false` even if the screen may have cutout.\r\n\r\n### iOS \r\n\r\nDevices with iOS 11 or higher are supported. Calling this on older devices will just return `false` as no older iPhones have cutout.\r\n","count":"[![NPM version][npm-version-image]][npm-url] [![NPM downloads][npm-downloads-image]][npm-url] [![MIT License][license-image]][license-url] [![Build Status][travis-image]][travis-url]\n\nA tiny javascript library to count in natural language e.g. Zero, One, Two, Three.. up to 999,999,999,999,999.\n\n## Documentation\n\n### Basic Usage\n\nHere's all this does so far:\n\n    // Factory's name will be \"FactoryFive\"\n    _n = 'Factory' + count(5).camel();\n    \n    // Unit tests\n    test.equal(count(764).camel(), '\"SevenHundredSixtyFour\"');    \n    test.equal(count(999999999999999).camel(), 'NineHundredNinetyNineTrillionNineHundredNinetyNineBillionNineHundredNinetyNineMillionNineHundredNinetyNineThousandNineHundredNinetyNine');\n   \n## [Changelog](CHANGELOG.md)\n\n## [Contributing](CONTRIBUTING.md)\n\n## License\n\nCount.js is freely distributable under the terms of the [MIT license](LICENSE).\n\n[license-image]: http://img.shields.io/badge/license-MIT-blue.svg?style=flat\n[license-url]: LICENSE\n\n[npm-url]: https://npmjs.org/package/count\n[npm-version-image]: http://img.shields.io/npm/v/counts.svg?style=flat\n[npm-downloads-image]: http://img.shields.io/npm/dm/counts.svg?style=flat\n\n[travis-url]: http://travis-ci.org/nickckaye/count\n[travis-image]: http://img.shields.io/travis/nickckaye/count/master.svg?style=flat\n","crosstree":"# `_:{` CrossTree\nCompact, dependency-free, data synchronisation library for TypeScript and JavaScript.\n\n## What is it?\nCrossTree provides a simple mechanism for conflict-free synchronisation of tree structures that is commutative, associative, and idempotent. It's transport independent, so you can synchronise changes over HTTP, WebSockets, peer-to-peer.\n\n## Data Structure\n\nCrossTree data is made up of entry nodes. Every entry node can have sub-entries (a.k.a. children). There is a single root entry.\n\nEvery entry can have a:\n- value - `v` attribute\n- counter - `c` used to indicate the entry's version count or used as a numeric value.\n- timestamp - `t` when the entry was modified according to the local system clock (see exceptions below).\n- deletion flag - `d` means the entry was marked as deleted. Entries with no value often contain subentries, while entries with an explicit deletion flag can be ignored when traversing the tree.\n\nSubentries must have an:\n- id - which is used to identify a subentry, but is not part of the entry's state.\n\n\n## Examples:\n\n- Use setValue on a tree path:\n\n```javascript\nconst treeA = new CrossTree();\ntreeA.subpath([\"alice\", \"firstName\"]).setValue(\"Alice\");\ntreeA.subpath([\"alice\", \"lastName\"]).setValue(\"Bloggs\");\nlet aliceData = treeA.toData();\n```\n\n`aliceData` ->\n```javascript\n{\n  _: {\n    alice: {\n      _: {\n        firstName: { v: \"Alice\", t: 1572130604728 },\n        lastName: { v: \"Bloggs\", t: 1572130604728 }\n      }\n    }\n  }\n}\n```\n\n- Merge data with another replica:\n\n```javascript\nconst treeB = new CrossTree({ _: { bob: { _: { firstName: { v: \"Bob\", t: 1571241715839 } } } } });\ntreeB.mergeData(aliceData); // receive Alice's data\ntreeB.subpath([\"alice\", \"firstName\"]).getValue(); // -> Alice\nlet bobData = treeB.toData();\n```\n\n`bobData` ->\n```javascript\n{\n  _: {\n    bob: {\n      _: {\n        firstName: { v: \"Bob\", t: 1571241715839 }\n      }\n    },\n    alice: {\n      _: {\n        firstName: { v: \"Alice\", t: 1572130604728 },\n        lastName: { v: \"Bloggs\", t: 1572130604728 }\n      }\n    }\n  }\n}\n```\n\n- Send changes by observing tree:\n\n```javascript\n\ntreeA.observeTree( (event) => {\n    const { change, before, after } = event;\n    sendToBob( change );\n    // change.data - new entry data\n    // change.path - path of changed entry\n});\n```\n\n\n## Use Cases\n\n- File Structure\n```javascript\n{ v: \"My Repo\"\n  _: {\n   \"README.md\": { v: \"blob:1234\", t: 1571200000000  },\n   \"package.json\": { v: \"blob:9876\", t: 1572300000000 },\n   \"src\": {\n      v:\"dir\", t: 1573400000000,\n      _:{\n          \"index.ts\": { v: \"text:hello\", t: 1574500000000 }\n      }\n   }\n}}\n```\n\n- Records\n```javascript\n{ _:{\n  \"6fa459ea\": {\n    _:{\n      \"name\": { v: \"Alice\", t: 1571200000000 },\n      \"type\": { v: \"admin\", t: 1571200000000 },\n    }\n  },\n  \"ee8a3ca4\": {\n    _:{\n      \"name\": { v: \"Bob\", t: 1574500000000 },\n      \"type\": { v: \"guest\", t: 1574500000000 },\n    }\n  },\n}}\n```\n\n- Spreadsheet\n```javascript\n{ v: \"Sheet 1\"\n  _: {\n   \"A1\": { v: \"Column 1\", t: 1571200000000 },\n   \"A2\": { v: \"613423\", t: 1572300000000 },\n   \"A3\": { v: \"875243\", t: 1572300000000 },\n}}\n```\n\n\n## Merge Rules\nEvery value change requires a new entry state, which is merged into the local replica and can be sent to other replicas.\nAt each tree path, the entry states are ordered and the \"greatest\" entry overwrites any previous entry.\nThus a local value change needs to generate an entry state \"greater\" than the previous state.\nOnce the new entry is merged into the tree, the old entry is discarded.\n\nStates are ordered by:\n - timestamp (`t`)\n - counter (`c`)\n - value (`v`)\n\nA new entry state (a) is considered greater than (b) when:\n- a.t > b.t - its timestamp is greater\nor when:\n- (a.t == b.t && a.c > b.c) - timestamps are equal, but its counter value is greater\nor when:\n- (a.t == b.t && a.c == b.c && a.v > b.v) - timestamps and counters are equal, but its value is greater\n\n### Union Properties\n\n*Sample data:*\n\nA=`{_:{\"alice\":{t:15000,v:\"red\"}}}`\n\nB=`{_:{\"alice\":{t:16500,v:\"green\"}}}`\n\nC=`{_:{\"bob\":{t:15000,v:\"blue\"}}}`\n\n- Commutativity: The order of changes sent betwen CrossTree instances doesn't impact the resulting state.\n\nAâªB=BâªA=`{_:{\"alice\":{t:16500,v:\"green\"}}}` - B's timestamp is larger, thus it overwrites A\n\n- Idempotence: Changes or whole replicas can be re-merged multiple times without duplication.\n\nAâªA=A=`{_:{\"alice\":{t:15000,v:\"red\"}}}` - two identical records of \"alice\" merge into one.\n\n- Associativity: Changes can be applied opportunistically as the network allows or on demand. The timing or order will not impact the resulting state.\n\n(AâªB)âªC=Aâª(BâªC)=`{_:{\"alice\":{t:16500,v:\"green\"},\"bob\":{t:15000,v:\"blue\"}}}`\n\n### Three-way Merge\nWhen synchronising with a remote replica, it's still possible to perform a manual three-way merge, as long as you retain the last state sent to the server (common ancestor), compare it with the local state and the remote state.\nHowever, whenever possible, you should design conflict-free structures, by putting conflict prone values into separate entry paths and deriving the final information. For more examples see [this article](https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type).\n\n### Limitations\n- Node ID needs to be a string compatible with JavaScript's Object keys, as entry data is stored internally using `Object`.\n- Data passed to the CrossTree constructor (`new CrossTree(data)`) is mutated, when CrossTree is performing writes. If you don't want CrossTree to mutate the passed data object, use the `tree.mergeData(data)` method on an empty tree or perform a deep-clone before passing it to the constructor.\n\n## Related\nhttps://en.wikipedia.org/wiki/Conflict-free_replicated_data_type\nhttps://medium.com/bpxl-craft/building-a-peer-to-peer-whiteboarding-app-for-ipad-2a4c7728863e\n","css-classes":"# css-classes\nList CSS classes in text(s).\n\n## Usage\n```javascript\nconst cssClasses = require(\"css-classes\");\n```\n### Unique\n```javascript\n    const arr = [\".a {} .b {}\", \".a {} .c {}\"];\n    cssClasses(arr) // => [\"a\", \"b\", \"c\"]\n    cssClasses(arr, false) // => [\"a\", \"b\", \"c\"]\n    \n    const text = \".a {} .b {} .a {} .c {}\";\n    cssClasses(text) // => [\"a\", \"b\", \"c\"]\n    cssClasses(text, false) // => [\"a\", \"b\", \"c\"]\n```\n### Include duplicates\n```javascript\n    const arr = [\".a {} .b {}\", \".a {} .c {}\"];\n    cssClasses(arr, true) // => [\"a\", \"b\", \"a\", \"c\"]\n    \n    const text = \".a {} .b {} .a {} .c {}\";\n    cssClasses(text, true) // => [\"a\", \"b\", \"a\", \"c\"]\n```","csv-iterator":"#csv-iterator\n[![Build Status](https://travis-ci.org/mirkokiefer/csv-iterator.png?branch=master)](https://travis-ci.org/mirkokiefer/csv-iterator)\n\n[![NPM](https://nodei.co/npm/csv-iterator.png)](https://nodei.co/npm/csv-iterator/)\n\nA ligthweight async csv-iterator for Node.js.\n\nExample that creates an iterator from a file to iterate over rows 10 to 20:\n\n``` js\nvar createCSVIterator = require('csv-iterator')\n\nvar iterator = createCSVIterator({path: 'input.csv', from: 10, to: 20})\n```\n\nThe resulting iterator can be used with the [async-iterators](https://github.com/mirkokiefer/async-iterators) module to apply transformations or write to a target.\n\n##Documentation\n##createCSVIterator(options)\n\n- `path`: use a file path as the input source\n- `lineIterator`: use an async [line-iterator](https://github.com/mirkokiefer/line-iterator) as the input source\n- `toObjects`: transform the rows from arrays to objects according to the csv header\n- `from`: start iteration on the specified row index (index is inclusive)\n- `to`: end iteration on the specified row index (index is inclusive)\n","cubx-grunt-webpackage-scaffold":"# cubx-grunt-webpackage-scaffold\n\n [![NPM Version][npm-image]][npm-url] [![GitHub version](https://badge.fury.io/gh/cubbles%2Fcubx-grunt-webpackage-scaffold.svg)](https://badge.fury.io/gh/cubbles%2Fcubx-grunt-webpackage-scaffold) \n \nGrunt integration to scaffold a Cubbles webpackage.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.5`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install cubx-grunt-webpackage-scaffold --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('cubx-grunt-webpackage-scaffold');\n```\n\n## The \"+createWebpackage\" task\n\n### Overview\nIn your project's workspace, no config is expected. The task will ask you for the parameters of your new webpackage.\n\n### Options\nnone\n\n## The \"+webpackage_createApp\" task\n\n### Overview\nIn your project's workspace, no config is expected. The task will ask you for the parameters of your new app.\n\n### Options\nnone\n\n## The \"+webpackage_createUtility\" task\n\n### Overview\nIn your project's workspace, no config is expected. The task will ask you for the parameters of your new utility.\n\n### Options\nnone\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n[npm-image]: https://img.shields.io/npm/v/cubx-grunt-webpackage-scaffold.svg\n[npm-url]: https://npmjs.org/package/cubx-grunt-webpackage-scaffold\n\n","custom-jszip":"JSZip [![Build Status](https://api.travis-ci.org/Stuk/jszip.svg?branch=master)](http://travis-ci.org/Stuk/jszip) [![Code Climate](https://codeclimate.com/github/Stuk/jszip/badges/gpa.svg)](https://codeclimate.com/github/Stuk/jszip)\n=====\n\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/jszip.svg)](https://saucelabs.com/u/jszip)\n\nA library for creating, reading and editing .zip files with JavaScript, with a\nlovely and simple API.\n\nSee https://stuk.github.io/jszip for all the documentation.\n\n```javascript\nvar zip = new JSZip();\n\nzip.file(\"Hello.txt\", \"Hello World\\n\");\n\nvar img = zip.folder(\"images\");\nimg.file(\"smile.gif\", imgData, {base64: true});\n\nzip.generateAsync({type:\"blob\"}).then(function(content) {\n    // see FileSaver.js\n    saveAs(content, \"example.zip\");\n});\n\n/*\nResults in a zip containing\nHello.txt\nimages/\n    smile.gif\n*/\n```\nLicense\n-------\n\nJSZip is dual-licensed. You may use it under the MIT license *or* the GPLv3\nlicense. See [LICENSE.markdown](LICENSE.markdown).\n","cvss":"# cvss\nA CommonJS library for working with Common Vulnerability Scoring System vectors and scores.\n\n## Install\n\n`npm i cvss`\n\n## Usage\n\n```javascript\nvar cvss = require('cvss');\n\nvar score = cvss.getScore('CVSS:3.0/AV:P/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L');\n\nconsole.log(score) // => 6.2\n\nvar rating = cvss.getRating(score);\n\nconsole.log(rating) // => Medium\n```\n\n### #getScore [String or Object input], [Object options (optional)]\n\nThis is the main scoring method. It may be called with either a valid CVSS3 vector string (`'CVSS:3.0/AV:P/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L'`) or an object containing the key/value pairs (`{ AV: 'P', AC: 'H', PR: 'N', UI:'R', S: 'C', C: 'L', I: 'H', A: 'L' }`) corresponding to one as its **input** parameter.\n\nThe optional **options** parameter controls whether validation errors throw or not and whether optional temporal and environmental metrics are considered in score calculation\n\n**options**\n- _throw_: if validation returns an error, throw the error\n- _baseOnly_: only consider base metrics when calculating score\n- _temporal_: include temporal metrics when calculating score\n- _env_: include temporal AND environmental metrics when calculating score (both are included per CVSS3 spec)\n\n### #getBaseScore [String or Object input], [Object options (optional)]\n\nAccepts the same arguments as _getScore_ above, but enforces the _baseOnly_ option.\n\n### #getTemporalScore [String or Object input], [Object options (optional)]\n\nAccepts the same arguments as _getScore_ above, but enforces the _temporal_ option.\n### #getEnvironmentalScore [String or Object input], [Object options (optional)]\n\nAccepts the same arguments as _getScore_ above, but enforces the _environmental_ option.\n\n### #getRating [Number score]\n\nGiven a numeric score, returns the appropriate CVSS3 severity rating for that number: _None_ for scores < 0.1, _Low_ for scores >= 0.1 and < 4, _Medium_ for scores >=4 and < 7, _High_ for scores >= 7 and < 9, _Critical_ for scores >= 9.\n\n### #getBase [String or Object input], [Object options (optional)]\n\nReturns an object with the base score and its rating. Equivalent to\n```javascript\n{\n    score: getBaseScore(input),\n    rating: getRating(getBaseScore(input))\n}\n```\n\n### #getEnvironmental [String or Object input], [Object options (optional)]\n\nReturns an object with the environmental score and its rating. Equivalent to\n```javascript\n{\n    score: getEnvironmentalScore(input),\n    rating: getRating(getEnvironmentalScore(input))\n}\n```\n\n### #getTemporal [String or Object input], [Object options (optional)]\n\nReturns an object with the environmental score and its rating. Equivalent to\n```javascript\n{\n    score: getTemporalScore(input),\n    rating: getRating(getTemporalScore(input))\n}\n```\n\n### #getAll [String or Object input], [Object options (optional)]\n\nReturns object with the score and rating for all three scores:\n```javascript\n{\n    base: getBase(input),\n    temporal: getTemporal(input),\n    environmental: getEnvironmental(input)\n}\n```\n","days-calendar":"# Days Calendar\n\nSimple and customizable calender for Vue,  which only used moment.js and no more other dependencies.\n\nThis project still under active development, please feel free to open issues or pull request.\n\n## Demo\nhttp://days.sardo.work/\n\n## Features\n- Customizable days and weekdays output\n- Customizable style\n\n## Installation\n```bash\nnpm install days-calendar --save\n```\n\nor\n\n```bash\nyarn add days-calendar\n```\n\n## Usage\n\nImport module from days-calendar, then register it to Vue:\n\n#### Base\n\n```js\nimport DaysCalendar from 'days-calendar';\n\nnew Vue({\n  el: '#your-dom-element',\n   components: {\n      Calendar: DaysCalendar\n   }\n})\n```\n#### Custom Modal\n\nBy default, Days Calendar will show a modal which contain event content. If you want to custom the template of modal, you can call calendar like this:\n\n ```html\n    <Calendar>\n      <div slot=\"modal-content\">\n        <h1>Hello World!</h1>\n      </div>\n    </Calendar>\n\n ```\n\n If you want to using day object in custom modal,\n you should pass renderDay function to calendar like this:\n\n ```html\n<Calendar :renderDay=\"getDate\">\n  <div slot=\"modal-content\">\n    {{day.content}}\n  </div>\n</Calendar>\n ```\n\n ```js\n getDate: function(day){\n   this.day = day;\n   return day;\n }\n ```\n\n or you will not be allow to access the information of day.\n\n\n ### Disable Day\n\n If you don't want user click on some day, you can pass renderDays function to calendar like this:\n\n ```html\n<Calendar :renderDays=\"renderDays\"></Calendar>\n ```\n\n ```js\n renderDays: function(days){\n   return new Promise((resolve, reject) => {\n     for(let i = 0; i < days.length; i++){\n       const weekday = days[i].date.weekday();\n       //If it is Tuesday, disable it\n       if(weekday == 2){\n         days[i].disabled = true;\n       }\n     }\n      resolve(days);\n   });\n },\n ```\n\n## Props\n#### langcode (optional)\nA string of language code which used to setting calendar language.\nSupport language:\n1. English - en\n2. Traditional Chinese (Hong Kong) - zh-hk\n3. Traditional Chinese (Taiwan) - zh-tw\n4. Simplified Chinese - zh-cn\n\nDefault value is en.\n\n#### defaultStart (optional)\nA string which tell calendar should start on that date. Format is YYYY-MM-DD.\n\nDefault value is current date.\n\nExample: 2017-11-03\n\n#### renderDay (optional)\nIf you pass this props to Days Calendar, it will pass day object to the function before render the content.\n\nThis function should return a day object array.\n\n```js\nrenderDay(day){\n  console.log(day);\n  return day;\n}\n\n/* Day object:\n{ number: (Number of that day), date: (Moment Date Object), class: [] } */\n```\n\n#### renderDays (optional)\nIf you pass this props to Days Calendar, it will pass the array of day object to the function before render the content.\n\nThis function should return promise which resolve days array or error.\n\n```js\nrenderDays(year, month, days){\n  return new Promise((resolve, reject) => {\n     //Do something\n     resolve(days);\n  });\n}\n```\n\n#### onClick (optional)\nIf you pass this props to Days Calendar, it will pass the day object to the function before render the content.\nIt will allow you control the behavior after click on any day.\n\n```js\nonClick(day){\n  console.log('This day is:', day);\n}\n```\n\n## Contributing\n\nYou can clone this repository then start develop at sandbox, or feel free to open issue on github.\n\nBuild package:\n\n```bash\nnpm run build\n```\n\nWatch package change and build it:\n\n```bash\nnpm run watch\n```\n","democracyos-toggle":"# toggle\n\n  A toggle UI element.\n  \n  ![on](https://i.cloudup.com/kjeyaT5oFH.png)\n  ![off](https://i.cloudup.com/hEd5319GKt.png)\n\n## Installation\n\n    $ component install segmentio/toggle\n\n## Example\n    \n```js\nvar Toggle = require('toggle');\n\nvar toggle = new Toggle();\ndocument.body.appendChild(toggle.el);\n\ntoggle.value(); // false\n\ntoggle.value(true);\ntoggle.value(); // true\n\ntoggle.toggle();\ntoggle.value(); // false\n```\n\n## API\n\n### Toggle(value, el)\n  Create a new toggle with an optional starting `value` and optional `el` to use instead of creating one.\n\n### #el\n  The toggle's DOM element.\n\n```html\n<div class=\"toggle\">\n  <label class=\"toggle-on-label\"></label>\n  <div class=\"toggle-switch\">\n    <input class=\"toggle-checkbox\" type=\"checkbox\">\n  </div>\n  <label class=\"toggle-off-label\"></label>\n</div>\n```\n\n### #value(val)\n  Get or set the value of the toggle.\n\n### #name(name)\n  Set the toggle's internal checkbox's name, so forms can be submitted properly.\n\n### #toggle()\n  Toggle the value of the toggle.\n\n### #label(on, off)\n  Set the on and off labels's HTML.\n\n### #addClass(name)\n  Add a class to the toggle's element.\n\n### #removeClass(name)\n  Remove a class from the toggle's element.\n\n## License\n\n  MIT\n","dn-middleware-watch":"## dn-template-middleware\n\nä¸­é´ä»¶æ¨¡æ¿ï¼ç¨äºå¿«éçåå»ºä¸ä¸ª Dawn ä¸­é´ä»¶å·¥ç¨ï¼åæ®éç node å·¥ç¨æ¨¡æ¿ç¸æ¯ï¼è¯¥æ¨¡æ¿å·²åæ¬ä¸ä¸ªæç®çä¸­é´ä»¶ç¤ºä¾ã\n\n\nåå»ºä¸ä¸ªä¸­é´ä»¶\n\n```sh\n$ dn init -t middleware\n```\n\nå¦æä½ ç dn è¿æ¥çæ¯é»è®¤æå¡ï¼ä¹å¯ä»¥ä»æ¨¡æ¿åè¡¨ä¸­éæ©\n\n```sh\n$ dn init\n```\n\nå¯å¨ä»¥ç±»ä¼¼å¦ä¸çèåä¸­éæ© `middleware` æ¨¡æ¿\n```sh\n? Found 3 templates (Use arrow keys)\n  1. front      : Blank front end project template\n  2. node       : Blank node project template\nâ¯ 3. middleware : Dawn middleware project template\n```\n\nå·¥ç¨åå§åå®æåï¼å°±å¯ä»¥ä½¿ç¨ `dn` ç¸å³å½ä»¤è¿è¡å¼åæå»ºäºã","docx-pdf":"Docx to pdf\r\n=========\r\n\r\nA library that converts docx file to pdf.\r\n\r\n## Installation\r\n\r\n  npm install docx-pdf --save\r\n\r\n## Usage\r\n\r\n    var docxConverter = require('docx-pdf');\r\n\r\n    docxConverter('./input.docx','./output.pdf',function(err,result){\r\n      if(err){\r\n        console.log(err);\r\n      }\r\n      console.log('result'+result);\r\n    });\r\n    \r\n    its basically docxConverter(inputPath,outPath,function(err,result){\r\n      if(err){\r\n        console.log(err);\r\n      }\r\n      console.log('result'+result);\r\n    });\r\n  \r\n  Output should be output.pdf which will be produced on the output path your provided\r\n\r\n\r\n## Contributing\r\n\r\nThis was created just for solo usage purpose. Anybody is welcome to contribute to it.\r\n","dotenv-utils":"# dotenv-utils\n\n[![npm](https://img.shields.io/npm/v/dotenv-utils.svg)](https://www.npmjs.com/package/dotenv-utils)\n\n> Covert env var strings to booleans, numbers, arrays, and objects.\n\n**Context:** Environment variables are a great way to separate config from code. Tools like [`dotenv`](https://www.npmjs.com/package/dotenv) make this almost perfect but...\n\n**The problem:** Environment variables are always strings. If you set a variable `MINIFY=false` and try to check it using `if (process.env.MINIFY) { ...some logic }`, then \"...some logic\" will actually be executed as non-empty strings are truthy.\n\nThe quick solution is to write `process.env.MINIFY === \"true\"` instead, but as you get more vars and more var \"types\", these ad-hoc solutions become tedious, unclear, and error-prone.\n\n**The solution**: `dotenv-utils` provides several helpers to make sure you never have to worry about this again.\n\n- [`boolean`](#boolean), [`number`](#number), [`array`](#array), [`object`](#object) convert vars one at a time.\n- [`conform`](#conform) creates a new config object with the correct types based on a schema.\n\nConversion functions always return the right type. That way, you can safely call methods without worrying about getting that `Uncaught Type Error: undefined is not a function` fun.\n\n## Install\n\n```sh\n# Using `npm`\nnpm install --save dotenv-utils\n\n# ...or using `yarn`\nyarn add dotenv-utils\n```\n\nTested on Node.js v6.9.2, likely runs on earlier versions too.\n\n## API\n\n### `boolean`\n\nConverts a string representation (case-insensitive) of a boolean to an actual boolean.\n\n```js\nconst {boolean} = require(\"dotenv-utils\")\n\nboolean(\"true\") // true\nboolean(\"TRUE\") // true\nboolean(\"false\") // false\nboolean(\"foo\") // false\nboolean(\"\") // false\nboolean(undefined) // false\n```\n\n### `number`\n\nConverts a string representation of a number to an actual number. Basically like `Number(x)`, but will return a `0` instead of `NaN` when string cannot be converted to a number.\n\n```js\nconst {number} = require(\"dotenv-utils\")\n\nnumber(\"123\") // 123\nnumber(\"  123   \") // 123\nnumber(\"foo\") // 0\nnumber(undefined) // 0\n```\n\n### `string`\n\nTrims the supplied string. If provided a falsy value, returns `\"\"`. This is mainly useful when used in conjunction with the [`conform`](#conform) helper.\n\n```js\nconst {string} = require(\"dotenv-utils\")\n\nstring(\"foo\") // foo\nstring(\"  foo   \") // \"foo\"\nstring(\"\") // \"\"\nstring(undefined) // \"\"\n```\n\n### `array`\n\nConverts a string of comma-separated values (`\"foo, bar, baz\"`) to an array. Any extra whitespace will be trimmed and empty strings discarded.\n\n```js\nconst {array} = require(\"dotenv-utils\")\n\narray(\"foo, bar, baz\") // [\"foo\", \"bar\", \"baz\"]\narray(\"foo,   bar,    baz\") // [\"foo\", \"bar\", \"baz\"]\narray(\",,,\") // []\narray(\"\") // []\narray(undefined) // []\n```\n\n### `object`\n\nConverts a string of comma-separated tuples (`\"foo: bar, baz: quux\"`) to an object. Any extra whitespace from either key or value will be discarded, as are tuples with falsy keys.\n\n```js\nconst {object} = require(\"dotenv-utils\")\n\nobject(\"foo: bar, baz: quux\") // {foo: \"bar\", baz: \"quux\"}\nobject(\"foo:    bar   ,baz:quux\") // {foo: \"bar\", baz: \"quux\"}\nobject(\":,foo:\") // {foo: \"\"}\nobject(\"::,\") // {}\nobject(\"\") // {}\nobject(undefined) // {}\n```\n\n### `conform`\n\nProvided a schema, `conform` picks keys from an env object and converts them using the supplied functions.\n\nKeys which are present in the `schema`, but not in the supplied `env` object *will* be present in the final object, having a value/type based on calling the conversion function with `undefined`.\n\nGiven these env vars:\n```\nDEFAULT_LOCALE=en-GB\nSUPPORTED_LOCALES=en-GB,cs-CZ,pl-PL\n```\n\nYou can do this:\n```js\n// Make sure you have loaded the env vars somehow,\n// either inline or using `dotenv`...\n\nconst {conform, boolean, array, string} = require(\"dotenv-utils\")\n\n// Specify a schema using the conversion functions\nconst schema = {\n  MINIFY: boolean,\n  DEFAULT_LOCALE: string,\n  SUPPORTED_LOCALES: array,\n}\n\n// Drop `process.env` into `conform`\nconst config = conform(process.env, schema)\n\n// `config` is now:\n// {\n//   MINIFY: false,\n//   DEFAULT_LOCALE: \"en-GB\",\n//   SUPPORTED_LOCALES: [\"en-GB\", \"cs-CZ\", \"pl-PL\"],\n// }\n\nmodule.exports = config\n```\n\n## Other Tools\n\n- https://www.npmjs.com/package/getenv â Slightly different concept, very good solution.\n- https://github.com/niftylettuce/dotenv-parse-variables â Very similar, mutates `process.env`.\n\n## License\n\nMIT\n","edelweiss":"# edelweiss\nRealtime App Engine\n","ella-list-view":"# Emberella List Views...\n\n...are no longer maintained. They use design patterns that do not work very\nnicely with Ember v1.13 and v2.0.\n\nPlease take a look at Ember List Component (in development) instead: https://github.com/realityendshere/ella-list-component\n\nIt provides a lot of the same functionality as Ember components.\n","ember-cli-deploy-github-status":"# Ember-cli-deploy-github-status\n\n> An ember-cli-deploy-plugin for setting the status on a commit in a PR on [GitHub](https://github.com/).\n\n[![](https://ember-cli-deploy.github.io/ember-cli-deploy-version-badges/plugins/ember-cli-deploy-github-status.svg)](http://ember-cli-deploy.github.io/ember-cli-deploy-version-badges/)\n[![Ember Observer Score](http://emberobserver.com/badges/ember-cli-deploy-github-status.svg)](http://emberobserver.com/addons/ember-cli-deploy-github-status)\n[![npm version](https://badge.fury.io/js/ember-cli-deploy-github-status.svg)](https://badge.fury.io/js/ember-cli-deploy-github-status)\n\n## What is an ember-cli-deploy plugin?\n\nA plugin is an addon that can be executed as a part of the ember-cli-deploy pipeline. A plugin will implement one or more of the ember-cli-deploy's pipeline hooks.\n\nFor more information on what plugins are and how they work, please refer to the [Plugin Documentation][2].\n\n## Quick Start\n\nTo get up and running quickly, do the following:\n\n- Install this plugin\n\n```bash\n$ ember install ember-cli-deploy-github-status\n```\n\n- Get a github api [token](https://github.com/settings/tokens) make sure the `repo:status` scope is selected\n\n- Place the following configuration into `config/deploy.js`\n\n```javascript\nENV.github = {\n  token: '<your-github-token>',\n  userOrOrganization: '<user-name>'\n  repo: '<my-ember-app-repo>',\n  publicURL: '<url-where-assets-will-be-viewed-from>',\n  commitUser: '<who-made-the-commit',\n  commitSha: '<sha-for-specific-commit>'\n}\n```\n\n- Ensure that the following environment variables are set:\n  - CI\n\n- Run the pipeline\n\n```bash\n$ ember deploy pull-request\n```\n\n## ember-cli-deploy Hooks Implemented\n\nFor detailed information on what plugin hooks are and how they work, please refer to the [Plugin Documentation][2].\n\n- `configure`\n- `willActivate`\n- `didDeploy`\n\n## Required Configuration Options\n\nFor detailed information on how configuration of plugins works, please refer to the [Plugin Documentation][2].\n\n### commitSha \n\nThe github commit sha that the status will be applied to. e.x https://github.com/my-user/:repo/commit/:sha\n\n### commitUser \n\nThe github user that committed the code\n\n### token \n\nThe [token](https://github.com/settings/tokens) that will be used to set the status on the github commit.\n \n### userOrOrganization\n\nThe user or organization that owns the repo. e.x https://github.com/:userOrOrganization/my-repo\n \n### repo\n\nThe user or organization that owns the repo. e.x https://github.com/my-user/:repo\n \n### publicURL\n\nThe url which your assets are going to be viewed from. e.x. https://my-app-domain.com\nIf you want to be able to a specific version of the index file you must include {{versionSha}} in the publicUrl\ne.x https://my-app-domain.com/{{versionSha}}\nThis will get replaced and look like https://my-app-domain.com/index.html:123abf\n\n## Optional Configuration Options\n\n## Note \n\n`ember-cli-deploy-github-status` will set the status of the github commit on the `didDeploy`. \n\n[2]: http://ember-cli.github.io/ember-cli-deploy/plugins \"Plugin Documentation\"\n","ember-query-layer":"# ember-query-layer\n\nAn experiment in more declarative data loading.\n\nThis is experimental! It doesn't really work yet, and won't have a stable\nAPI for a while.\n\nTo simplify and get something working, it only supports a very limited\nsubset of GraphQL queries: a single query for a single root field, with\na single optional `id` argument. The root field must match the name of\nan existing Ember Data model. Include the id to fetch a single record,\nor omit it to fetch all. No nested fields, mutations, fragments, or\ndirectives are supported.\n\nThis will be expanding as we figure out how to properly \n\n## Installation\n\n* `ember install ember-query-layer`\n\n## Planned Usage\nWAIT! Using `model()` isn't really ideal, since it doesn't always get\ncalled. Was there a new hook called `data()` or something? Or could we\nreopen link-to somehow and check whether the target route has a\nquery-layer model hook?\n\nThis doesn't work yet! But practicing some README-driven development,\nhere's what I'm thinking:\n\n```js\nimport { query } from 'ember-query-layer';\nexport default Route.extend({\n  model: query`\n    query PostsRoute {\n      post {\n        comments {\n          author\n        }\n      }\n    }\n  `\n});\n```\n\nThis will have a similar effect to (although without the confusing\nsemantics of reload, backgroundReload, or async relationships. A single\npromise is returned, which resolves with all the data you requested.\nNote - you don't need to specify scalar fields (only relationships), because they're already\nspecified in your DS.Model, and REST endpoints usually return the whole\nrecord anyway)\n```js\nexport default Route.extend({\n  model() {\n    return this.store.findAll('post', {\n      include: 'comments,comments.author'\n    });\n  }\n});\n```\n\nYou can use \n\nEquivalent to `store.findRecord()`:\n```js\nimport { Route } from '@ember/routing';\nimport { query } from 'ember-query-layer';\n\nexport default Route.extend({\n  model: query`\n    query PostRoute($post_id: ID) {\n      post(id: $post_id)\n    }\n  `\n});\n```\n","emmet-css":"# EmmetCSS\n\nEmmet CSS libray(include CSS Reset)\n\nv1.3.0 | 2018-02-12 EJay - modify something detail...\n\nv1.2.12 | 2017-09-30 EJay - add top, left, bottom, right, etc..\n\nv1.2.11 | 2017-08-04 EJay - remove useless class\n\nv1.2.9 | 2017-06-04 EJay - update Readme.md\n\nv1.2.8 | 2017-06-04 EJay - add pointer-event\n\nv1.2.7 | 2017-04-07 EJay - add function: omitContent\n\nv1.2.6 | 2017-03-24 EJay - modify html, body. remove font-size: 14px\n\nv1.2.5 | 2016-12-27 EJay - modify CIS color & add \\_mixin.scss\n\nv1.2.4 | 2016-12-26 EJay - modify something css class. ex: html, body\n\nv1.2.3 | 2016-12-26 EJay - add something css class. ex: .flex-col\n\nv1.2.2 | 2016-12-05 EJay - add something css class. ex: .cur\n\nv1.2.1 | 2016-11-21 EJay - add something css class. ex: .vv, .vh & update README.md\n\nv1.1.0 | 2016-11-21 EJay - all element use box-sizing: border-box & new something css class\n\nv1.0.0 | 2016-11-21 EJay - Create Emmet CSS\n\n# npm\n\nhttps://www.npmjs.com/package/emmet-css\n\n```\nnpm install emmet-css  \n```\n\n# CDN\n\nhttps://unpkg.com/emmet-css/css/emmet.min.css\n\nhttps://unpkg.com/emmet-css/css/emmet.css\n\n# License\n\nMIT License\n\nCopyright Â© 2016 Anyong Fintech Co., Ltd.\n\nhttps://www.anyong.com.tw\n","excel-to-mongodb":"# excel-to-mongoDB\r\n\r\n[![Build Status](https://travis-ci.com/ngudbhav/excel-to-mongoDB.svg?branch=master)](https://travis-ci.com/ngudbhav/excel-to-mongoDB)\r\n[![CircleCI](https://circleci.com/gh/ngudbhav/excel-to-mongoDB.svg?style=svg)](https://circleci.com/gh/ngudbhav/excel-to-mongoDB)\r\n\r\nThis module converts your correctly formatted Excel spreadsheet to a collection in specified database in MongoDB.\r\n\r\n## Excel Formats Supported\r\n\r\nSupported Excel formats are XLS/XLSX/CSV\r\n\r\n## Spreadsheet Format\r\n\r\nPlease have a look at the sample Excel sheets provided to have a clear view of the File. <a href=\"https://go.microsoft.com/fwlink/?LinkID=521962\">Microsoft Sample Sheet</a>\r\n\r\n## Installation\r\n\r\n```sh\r\nnpm install excel-to-mongoDB --save\r\n```\r\n\r\n## Testing\r\n\r\n```sh\r\ngit clone https://github.com/ngudbhav/excel-to-mongoDB.git\r\ncd excel-to-mongoDB/\r\n```\r\n\r\nNavigate to the folder.\r\n\r\n```sh\r\ncd test/\r\nnano test.js\r\n```\r\n\r\nNow this file needs the MongoDB credentials. Provide those credentials in String format and save by pressing the following keys.\r\n\r\n```sh\r\n'CTRL+X'\r\n'Y'\r\n'Return'\r\n```\r\n\r\nGet back and test the module.\r\n\r\n```sh\r\ncd ..\r\nnpm test\r\n```\r\n\r\n## Using\r\n\r\nNote: Please correctly format the excel sheet else this won't work.\r\n\r\n```sh\r\nvar excelMongo = require('excel-to-mongoDB');\r\n```\r\n\r\nThis module needs 3 arguments.\r\nThe first one is the object with your credentials.\r\n\r\n```sh\r\nvar credentials = {\r\n\thost: host,\r\n\tpath: path for the excel file,\r\n\tcollection: Collection name for creation,\r\n\tdb: Your Database name\r\n};\r\n```\r\n\r\nThe second one is an optional argument of options with default values as follows.\r\n\r\n```sh\r\nvar options = {\r\n\tsafeMode: false //Backup the db to the current working directory in dump/<db> folder.\r\n\tverbose: false //Console.log the current step processing.\r\n\tcustomStartEnd: false //Custom insert the row and columns rather than full excel-file. Do take care! Specifying endRow or endCol may result in insertion of redundant data.\r\n\tstartRow: <required> //Valid only if customStartEnd is true. Defines the start Row of the data.\r\n\tendRow: <required> //Valid only if customStartEnd is true. Defines the end Row of the data.\r\n\tstartCol: <required> //Valid only if customStartEnd is true. Defines the start Column of the data.\r\n\tendCol: <required> //Valid only if customStartEnd is true. Defines the end Column of the data.\r\n}\r\n```\r\n\r\nThe third argument is the callback function which should be executed.\r\n\r\n```sh\r\nexcelMongo.covertToMongo(credentials, options, callback); //returns documents inserted in the database.\r\n```\r\n\r\n## Error in safeMode option\r\n\r\n```sh\r\nWindows users need to add the following path to the environment path variable.\r\nC:\\Program Files\\MongoDB\\Server\\<version>\\bin\r\n\r\nRight click 'This PC', head to 'properties' and 'Advanced System Settings'. From there, Click on 'Environment Variables'. Under System Variables, Search for 'PATH'. Double click the entry, click on new and add the above path.\r\nRestart your console and you should be good to go.\r\n\r\nLinux/Unix Users please check your installation or .bashrc.\r\n```\r\n\r\n## Want to covert to MYSQL instead?\r\n\r\nWe have got you covered! <a href=\"https://github.com/ngudbhav/excel-to-mysql\">Github Link</a>.\r\n\r\n## Want to use the GUI instead?\r\n\r\nWe have got you covered! <a href=\"https://github.com/ngudbhav/TriCo-electron-app\">Github Link</a>.\r\n","execsyncs":"execsyncs\n===============\n[![Build Status](https://travis-ci.org/yosuke-furukawa/execsyncs.svg?branch=master)](https://travis-ci.org/yosuke-furukawa/execsyncs)\n\nexecSync for node v0.10 and v0.11.\n\nIf your node version is v0.11, execsyncs uses core library (child_process.execSync).\nHowever, if your node version is v0.10, execsyncs uses own native module (execsync.cc).\n\nHow to use\n================\n\n```shell\n$ npm install execsyncs -S\n```\n\n\n```javascript\nvar execsyncs = require(\"execsyncs\");\nvar ls = \"\" + execsyncs(\"ls\");\nconsole.log(ls);\n```\n\n\nLICENSE\n===============\n\nMIT\n\nInspired BY\n==============\n\n[https://github.com/hecomi/node-execSync](https://github.com/hecomi/node-execSync)\nThanks, hecomi san.\n","expensify":"# JavaScript Expensify API for Node.JS\n\nA Node.JS module providing a wrapper for the Expensify API.\n\n## Installation\n\n  Install with the Node.JS package manager [npm](http://npmjs.org/) ![NPM version](https://badge.fury.io/js/expensify.png):\n\n      $ npm install expensify\n\nor\n\n  Install via git clone:\n\n      $ git clone git://github.com/brendannee/node-expensify.git\n      $ cd node-expensify\n      $ npm install\n\n## Example\n\nGenerate an Expensify SSO for user 'testuser@test.com'.\n\n```javascript\nvar Expensify = require('expensify');\n\nvar expensify = new Expensify({\n  expensifyPartnerName: <YOUR EXPENSIFY_PARTNER_NAME>,\n  expensifyPartnerPassword: <YOUR EXPENSIFY_PARTNER_PASSWORD>,\n  expensifyAesKey: <YOUR EXPENSIFY_AES_KEY>,\n  expensifyAesIv: <YOUR EXPENSIFY_AES_IV>\n});\n```\n\nCreate and store a user id and secret for the the user you'd like to connect\n\n```javascript\nexpensify.authenticate({\n  userSecret: 'MyGreatSecret'\n}, function(e, sso) {\n  console.log(sso);\n});\n```\n\n\nGet an formatted Authorize URL\n\n```javascript\nexpensify.authorizeUrl({\n  sso: '675sd98769sd69sd',\n  userId: 'testuser@test.com',\n  exitTo: 'http://mysite.com/expensify/redirect'\n}, function(e, url) {\n  console.log(url);\n});\n```\n\nCreate an expense transaction using the sso created above.\n\n```javascript\nexpensify.createDistanceTransaction({\n  created: '2015-04-07',\n  merchant: 'Tire Emporium',\n  amount: 2299,\n  currency: 'USD',\n  comment: 'New tires for my car',\n  sso: sso,\n  partnerUserId: 'testuser@test.com'\n}, function(e, body) {\n  console.log('Transaction created');\n});\n```\n\nCreate a separate distanceTransaction for that user.\n\n```javascript\nexpensify.createDistanceTransaction({\n  created: '2015-04-07',\n  distance: 2.3,\n  units: 'Mi',\n  comment: 'A trip to the store',\n  sso: sso,\n  partnerUserId: 'testuser@test.com'\n}, function(e, body) {\n  console.log('Distance Transaction created');\n});\n```\n\nUpload a receipt\n\n```javascript\nexpensify.uploadReceipt({\n  file: 'R0lGODlhEAAQAKUAAAAAABbkKBfhKRXlJxfiKBjgKRndKhrbKxzYKxbjKBneKhrcKhvZKxzXLB7VLRjfKRzYLB3WLBrbKh7ULR/SLh3VLR/TLSDQLiHOLyLLMCTJMB/RLiHPLyLMLyPKMCTIMSbFMifDMyXGMSjBMym/NCfCMyq9NCu7NSXGMifDMim+NCq8NSu5NSu6Nf///////////////////////////////////////////////////////////////////////yH5BAEKAD8ALAAAAAAQABAAAAZlwJ9wSCwafwDAsZgMCJJL5IBQMBwQSiMgIVAsGA1HlvkwACAR6BEgYQAmFLW2UbFcMBnNmLnhdDwfICF7REkfIgAjJIRDSSAlACYnjEgoKSMqKywslAAlJCYtm5RCSaOkhahRRkEAOw==',\n  created: '2015-04-07',\n  merchant: 'Tire Emporium',\n  amount: 2299,\n  currency: 'USD',\n  comment: 'New tires for my car',\n  sso: sso,\n  partnerUserId: 'testuser@test.com'\n}, function(e, body) {\n  console.log('Receipt uploaded');\n});\n```\n\n\nFetch a receipt from a URL\n\n```javascript\nexpensify.fetchReceipt({\n  location: 'http://we.are.expensify.com/assets/img/icon-rounded.png',\n  created: '2015-04-07',\n  merchant: 'Tire Emporium',\n  amount: 2299,\n  currency: 'USD',\n  comment: 'New tires for my car',\n  sso: sso,\n  partnerUserId: 'testuser@test.com'\n}, function(e, body) {\n  console.log('Receipt fetched');\n});\n\n```\n\n## LICENSE\n\nMIT license. See the LICENSE file for details.\n","express-gateway-test-tools":"# Testing Tools for express-gateway\n\nThe purpose of this package is to provide a set of tools to make it easier to write tests against custom plugin code that runs off of the [Express Gateway](https://github.com/ExpressGateway/express-gateway).  Note that some tools may become obsolete dependent on what programmatic features are added to Express Gateway in the future.\n\n## Usage Examples\n\n```JavaScript\nconst { createGateway, createGatewayConfig } = require('express-gateway-test-tools');\n\ndescribe('example test', function () {\n  it('with custom policy', function () {\n    let gwConfig = createGatewayConfig();\n    let gwApp;\n\n    // Setup the actionParams you want to pass into the policies you'll be testing\n    let policiesToTest = [\n      { 'myPolicy': [\n        param1: 'foo',\n        param2: 'bar'\n      ]}\n    ];\n\n    // Path to the manifest file needs to be relative to the test file\n    return createGateway(gwConfig, '../manifest.js', policiesToTest)\n      .then((gw) => {\n        gwApp = gw.app;\n        return request(gwApp)\n          .get('/ip')\n          .expect(200)\n      })\n      .then(() => {\n        // Always make sure to close your app when done, or else your test runner won't exit\n        gwApp.close();\n      });\n  });\n});\n\n```\n### Plugins with parameters\nTo set custom parameters for a plugin, define them like in this example.\n```JavaScript\nconst pluginParams = {\n  param1: 'foo',\n  param2: 123\n};\n\ncreateGateway(gwConfig, '../manifest.js', policiesToTest, pluginParams);\n```\n\n\n## Setting up tests to run\nMake certain that at a minimum set `EG_DISABLE_CONFIG_WATCH=true` when running your tests, otherwise the gateway will have issues attempting to load.\n\n## A note on dependencies\n\nThe testing tools have no specific dependencies defined, so as to allow a plugin developer to test against the version of Express Gateway that they're actually using.  Thus it is assumed that some version of Express Gateway is installed by the app that is consuming this package.\n\n","express-ts-decorator":"# express-ts-decorator\n\n> The Express typescript easy to use decorator project\n\n## Install\n\n```bash\n  # use npm\n  ~ npm i express-ts-decorator\n  # use yarn\n  ~ yarn add express-ts-decorator\n```\n\n## Usage\n\n1. Set up your Controller\n\n```typescript\n// ./controllers/hello.ts\nimport { Controller, Get } from \"express-ts-descorator\";\n\n@Controller(\"/api/hello\")\nexport class Hello {\n  @Get(\"\")\n  public hello() {\n    return \"hello\";\n  }\n\n  @Get(\"/json\")\n  public jsonHello() {\n    return {\n      message: \"hello\"\n    };\n  }\n}\n```\n\n2. Set up your App\n\n```typescript\n// app.ts\nimport * as express from \"express\";\nimport { ControllerLoader, ExpressApp } from \"express-ts-descroator\";\nimport * as Path from \"path\";\nimport * as cors from \"cors\";\n\n@ControllerLoader({\n  filePath: Path.join(__dirname, \"./controllers\") // path to your controllers file\n  autoInjectRoutes: true // auto inject router config to express when App constructor\n})\nclass App extends ExpressApp {\n\n  // if use auto inject routes\n  // some middlewares can set in this array which you want it run before router\n  beforeRouterInjectMiddlewares = [\n    (req: any, res: any, next: any) => {\n      console.log(\"in before router middleware\");\n      return next();\n    },\n    bodyParser.json(),\n    {\n      active: () => process.env.NODE_ENV === \"DEVELOPMENT\", // if some middleware just run in production or development you can use this\n      middleware: cors()\n    }\n  ];\n\n  constructor() {\n    super(express());\n  }\n}\n\nconst app = new App();\n\n// use the middlewares like that\n// app.use(bodyParser.json());\n\n// inject the loader routes config\n// if you set the `autoInjectRoutes` is false in ControllerLoader,\n// you can inject router by yourself like that\napp.routes.forEach(router => {\n  app.use(router);\n});\n\n// catch the error like that\napp.use((err: Error, req: express.Request, res: express.Response, next: express.NextFunction) => {\n  // do sth here\n});\n\napp.express.listen(3000);\n```\n\n3. Run!\n\n```bash\n  ~ ts-node app.ts\n```\n\n## Test\n\n```bash\n  ~ yarn test\n```\n\n## Validator\n\nyou can use the Joi to validate your http request parameter\n\n```typescript\n// ./controllers/hello.ts\nimport { Controller, Get, Validator } from \"express-ts-descorator\";\nimport * as Joi from \"@hapi/joi\";\n\n// support the `query`, `body`, `params` validator in http request.\n@Validator({\n  query: Joi.object()\n    .keys({\n      name: Joi.string().required() // will throw error when request.query.name not exist or not the string\n    })\n    .requried()\n  // body: .....\n  // params: .....\n})\n@Controller(\"/api/hello\")\nexport class Hello {\n  @Get(\"\")\n  public hello() {\n    return \"hello\";\n  }\n\n  @Get(\"/json\")\n  public jsonHello() {\n    return {\n      message: \"hello\"\n    };\n  }\n}\n```\n\n## Middlewares\n\n```typescript\nimport { Controller, Get, Middlewares, Validator } from \"express-ts-decorator\";\nimport * as Joi from \"@hapi/joi\";\nimport { Request, Response, NextFunction } from \"express\";\n\n@Controller(\"/api/hello\")\nexport class Hello {\n  @Validator({\n    query: Joi.object()\n      .keys({\n        name: Joi.string().required()\n      })\n      .required()\n  })\n  @Middlewares(function(req: Request, res: Response, next: NextFunction) {\n    console.log(\"in\");\n    // You can do something in here before call the controller main function\n    next();\n  })\n  @Get(\"\")\n  public hello() {\n    return \"hello\";\n  }\n\n  @Get(\"/json\")\n  public jsonHello() {\n    return {\n      message: \"hello\"\n    };\n  }\n}\n```\n","fb-bs-platform":"[BuckleScript](https://bucklescript.github.io): A JavaScript backend for [OCaml](https://ocaml.org/) focused on smooth integration and clean generated code.\n\n[![NPM](https://nodei.co/npm/bs-platform.png?compact=true)](https://nodei.co/npm/bs-platform/) [![Build Status](https://travis-ci.org/BuckleScript/bucklescript.svg?branch=master)](https://travis-ci.org/bucklescript/bucklescript) [![Coverage Status](https://coveralls.io/repos/github/BuckleScript/bucklescript/badge.svg?branch=master)](https://coveralls.io/github/BuckleScript/bucklescript?branch=master)\n\n## Documentation\n\nPlease see the [documentation site](https://bucklescript.github.io).\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md).\n\n## Acknowledgments\n\n* Thanks to the [OCaml](https://ocaml.org) team, obviously, without such a beautiful yet practical language, this backend would not exist\n* Thanks to [ninja-build](https://ninja-build.org), BuckleScript also comes with a blazing fast build tool on top of it, `ninja` is a truly [well engineered](http://aosabook.org/en/posa/ninja.html) scalable build tool\n* Thanks to [Bloomberg](https://www.techatbloomberg.com)! This project began at Bloomberg and was published in 2016; without the support of Bloomberg, it would not have happened. Now that the project has grown and developed its own community, it has moved to its own GitHub organization.\n\n## Licensing\n\nSee [COPYING](./COPYING) and [COPYING.LESSER](./COPYING.LESSER)\n\nThe [`ocaml`](vendor/ocaml) directory contains the official [OCaml](https://ocaml.org) compiler (version 4.02.3).\nRefer to its copyright and license notices for information about its licensing.\n\nThe [`ninja-build`](ninja-build) directory contains the official [ninja-build](https://github.com/ninja-build/ninja) (version 1.7.2).\nRefer to its copyright and license notices for information about its licensing.\n\nBuckleScript builds on parts of [js_of_ocaml](https://github.com/ocsigen/js_of_ocaml):\n\n* [`jscomp/core/js_dump.ml`](jscomp/core/js_dump.ml) (pretty printer)\n* [`jscomp/runtime`](jscomp/runtime)\n\nBuckleScript builds on parts of OCaml:\n\n* [`jscomp/core/lam_pass_exits.ml`](jscomp/core/lam_pass_exits.ml)\n* [`jscomp/core/lam_pass_lets_dce.ml`](jscomp/core/lam_pass_lets_dce.ml)\n\nThese modules were adapted from [`ocaml/bytecomp/simplif.ml`](vendor/ocaml/bytecomp/simplif.ml) for\nJavaScript specific optimization purposes.\n\n* [`jscomp/core/js_main.ml`](jscomp/core/js_main.ml)\n\n`jscomp/core/js_main.ml` is adapted from [`ocaml/driver/main.ml`](vendor/ocaml/driver/main.ml). It is not\nactively used but demonstrates that it is easy to assemble a whole compiler using the OCaml compiler\nlibraries. It also shows how to add more compilation flags to a JS backend.\n\n* [`jscomp/stdlib`](jscomp/stdlib)\n\n`jscomp/stdlib` is copied from [`ocaml/stdlib`](vendor/ocaml/stdlib). It is compiled to JavaScript and\nincluded with BuckleScript.\n\n* [`jscomp/test`](jscomp/test)\n\n`jscomp/test` is based on [`ocaml/testsuite`](vendor/ocaml/testsuite).\n\nBuckleScript unittest builds on parts of [OUnit](http://ounit.forge.ocamlcore.org/)\n\n* [`jscomp/ounit`](jscomp/ounit) is adapted from ounit, the unit test\n  utilities are only used for dev purpose, they are not required for distribution\n","fillscreen-image":"# What\n\nGiven a metadata about an image and a window, we can\nadjust what portion of the image is viewable within\nthe viewport. \n\n# Props\n\n|Key|Value|\n|---|---|\n|json|imageType|\n|domExists|boolean|\n\n```\nimageType = {\n  visible: boolean,\n  ratio: float,\n  width: int,\n  height: int,\n  focus: {\n    x: int,\n    y: int,\n  },\n}\n```\n\n# Server Side Rendering\n\nFor SSR purposes, the default window is expected to be 800x800. You will need to update this on ```componentDidMount()``` (for instance) to get accurate window dimension readings.\n","firsthandler":"# firsthandler\nprepend a connect/express handler to any http server\n","fis-parser-jade":"fis-parser-jade\r\n===============\r\n\r\nA parser for fis to compile jade file.\r\n\r\n## åè½\r\n\r\n - å°Jadeæ¨¡çç¼è¯ä¸ºHTML\r\n\r\n## ç¨æ³\r\n\r\n### å®è£æä»¶\r\n\r\n    $ npm install -g fis-parser-jade\r\n    $ vi path/to/project/fis-conf.js\r\n\r\n### å¯ç¨æä»¶\r\n\r\n```javascript\r\n//file : path/to/project/fis-conf.js\r\n\r\n//ä½¿ç¨fis-parser-jadeæä»¶ç¼è¯jadeæä»¶\r\nfis.config.set('modules.parser.jade', 'jade');\r\n//jadeæä»¶ç»è¿ç¼è¯åè¾åºä¸ºhtmlæä»¶\r\nfis.config.set('roadmap.ext.jade', 'html');\r\n```\r\n\r\n### æ·»å èªå®ä¹filterä¸jadeç¼è¯è®¾ç½®\r\n\r\n```javascript\r\nvar jadeConf = {\r\n\tfilters : {\r\n\t\tjadesrc : require('jade-highlighter')\r\n\t},\r\n  pretty  : true\r\n};\r\n\r\nfis.config.set('settings.parser.jade', jadeConf);\r\n```","fitbit-cli":"# fitbit-cli","fl-backbone-rest":"[![Build Status](https://secure.travis-ci.org/vidigami/backbone-rest.png)](http://travis-ci.org/vidigami/backbone-rest#master)\n\n![logo](https://github.com/vidigami/backbone-rest/raw/master/media/logo.png)\n\nBy using BackboneREST on the server and BackboneORM's JSON rendering DSL, you can save time in defining JSON APIs.\n\nSupported frameworks:\n\n* [Express](http://expressjs.com/)\n* [restify](http://mcavage.me/node-restify)\n\n\n#### Examples (CoffeeScript)\n\n```coffeescript\nBackbone = require 'backbone'\nRestController = require 'backbone-rest'\nensureLoggedIn = require 'connect-ensure-login'\n\ncustomAuthorization = (req, res, next) ->\n  unless req.user.canAccessTask(req)\n    return res.status(401).send('you cannot access this task')\n  next()\n\nnew RestController(app, {\n  auth: [ensureLoggedIn('/login'), customAuthorization]\n  model_type: Task\n  route: '/tasks'\n})\n```\n\n#### Examples (JavaScript)\n\n```javascript\nvar Backbone = require('backbone');\nvar RestController = require('backbone-rest');\nvar ensureLoggedIn = require('connect-ensure-login');\n\nvar customAuthorization = function(req, res, next) {\n  if (!req.user.canAccessTask(req)) {\n    return res.status(401).send('you cannot access this task');\n  }\n  return next();\n};\n\nnew RestController(app, {\n  auth: [ensureLoggedIn('/login'), customAuthorization],\n  model_type: Task,\n  route: '/tasks'\n});\n```\n\n\nPlease [checkout the website](http://vidigami.github.io/backbone-orm/backbone-rest.html) for installation instructions, examples, documentation, and community!\n\n\n### For Contributors\n\nTo build the library for Node.js:\n\n```\n$ gulp build\n```\n\nPlease run tests before submitting a pull request:\n\n```\n$ gulp test --quick\n```\n\nand eventually all tests:\n\n```\n$ npm test\n```\n\n# Test Variants\n\nYou can run the following fine-grained tests to resolve problems with specific application frameworks\n\n```\n$ gulp test-express3\n$ gulp test-express4\n$ gulp test-restify\n```\n","flux-link":"flux-link\n=========\n\nA callback management library for Node.js, designed to help manage program flow in callback-heavy situations\n\n## Overview\n\nCreate chains of functions that should be called in sequence and require the use of callbacks to pass from one to the next. Additionally, a shared environment variable is provided to all callbacks, allowing them to approximate local shared state, along with support for exception-like behavior where the remainder of a callback chain can be skipped in the event of an error, invoking a handler.\n","gatsby-source-duodealer":"# gatsby-source-duodealer\n\nSource plugin for pulling data into [Gatsby][gatsby] from [Duo\nDealer][duodealer]\nstores via the [Duo Dealer Storefront API][duodealer-storefront-api].\n\n## Features\n\n- Provides public shop data available via the [Duo Dealer Storefront API][duodealer-storefront-api]\n- Supports `gatsby-transformer-sharp` and `gatsby-image` for product and\n  article images\n\n## Install\n\n```sh\nnpm install --save gatsby-source-duodealer\n```\n\n## How to use\n\nEnsure you have an access token for the [Duo Dealer Storefront API][duodealer-storefront-api]. The token should have the following permissions:\n\n- Read products, variants, and collections\n- Read product tags\n- Read content like articles, blogs, and comments\n\nThen in your `gatsby-config.js` add the following config to enable this plugin:\n\n```js\nplugins: [\n  /*\n   * Gatsby's data processing layer begins with âsourceâ\n   * plugins. Here the site sources its data from Duo Dealer.\n   */\n  {\n    resolve: \"gatsby-source-duodealer\",\n    options: {\n      // The domain name of your Duo Dealer shop. This is required.\n      // Example: 'gatsby-source-duodealer-test-shop' if your Duo Dealer address is\n      // 'gatsby-source-duodealer-test-shop.myduodealer.com'.\n      shopName: \"gatsby-source-duodealer-test-shop\",\n\n      // An API access token to your Duo Dealer shop. This is required.\n      // You can generate an access token in the \"Manage private apps\" section\n      // of your shop's Apps settings. In the Storefront API section, be sure\n      // to select \"Allow this app to access your storefront data using the\n      // Storefront API\".\n      // See: https://help.duodealer.com/api/custom-storefronts/storefront-api/getting-started#authentication\n      accessToken: \"example-wou7evoh0eexuf6chooz2jai2qui9pae4tieph1sei4deiboj\",\n\n      // Set verbose to true to display a verbose output on `npm run develop`\n      // or `npm run build`. This prints which nodes are being fetched and how\n      // much time was required to fetch and process the data.\n      // Defaults to true.\n      verbose: true,\n    },\n  },\n]\n```\n\n## How to query\n\nYou can query nodes created from Duo Dealer using GraphQL like the following:\n\n**Note**: Learn to use the GraphQL tool and Ctrl+Spacebar at\n<http://localhost:8000/___graphql> to discover the types and properties of your\nGraphQL model.\n\n```graphql\n{\n  allDuoDealerProduct {\n    edges {\n      node {\n        id\n        title\n        handle\n        productType\n        vendor\n        variants {\n          id\n          title\n          price\n        }\n      }\n    }\n  }\n}\n```\n\nAll Duo Dealer data is pulled using the [Duo Dealer Storefront\nAPI][duodealer-storefront-api]. Data is made available in the same structure as\nprovided by the API, with a few exceptions noted below.\n\nThe following data types are available:\n\n| Name               | Description                                                                                                           |\n| ------------------ | --------------------------------------------------------------------------------------------------------------------- |\n| **Article**        | A blog entry.                                                                                                         |\n| **Blog**           | Collection of articles.                                                                                               |\n| **Comment**        | A comment on a blog entry.                                                                                            |\n| **Collection**     | Represents a grouping of products that a shop owner can create to organize them or make their shops easier to browse. |\n| **Product**        | Represents an individual item for sale in a Duo Dealer store.                                                            |\n| **ProductOption**  | Custom product property names.                                                                                        |\n| **ProductVariant** | Represents a different version of a product, such as differing sizes or differing colors.                             |\n| **ProductType**    | Represents a category of products.                                                                                    |\n| **ShopPolicy**     | Policy that a merchant has configured for their store, such as their refund or privacy policy.                        |\n\nFor each data type listed above, `duodealer${typeName}` and\n`allDuoDealer${typeName}` is made available. Nodes that are closely related, such\nas `Article` and `Comment`, are provided as node fields as described below.\n\n**Note**: The following examples are not a complete reference to the available\nfields for each node. Utilize Gatsby's built-in GraphQL tool to discover the\ntypes and properties available.\n\n### Query articles\n\nThe associated blog data is provided on the `blog` field. Article comments are\nprovided on the `comments` field.\n\n```graphql\n{\n  allDuoDealerArticle {\n    edges {\n      node {\n        id\n        author {\n          email\n          name\n        }\n        blog {\n          title\n        }\n        comments {\n          id\n          author {\n            email\n            name\n          }\n          contentHtml\n        }\n        contentHtml\n        publishedAt(formatString: \"ddd, MMMM Do, YYYY\")\n      }\n    }\n  }\n}\n```\n\n### Query blogs\n\nBlog data is provided on the `blog` field on `Article`, but it can be queried\ndirectly like the following:\n\n```graphql\n{\n  allDuoDealerBlog {\n    edges {\n      node {\n        id\n        title\n        url\n      }\n    }\n  }\n}\n```\n\n### Query article comments\n\nComments are provided on the `comments` field on `Article`, but they can be\nqueried directly like the following:\n\n```graphql\n{\n  allDuoDealerComment {\n    edges {\n      node {\n        id\n        author {\n          email\n          name\n        }\n        contentHtml\n      }\n    }\n  }\n}\n```\n\n### Query product collections\n\nProducts in the collection are provided on the `products` field.\n\n```graphql\n{\n  allDuoDealerCollection {\n    edges {\n      node {\n        id\n        descriptionHtml\n        handle\n        image {\n          src\n          alt\n        }\n        products {\n          id\n          handle\n          title\n        }\n        title\n      }\n    }\n  }\n}\n```\n\n### Query products\n\nProduct variants and options are provided on the `variants` and `options`\nfields.\n\n```graphql\n{\n  allDuoDealerProduct {\n    edges {\n      node {\n        id\n        descriptionHtml\n        handle\n        images {\n          originalSrc\n        }\n        variants {\n          id\n          availableForSale\n          image {\n            originalSrc\n          }\n          price\n          selectedOptions {\n            name\n            value\n          }\n          sku\n          title\n        }\n        title\n      }\n    }\n  }\n}\n```\n\n### Query product options\n\nProduct options are provided on the `options` field on `Product`, but they can\nbe queried directly like the following:\n\n```graphql\n{\n  allDuoDealerProductOption {\n    edges {\n      node {\n        id\n        name\n        values\n      }\n    }\n  }\n}\n```\n\n### Query product variants\n\nProduct variants are provided on the `variants` field on `Product`, but they\ncan be queried directly like the following:\n\n```graphql\n{\n  allDuoDealerProductVariant {\n    edges {\n      node {\n        id\n        availableForSale\n        image {\n          originalSrc\n        }\n        price\n        selectedOptions {\n          name\n          value\n        }\n        sku\n        title\n      }\n    }\n  }\n}\n```\n\n### Query shop policies\n\nShop policies include the following types:\n\n- Privacy Policy (`privacyPolicy`)\n- Refund Policy (`refundPolicy`)\n- Terms of Service (`termsOfService`)\n\nThe type of policy is provided on the `type` field. Policies can be queried\nlike the following:\n\n```graphql\n{\n  allDuoDealerShopPolicy {\n    edges {\n      node {\n        body\n        title\n        type\n      }\n    }\n  }\n}\n```\n\n### Image processing\n\nTo use image processing you need `gatsby-transformer-sharp`,\n`gatsby-plugin-sharp`, and their dependencies `gatsby-image` and\n`gatsby-source-filesystem` in your `gatsby-config.js`.\n\nYou can apply image processing to any image field on a node. Image processing\nof inline images added to description fields is currently not supported.\n\nTo access image processing in your queries, you need to use this pattern, where\n`...ImageFragment` is one of the [`gatsby-transformer-sharp`\nfragments][gatsby-image-fragments]:\n\n```graphql\n{\n  allDuoDealerProduct {\n    edges {\n      node {\n        id\n        images {\n          localFile {\n            childImageSharp {\n              ...ImageFragment\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nFull example:\n\n```graphql\n{\n  allDuoDealerProduct {\n    edges {\n      node {\n        id\n        images {\n          localFile {\n            childImageSharp {\n              resolutions(width: 500, height: 300) {\n                ...GatsbyImageSharpResolutions_withWebp\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nTo learn more about image processing, check the documentation of\n[gatsby-plugin-sharp][gatsby-plugin-sharp].\n\n## Site's `gatsby-node.js` example\n\n```js\nconst path = require(\"path\")\n\nexports.createPages = async ({ graphql, boundActionCreators }) => {\n  const { createPage } = boundActionCreators\n\n  const pages = await graphql(`\n    {\n      allDuoDealerProduct {\n        edges {\n          node {\n            id\n            handle\n          }\n        }\n      }\n    }\n  `)\n\n  pages.data.allDuoDealerProduct.edges.forEach(edge => {\n    createPage({\n      path: `/${edge.node.handle}`,\n      component: path.resolve(\"./src/templates/product.js\"),\n      context: {\n        id: edge.node.id,\n      },\n    })\n  })\n}\n```\n\n## A note on customer information\n\nNot all Duo Dealer nodes have been implemented as they are not necessary for the\nstatic portion of a Gatsby-generated website. This includes any node that\ncontains sensitive customer-specific information, such as `Order` and\n`Payment`.\n\nIf you are in need of this data (e.g. building a private, internal website),\nplease open an issue. Until then, the nodes will not be implemented to lessen\nthe chances of someone accidentally making private information publicly\navailable.\n\n[gatsby]: https://www.gatsbyjs.org/\n[duodealer]: https://www.duodealer.com/\n[duodealer-storefront-api]: https://help.duodealer.com/api/custom-storefronts/storefront-api\n[graphql-inline-fragments]: http://graphql.org/learn/queries/#inline-fragments\n[gatsby-plugin-sharp]: https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-plugin-sharp\n[gatsby-image-fragments]: https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-image#gatsby-transformer-sharp\n","gcloud-monitor":"# gcloud-monitor [![Build Status](https://travis-ci.org/tjmehta/gcloud-monitor.svg?branch=master)](https://travis-ci.org/tjmehta/gcloud-monitor) [![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](http://standardjs.com/)\nA node.js module for Custom monitoring using Google Cloud Monitoring v3 API\n\n## Installation\n```bash\nnpm i --save gcloud-monitor\n```\n\n## Usage\n\n### Gauge\n\n#### Create a Gauge Metric\n```js\nconst monitor = require('gcloud-monitor')({\n  project: '<google-cloud-project-name>',\n  resource: {\n    // optional, defaults to {type: 'global'}\n    // more info: https://cloud.google.com/monitoring/api/ref_v3/rest/v3/MonitoredResource\n  },\n  auth: {\n    // optional, if using on GCE\n    // more info: https://github.com/google/google-api-nodejs-client#authorizing-and-authenticating\n  },\n  // optional: default report throttle time\n  timeout: 1000\n})\n\n/**\n * create a gauge\n * more info: https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors#MetricDescriptor\n * @param  {String} metricType\n * @param  {Object} [opts] metric params\n * @param  {Object} [opts.throttle] // report throttle time\n * @param  {Object} [opts.description]\n * @param  {Object} [opts.displayName]\n * @param  {Object} [opts.labels] label descriptors\n * @param  {Object} [opts.metricDomain] default: 'custom.googleapis.com'\n * @param  {Object} [opts.unit]\n * @param  {Object} [opts.valueType] default: 'INT64'\n * @return {Promise<Gauge,Error>} resolves gauge instance\n */\nmonitor.createGauge('connections', {\n  displayName: 'Connections',\n  description: 'Active socket connection count',\n  labels: [{\n    key: 'foo',\n    description: 'foo label description',\n    valueType: 'INT64'\n  }],\n  unit: 'connections',\n  valueType: 'INT64'\n}).then((gauge) => {\n  // use gauge...\n})\n```\n\n#### Report Gauge Metric Data\n```js\n/**\n * report a metric value\n * @param  {*} value\n * @param  {Date} [time]\n * @param  {Object} [labels]\n * @return {Promise}\n */\ngauge.report(1, new Date(), {\n  foo: 1\n}).then((data) => {\n  console.log('Response data', data)\n})\n```\n\n#### Delete a Gauge Metric\n```js\n/**\n * delete the cumulative metric\n * @return {Promise}\n */\ngauge.delete().then(function (data) {\n  console.log('Response data', data)\n})\n```\n\n### Cumulative\n\n#### Create a Cumulative Metric\n```js\nconst monitor = require('gcloud-monitor')({\n  project: '<google-cloud-project-name>',\n  auth: {/*auth-json*/} // optional, if using on GCE\n})\n\n/**\n * create a cumulative metric\n * more info: https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors#MetricDescriptor\n * @param  {String} metricType\n * @param  {Object} [opts] metric params\n * @param  {Object} [opts.description]\n * @param  {Object} [opts.displayName]\n * @param  {Object} [opts.labels] label descriptors\n * @param  {Object} [opts.metricDomain] default: 'custom.googleapis.com'\n * @param  {Object} [opts.unit]\n * @param  {Object} [opts.valueType] default: INT64\n * @return {Promise<Model,Error>} resolves Cumulative instance\n */\nmonitor.createCumulative('requestsPerSecond', {\n  displayName: 'Requests per Second',\n  description: 'Active socket connection count',\n  labels: [{\n    key: 'foo',\n    description: 'foo label description',\n    valueType: 'INT64'\n  }],\n  unit: 'req/s',\n  valueType: 'INT64'\n}).then((cumulative) => {\n  // use cumulative...\n})\n```\n\n#### Report Cumulative Metric Data\n```js\n/**\n * report a metric value\n * @param  {*} value\n * @param  {Object|Date} [interval|endTime]\n * @param  {Object} [interval.startTime] default: last `interval.startTime` or `createCumulative` time\n * @param  {Object} [interval.endTime]\n * @param  {Object} [labels]\n * @return {Promise}\n */\ncumulative.report(1, {\n  startTime: startTime,\n  endTime: new Date()\n}, {\n  foo: 1\n}).then((data) => {\n  console.log('Response data', data)\n})\n```\n\n#### Delete a Cumulative Metric\n```js\n/**\n * delete the cumulative metric\n * @return {Promise}\n */\ncumulative.delete().then(function (data) {\n  console.log('Response data', data)\n})\n```\n\n#### Note about throttle\nThrottle can be set globally as `gcloud-monitor` `opt` or on each individual \"metric\" as a factory `opt`. This option throttles metric reports to the interval specified in ms.\n\nCumulative time series metrics batching can be grouped by passing `opt.groupBy` function. For example, if you want to batch cumulative metric data grouped by label `name`: `groupBy: (timeSeriesItem) => (timeSeriesItem.metric.labels && timeSeriesItem.metric.labels.name)`\n\n## License\nMIT\n","generator-lnvbase":"# generator-lnvbase [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][daviddm-image]][daviddm-url] [![Coverage percentage][coveralls-image]][coveralls-url]\n> Lenovo eService MobileBase\n\n## Installation\n\nFirst, install [Yeoman](http://yeoman.io) and generator-lnvbase using [npm](https://www.npmjs.com/) (we assume you have pre-installed [node.js](https://nodejs.org/)).\n\n```bash\nnpm install -g yo\nnpm install -g generator-lnvbase\n```\n\nThen generate your new project:\n\n```bash\nyo lnvbase\n```\n\n## Getting To Know Yeoman\n\n * Yeoman has a heart of gold.\n * Yeoman is a person with feelings and opinions, but is very easy to work with.\n * Yeoman can be too opinionated at times but is easily convinced not to be.\n * Feel free to [learn more about Yeoman](http://yeoman.io/).\n\n## License\n\nMIT Â© [kevin]()\n\n\n[npm-image]: https://badge.fury.io/js/generator-lnvbase.svg\n[npm-url]: https://npmjs.org/package/generator-lnvbase\n[travis-image]: https://travis-ci.org/qingfengyiyang/generator-lnvbase.svg?branch=master\n[travis-url]: https://travis-ci.org/qingfengyiyang/generator-lnvbase\n[daviddm-image]: https://david-dm.org/qingfengyiyang/generator-lnvbase.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/qingfengyiyang/generator-lnvbase\n[coveralls-image]: https://coveralls.io/repos/qingfengyiyang/generator-lnvbase/badge.svg\n[coveralls-url]: https://coveralls.io/r/qingfengyiyang/generator-lnvbase\n","generator-mlewand-node":"# generator-mlewand-node [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][daviddm-image]][daviddm-url]\n> \n\n## Installation\n\nFirst, install [Yeoman](http://yeoman.io) and generator-mlewand-node using [npm](https://www.npmjs.com/) (we assume you have pre-installed [node.js](https://nodejs.org/)).\n\n```bash\nnpm install -g yo\nnpm install -g generator-mlewand-node\n```\n\nThen generate your new project:\n\n```bash\nyo mlewand-node\n```\n\n## Getting To Know Yeoman\n\n * Yeoman has a heart of gold.\n * Yeoman is a person with feelings and opinions, but is very easy to work with.\n * Yeoman can be too opinionated at times but is easily convinced not to be.\n * Feel free to [learn more about Yeoman](http://yeoman.io/).\n\n## License\n\nMIT Â© [Marek Lewandowski]()\n\n\n[npm-image]: https://badge.fury.io/js/generator-mlewand-node.svg\n[npm-url]: https://npmjs.org/package/generator-mlewand-node\n[travis-image]: https://travis-ci.org/mlewand/generator-mlewand-node.svg?branch=master\n[travis-url]: https://travis-ci.org/mlewand/generator-mlewand-node\n[daviddm-image]: https://david-dm.org/mlewand/generator-mlewand-node.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/mlewand/generator-mlewand-node\n","generator-moproj":"#generater - moproj\n\n\n### åæåå¤\n* `yoman`ç¸å³å®è£ï¼`npm install -g yo bower grunt-cli gulp`\n* è¿è¡æ£æ¥å½ä»¤ï¼`yo doctor`\n* å¦ææ£æ¥ç»ææé®é¢ï¼åæ ¹æ®`yo doctor`çç»æï¼æ·»å `yo`ä¸ºå¨å±åéã\n\n\n\n### å®è£\n* å®è£èææ¶ï¼`npm install generater-moproj -g`\n* åå»ºæ°çé¡¹ç®æä»¶å¤¹ï¼yomanèææ¶ä½¿ç¨ï¼`yo moproj`\n\n\n\n### å¦ä½ä½¿ç¨\n\n\n1. gruntå¯å¨ï¼`grunt`\n2. å¾çåç¼©ï¼`grunt imagemin`ââ åç¼©imgæä»¶å¤¹ä¸çæä»¶ã\n3. buildåå¸ï¼`grunt build`\n\nPSï¼grunt linveloadçå¬ææ`scssãjsãhtml`æä»¶ï¼`scss`æä»¶ä¼èªå¨ç¼è¯ä¸º`css`æä»¶ã\n\n\n\n### js/cssåç¼©block\n\nex - `css`ï¼\n\n\t<!-- build:css button/base.min.css -->\n\t<link rel=\"stylesheet\" href=\"base1.css\">\n\t<link rel=\"stylesheet\" href=\"base2.css\">\n\t<!-- endbuild -->\n\n* ä¸è¿°ä»£ç ä¼å°`base1`,`base2`ä¸¤ä¸ªcssæä»¶åå¹¶ãåç¼©ä¸ºbase.min.cssã\n* è¯¥æ®µä»£ç ï¼ä¼èªå¨è¢«æ¿æ¢ä¸º` <link rel=\"stylesheet\" href=\"base.min.css\">`\n* æ³¨æï¼å¨çæcssæä»¶è·¯å¾åï¼éè¦å°ç»ä»¶ååä¸ï¼ä¾å¦`button/base.min.css`ã\n\n\nex - `js`:\n\n\t<!-- build:js button/c.min.js -->\n \t<script src=\"a.js\"></script>\n  \t<script src=\"b.js\"></script>\n  \t<!-- endbuild -->\n  \n* ä¸è¿°ä»£ç ä¼å°`a.js`,`b.js`ä¸¤ä¸ªjsæä»¶åå¹¶ãåç¼©ä¸ºc.min.jsã\n* è¯¥æ®µä»£ç ï¼ä¼èªå¨è¢«æ¿æ¢ä¸º` <script src=\"c.min.js\"></script>`\n* æ³¨æï¼å¨çæjsæä»¶è·¯å¾åï¼éè¦å°ç»ä»¶ååä¸ï¼ä¾å¦`button/c.min.js`ã\n\n**æ³¨æï¼ææcss/jsæä»¶åéè¦å¸è½½blockåä¸­ï¼å¦åbuildåå¸å®ï¼distæä»¶å¤¹ä¸­ä¼æ²¡æè¯¥æä»¶ã**\n\n### ç»ä»¶ç»æ\n* æ°çç»ä»¶ï¼éè¦å¨`src`æä»¶å¤¹ä¸­æ°å»ºç¸å³ç»ä»¶æä»¶å¤¹ï¼js/cssæä»¶åç´æ¥å¨ç»ä»¶æä»¶å¤¹ä¸­ï¼ä¸ååå»º`js/css`ç­å­æä»¶å¤¹ã\n* ç»ä»¶ç¸å³å¾çï¼å¦æå¾çä¸å¤ï¼å»ºè®®ç´æ¥æ¾å¨ç»ä»¶æä»¶å¤¹ä¸­å³å¯ãå¦æå¾çæä»¶è¾å¤ï¼åéè¦åå»º`img`å­æä»¶å¤¹ã\n* **ç»ä»¶çæä»¶ç»æï¼åè§`popup`- å¼¹å±ç»ä»¶ã**\n\n\n\n### å¶ä»\n\n* bowerï¼ä½¿ç¨`bower`ï¼æ¥ç®¡çjsæ¡æ¶ç­èµæºæä»¶ççæ¬ç­ï¼ä¾èµæä»¶è§éç½®æä»¶`bower.json`ï¼å®è£çèµæºæä»¶å®è£è§`bower_components`ã\n* npméåï¼å»ºè®®ä½¿ç¨cnpméåï¼ä»¥ä¿è¯npmå®è£é¡ºçï¼è®¾ç½®æ¹æ³å¦ä¸ï¼\n  * `npm config set registry https://registry.cnpmjs.org`\n  * `npm get registry`\n \n* winä¸æ¨èä½¿ç¨å½ä»¤è¡å·¥å·ï¼[cmder](http://bliker.github.io/cmder/)","generator-react-web":"# React web\n> Yeoman generator for creating interactive web sites with React and Redux + Webpack, Flow, ES7+, Babel, Yarn, npm Scripts, i18n, Redux Saga, SCSS, CSS Modules\n\n[![Build Status](https://travis-ci.org/KarolAltamirano/generator-react-web.svg?branch=master)](https://travis-ci.org/KarolAltamirano/generator-react-web)\n[![Dependency Status](https://david-dm.org/KarolAltamirano/generator-react-web.svg)](https://david-dm.org/KarolAltamirano/generator-react-web)\n[![npm version](https://badge.fury.io/js/generator-react-web.svg)](https://badge.fury.io/js/generator-react-web)\n\n## About generator\nGenerator helps you initialize new interactive web site project.\n\n## Features\n- Flow\n- React\n- Redux\n- i18n\n- Redux Saga\n- Webpack\n- ES7+\n- Babel\n- Yarn\n- npm Scripts\n- CSS Modules\n- SCSS\n\n## Getting Started\n### Requirements\n- NodeJS v6.0 or newer\n- npm v3.10 or newer\n- yarn (to install run `npm install --global yarn`)\n- yo (to install run `npm install -g yo`, to update run `npm update -g yo`)\n- flow-typed (to install run `npm install -g flow-typed`)\n\n### Installation\n- Install: `npm install -g generator-react-web`\n- Run: `yo react-web`\n\n### Build\n- Run: `yarn run start` to start dev server and watch for file changes\n- Run: `yarn run build` to build for production\n- For more information about the boilerplate, see its [README.md](https://github.com/KarolAltamirano/generator-react-web/blob/master/app/templates/README.md)\n","get-visible-rect":"## getVisibleRect(el) ##\n\n[![Build Status](https://travis-ci.org/insidewarehouse/get-visible-rect.svg?branch=master)](https://travis-ci.org/insidewarehouse/get-visible-rect)\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/iw-get-visible-rect.svg)](https://saucelabs.com/u/iw-get-visible-rect)\n\nNote: tests are failing, because they only run in PhantomJS on travis for now - enabling real browsers soon.\n\nWhen the element is inside the viewport, `getVisibleRect()` returns:\n```\n{\n\tvisibleHeight,\n\tvisibleWidth,\n\theight,\n\twidth,\n\t\n\t// these positions are relative to the elements top/left\n\ttop,\n\tbottom,\n\tleft,\n\tright\n}\n```\n\nWhen element is outside the viewport, `visibleHeight` and `visibleWidth` will be `0`, \nwhile `top`/`bottom`/`left`/`right` will be `undefined`.\n\nMy primary purpose for building this (and not using something else) is to calculate the visible percentage of the \nelement. `visibleHeight` is actually `bottom - top` and `visibleWidth` is `right - left`. This means that the visible\npercentage is `(visibleHeight * visibleWidth) / (height * width)`.\n","git-check":"# Git Check\n\n Micro module to check git is installed or not\n\n```\nnpm install git-check\n```\n\n## Usage\n\n```javascript\nvar hasGit = require('git-check');\n if (!hasGit) {\n        throw new Error('Git is not installed');\n   }\n```\n\n","git-subpath":"## Intro\n\nThis package helps in the installation of monorepo modules in subpaths from a git repository with `npm`, which is [currently not supported](https://github.com/npm/npm/issues/2974).\n\nThis is done by wrapping the contents of a targetted subpath, and pushing with a tag to the same git repository, where it is now the root path and where the npm installation path can be referenced from. For a private repository, these tags remain private for access only within your organisation.\n\n## Installation and Usage\n\nTo install:\n```\nnpm install --save-dev git-subpath\n```\n\nTo use, ensure that you have a subpath in your monorepo repository that you want to tag for use in your other projects. Prepare the module name and the tag as well. The full command to create the tag should be like the following:\n```\ngit-subpath -p packages/Helper -m Helper -t v0.0.1\n```\n- `p` flag represents the path for the targetted installation\n- `m` flag represents the module name that will be used as part of the tag namespace\n- `t` flag represents the version number or id variant that will be used as part of the tag namespace\n\nUpon invoking the above command successfully, the log should reveal the installation instructions at the end\n```\n=========================\n\nExample install paths (switch out protocol as long as the remote + tag works for you) -\n HTTPS install: \"npm install --save git+https://git@github.com:user/repo.git#v0.0.1-Helper\"\n SSH   install: \"npm install --save git+ssh://git@github.com:user/repo.git#v0.0.1-Helper\"\n```\n\n## Help\n\nInvoke the following after the module has been installed\n```\ngit-subpath --help\n```\nInstructions such as the following should appear\n```\nUsage: git-subpath [options]\n\nOptions:\n  -V, --version         output the version number\n  -p, --path <value>    Target path to submit\n  -m, --module <value>  Module name\n  -t, --tag <value>     Tag version of module\n  -h, --help            output usage information\n```","glob-cp":"# glob-cp\ncopy files and directories with [glob](https://github.com/isaacs/node-glob) patterns and [variables](https://github.com/intesso/glob-resolve).\n\n# install\n\n```bash\nnpm install glob-cp\n```\n\n# use\n\n```js\n\nvar cp = require('glob-cp');\n\n// async\nvar src = __dirname + '/fixtures/:module/public';\nvar dest = __dirname + '/public/:module';\nvar options = {recursive: true, force: true};\ncp(src, dest, options, function(err) {\n    if (err) console.error(err);\n});\n\n```\n\n```js\n//or sync version\ncp.sync('fixtures/:module/public', 'public/:module');\n\n```\n\n > you can use the whole [glob](https://github.com/isaacs/node-glob) syntax in the `src` and `dest` pattern, as well as the `glob-var` variables starting with a colon `:`\n\n# functions\n\n## cp(srcPattern, destPattern [,options] ,callback)\nasync glob cp version.\n\n## cp.sync(srcPattern, destPattern [,options])\nsync glob cp version.\n\n\n# options\n\n```js\n// options with the following default values:\nvar options = {\n\n  // recusively copy files\n  recursive: false,\n\n  // remove destination before operation\n  force: false\n\n};\n```\n\n# test\n```bash\nnpm test\n```\n\n# license\nMIT\n\n\n","gmaps-signature":"# Google Maps Signature\n[![Travis CI](https://img.shields.io/travis/urbanmassage/gmaps-signature.svg)](https://travis-ci.org/urbanmassage/gmaps-signature)\n[![NPM](https://img.shields.io/npm/v/gmaps-signature.svg)](https://www.npmjs.com/package/gmaps-signature)\n[![Codecov](https://img.shields.io/codecov/c/github/urbanmassage/gmaps-signature.svg)](https://codecov.io/github/urbanmassage/gmaps-signature/)\n[![VersionEye](https://www.versioneye.com/nodejs/gmaps-signature/badge.svg)](https://www.versioneye.com/nodejs/gmaps-signature/)\n\nSigns Google Maps requests. Works with both general and Google Maps for Work.\n\n## Installation\n\nWith npm...\n\n```\nnpm install --save gmaps-signature\n```\n\n## Usage\n\n```js\n// Load the module\nvar GS = require('gmaps-signature');\n\n// Add your Google Maps key\nGS.GOOGLE_API_KEY = 'MY KEY';\n// Or for Google Maps API for Work\nGS.GMAPS_CLIENT_ID = 'MY CLIENT ID';\nGS.GMAPS_PRIVATE_KEY = 'MY PRIVATE KEY';\n\n// and then you can start signing urls...\nvar url = GS.sign('https://maps.googleapis.com/maps/api/geocode/json?address=New+York');\n```\n\n### Env variables\n\nYou can also set the required keys using env variables. Like so:\n\n```\nGOOGLE_API_KEY=THIS_IS_MY_KEY node .\nGMAPS_CLIENT_ID=THIS_IS_MY_ID GMAPS_PRIVATE_KEY=THIS_IS_MY_PK node .\n```\n","grateful":"# grateful\n\n> Say thanks for your npm dependencies by starring them on Github.\n\n![grateful](https://media.giphy.com/media/3o752hPnFZbGI6LV72/giphy.gif)\n\n## Installation\n\n`npm install -g grateful`\n\n## Usage\n\n1. Generate a new Github token with the \"public_repo\" permission at\n   https://github.com/settings/tokens.\n2. Run the following command on your CLI: `export GITHUB_TOKEN=YOUR_TOKEN_HERE`.\n3. Just run `grateful` inside any project you want to be grateful for.\n\n## Notes\n\nHeavily inspired by https://crates.io/crates/cargo-thanks.\n","grunt-cdnify_v2":"# grunt-cdnify\n\n[![NPM version][npm-image]][npm-url] [![Linux Build Status][travis-image]][travis-url] [![Windows Build Status][appveyor-image]][appveyor-url] [![Dependency Status][depstat-image]][depstat-url] [![devDependency Status][devDepstat-image]][devDepstat-url]\n\n> Converts local URLs to CDN ones.\n\n## What it does\nThe task looks through your specified files for URLs to rewrite, in the following places:\n\n* `<img data-src=\"____\">`\n* `<img src=\"____\">`\n* `<link rel=\"apple-touch-icon\" href=\"____\">`\n* `<link rel=\"icon\" href=\"____\">`\n* `<link rel=\"shortcut icon\" href=\"____\">`\n* `<link rel=\"stylesheet\" href=\"____\">`\n* `<script src=\"____\"></script>`\n* `<source src=\"____\"></source>`\n* `background-image: url(____);` in your CSS (including inside `<style>` tags in your HTML)\n\nSee options below for how it modifies them.\n\n## Options\nYou should set either `base` **or** `rewriter` (not both).\n\n### base\nFor the most common use case, just set a `base` string for your URLs â e.g., `'//cdn.example.com/'`.\nThe cdnify task will automatically search for all **local** URLs in your files, and prefix them with this string.\n(It will automatically avoid double-slashes.)\n\nExample:\n\n```js\ncdnify: {\n  someTarget: {\n    options: {\n      base: '//cdn.example.com/stuff/'\n    },\n    files: [{\n      expand: true,\n      cwd: 'app',\n      src: '**/*.{css,html}',\n      dest: 'dist'\n    }]\n  }\n}\n```\n\n### rewriter\nFor more control, you can specify a custom `rewriter` function instead. In this case,\nthe task will search for **all** URLs (not just local ones) and run your function on each one.\nYour function should return the new value.\n\nExample:\n\n```js\ncdnify: {\n  someTarget: {\n    options: {\n      rewriter: function (url) {\n        if (url.indexOf('data:') === 0) {\n          return url;            // leave data URIs untouched\n        } else {\n          return url + '?12345'; // add query string to all other URLs\n        }\n      }\n    },\n    files: [{\n      expand: true,\n      cwd: 'app',\n      src: '**/*.{css,html}',\n      dest: 'dist'\n    }]\n  }\n}\n```\n\n### css (boolean)\nWhether to modify CSS. Applies to both `*.css` files and `<style>` elements. Default: `true`.\n\n### html (boolean/object)\nWhether/how to modify HTML. Defaults to `true`, which will update HTML according to this standard config:\n\n```js\n{\n  'img[data-src]': 'src',\n  'img[src]': 'src',\n  'link[rel=\"]': 'href',\n  'link[rel=\"shortcut icon\"]': 'href',\n  'link[rel=icon]': 'href',\n  'link[rel=stylesheet]': 'href',\n  'script[src]': 'src',\n  'source[src]': 'src',\n  'video[poster]': 'poster'\n}\n```\n\nThat is, any elements matching the CSS selector `img[src]` will have their `src` attributes cdnified, etc.\n\nTo customise this config, you can set the `html` option to an object of custom `selector:attribute` pairs.\nThese will be added to the standard set shown above â if you want to **not** use one of the standard pairs,\nyou have to explicitly override it with `false`.\n\nFor example:\n\n```js\noptions: {\n  html: {\n    'img[ng-src]': 'ng-src', // cdnify angular images\n    'script[src]': false     // don't cdnify script tags\n  }\n}\n```\n\n\n---\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\n[npm-url]: https://npmjs.org/package/grunt-cdnify\n[npm-image]: https://img.shields.io/npm/v/grunt-cdnify.svg?style=flat-square\n\n[travis-url]: http://travis-ci.org/callumlocke/grunt-cdnify\n[travis-image]: https://img.shields.io/travis/callumlocke/grunt-cdnify.svg?style=flat-square&label=Linux%20build\n\n[appveyor-url]: https://ci.appveyor.com/project/callumlocke/grunt-cdnify/branch/master\n[appveyor-image]: https://img.shields.io/appveyor/ci/callumlocke/grunt-cdnify/master.svg?style=flat-square&label=Windows%20build\n\n[depstat-url]: https://david-dm.org/callumlocke/grunt-cdnify\n[depstat-image]: https://img.shields.io/david/callumlocke/grunt-cdnify.svg?style=flat-square\n\n[devDepstat-url]: https://david-dm.org/callumlocke/grunt-cdnify\n[devDepstat-image]: https://img.shields.io/david/dev/callumlocke/grunt-cdnify.svg?style=flat-square#info=devDependencies\n","grunt-rm":"grunt-rm\n========\n\nGrunt multi-task that removes specified files.\n\n## Installation\n\n```\nnpm install grunt-rm\n```\n\nFor more information see grunt.js documentation:\nhttps://github.com/cowboy/grunt/blob/master/docs/toc.md\n\n## Config\n\n```javascript\nrm: {\n  foo: 'js/*/**',\n  bar: [\n    'css/reset.css',\n    'css/style.css'\n  ]\n}\n```","grunt-sk-imgsize":"# grunt-inline-imgsize\n\n> Inject width and height for img tags\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-inline-imgsize --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-inline-imgsize');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"inlineImgSize\" task\n\nUse the **inlineImgSize** task for injecting the width and height properties of `<img>` tags. This enhances the user experience because fewer repaints are required as a page's assets are loaded in.\n\n### Overview\nIn your project's Gruntfile, add a section named `inlineImgSize` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  inlineImgSize: {\n  }\n})\n```\n\n### Options\n\n#### options.encoding\nType: `String`\nDefault value: `'utf8'`\n\nThe encoding of the file contents.\n\n### Usage Examples\n\n#### Basic Image Size Inlining\n\n```js\ngrunt.initConfig({\n  inlineImgSize: {\n    files: {\n      src: ['index.html', 'contact.html']\n    }\n  }\n})\n```\n\n#### Custom Options\n\n```js\ngrunt.initConfig({\n  inlineImgSize: {\n    options: {\n    },\n    files: [{\n      expand: true,\n      cwd: 'src',\n      src: ['*.html'],\n      dest: 'dest/'\n    }]\n  }\n})\n```\n","grunt-thrall":"grunt-thrall\n============\n\n[![Build Status](https://travis-ci.org/Xiphe/Thrall.svg?branch=master)](https://travis-ci.org/Xiphe/Thrall)\n[![Code Climate](https://codeclimate.com/github/Xiphe/Thrall/badges/gpa.svg)](https://codeclimate.com/github/Xiphe/Thrall)\n[![Test Coverage](https://codeclimate.com/github/Xiphe/Thrall/badges/coverage.svg)](https://codeclimate.com/github/Xiphe/Thrall/coverage)\n[![Dependency Status](https://david-dm.org/Xiphe/Thrall.svg)](https://david-dm.org/Xiphe/Thrall)\n\nGrunt task orchestrator/warchief\n\n> \"The beginning of wisdom is the statement 'I do not know.' The person who cannot make that statement is one who will never learn anything. And I have prided myself on my ability to learn.\" - Thrall in Cycle of Hatred, page 77\n\n\nWhy?\n----\n\nWhen a project uses lots of Grunt Tasks, the `Gruntfile.js` tends to get really messy and\nhard to maintain. \n\nWith [grunt-angular-toolbox](https://github.com/Jimdo/grunt-angular-toolbox), we tried to extract this \ncomplexity into a toolbox that handles all grunt related things for a main project.\n\nThis works fine, but the toolbox itself was still spaghetti-code-ish and hard to understand\nand maintain for most users. \n\nThrall contains all orchestration logic and is 100% test covered. This allows consuming packages\nto focus on task definition without having to worry to much about configuration loading and\noption handling.\n\n\nUsage\n----- \n\nInstall the module:\n\n`npm install grunt-thrall --save-dev`\n\n\n```js\n// gruntfile.js\nmodule.exports = function(grunt) {\n\tvar thrall = require('grunt-thrall');\n\t\n\tthrall.init({\n\t\t/* see config */\t\n\t});\t\n};\n```\n\nThis can be used for any project or grunt plugin. See:\n\n - [Example project](https://github.com/Xiphe/Thrall/tree/master/sample_project)\n - [Grunt Plugin](https://github.com/Jimdo/grunt-angular-toolbox)\n\n\nAPI\n---\n\n### `thrall.init(config)`\n\n - Load all grunt plugins, specified in the projects `package.json`\n (heavily inspired by [load-grunt-tasks](https://github.com/sindresorhus/load-grunt-tasks))\n - merge defaults, provided in `config` with settings is `grunt.config`\n - Search for custom tasks, specified in the `tasks/` directory\n - Dynamically load configuration for grunt plugins used by those tasks from `config/` directory\n\n\nConfig\n------\n\n### Required _string_: `dir`\n\n```js \nthrall.init({dir: __dirname + 'myTasks' /* ,... */ });\n```\n\nThe basic directory for custom tasks and grunt plugin configuration.\n\nExpects subdir `tasks/` for custom tasks and `config/` for grunt plugin configuration\nto be present.\n\n\n### Required _string_: `basePath`\n\n```js \nthrall.init({basePath: __dirname /* ,... */ });\n```\n\nThe projects base path.\n\nUsed to findup `node_modules/grunt-*/tasks/*` when auto-loading grunt plugins.\n\n\n### Required _object_: `grunt`\n\n```js \nthrall.init({grunt: grunt /* ,... */ });\n```\n\nThe currently running grunt instance.\n\n\n### _string_: `name`\n\n```js \nthrall.init({name: 'myProject' /* ,... */ });\n```\n\nDefaults to `config.pkg.name` project name from `package.json`\n\nThis is also the key for custom configuration that is merged with the defaults\n\n```js\n// pseudo-code\nvar config = _.merge(config.getDefaults(), grunt.config(config.name));\n```\n\n### _boolean_: `loadDevDependencies`\n\n```js \nthrall.init({loadDevDependencies: false /* ,... */ });\n```\n\nDefault: `true`\n\nWhether or not to include `devDependencies` from `package.json` when auto-loading grunt plugins.\n\n\n### _boolean_: `loadDependencies`\n\n```js \nthrall.init({loadDependencies: true /* ,... */ });\n```\n\nDefault: `false`\n\nWhether or not to include `dependencies` from `package.json` when auto-loading grunt plugins.\n\n\n### _object_: `module`\n\n```js \nthrall.init({\n\tmodule: {\n\t\tmyHelper: ['factory', require('./helpers/myHelper')]\n\t}\n\t/* ,... */ \n});\n```\n\nDefault: `{}`\n\nTask definitions, grunt plugin configurations and getDefaults are being invoked using \n[node-di](https://github.com/vojtajina/node-di) providing basic node modules.\n\nWhen you need a custom helper, it can be registered here.\n\nSee [DI](#DI) for further informations.\n\n\n### _function_: `getDefaults`\n\n```js \nthrall.init({\n\tgetDefaults: function(/* di here */) {\n\t\treturn {\n\t\t\tfoo: 'bar'\n\t\t}\n\t}\n\t/* ,... */ \n});\n```\n\nDefault configuration will be merged and be available as `grunt.config(config.name)`.\n\n\nTask Factories\n--------------\n\nevery file in `config.dir`/`tasks/` is expected to export a factory function, returning \na task definition object. The name will be generated by the path relative to the tasks dir.\n\nFactories are being invoked using node-di, see [DI](#DI) for further informations.\n\n### Naming\n\n```js\n// tasks/foo/bar.js\nmodule.exports = function(/* di here */) {\n\treturn {};\n};\n```\n\nwill register task `foo:bar` that, when can be called with `grunt foo:bar` and does nothing.\n\n### _string/array_: `description`\n\n```js\nmodule.exports = function() {\n\treturn {\n\t\tdescription: [\n\t\t\t'this is the bar tasks',\n\t\t\t'it will foo.'\n\t\t]\n\t\t/* ... */\n\t};\n};\n```\n\nTask description, which is displayed by `grunt --help`.\nArrays will be `.join('\\n')`-ed.\n\n\n### _array_: `run`\n\nSubtasks to run by this task.\n\n```js\n// tasks/foo/bar.js\nmodule.exports = function() {\n\treturn {\n\t\t/* ... */\n\t\trun: [\n\t\t\t'jshint:src',\n\t\t\t'mochaTest'\n\t\t]\n\t};\n};\n```\n\nWill load for grunt plugin configurations from\n`config/jshint/src.js` and `config/mochaTest.js` (see \n[Configuration Factories](#configuration-factories))\nand execute both subtasks when `grunt foo:bar` is called.\n\n\n#### runIf blocks\n\nA runIf block can add tasks to the cue based on grunt configuration.\n\n```js\nmodule.exports = function() {\n\treturn {\n\t\t/* ... */\n\t\trun: [\n\t\t\t'other:task',\n\t\t\t{\n\t\t\t\tif: 'coverage.enabled',\n\t\t\t\ttask: ['coverage']\n\t\t\t},\n\t\t\t{\n\t\t\t\tif: [\n\t\t\t\t\t(null != 1),\n\t\t\t\t\t'foo.bar'\n\t\t\t\t],\n\t\t\t\ttask: 'report',\n\t\t\t\telse: 'say:goodbye'\n\t\t\t}\n\t\t]\n\t};\n};\n```\n\nIn the above example:\n\n - the `coverage` task will only run when `grunt.config.get('coverage.enabled')` returns a truthy value.\n - the `report` task will run when `grunt.config.get('foo.bar')` is truthy, \n   (and `null != 1` which is of cause true, too)\n - when `grunt.config.get('foo.bar')` is falsy the `say:goodbye` task runs instead\n\nAll expressions and config values in an `if`-array need to be true in order to run the task.\nThere is no `OR` operator or `!`-negation.\n\nThis works well with [options](#object-options).\n\n\n### _object_: `options`\n\nMap CLI options, environment variables and grunt modifiers to grunt config.\n\n```js\n// tasks/foo/bar.js\nmodule.exports = function() {\n\treturn {\n\t\t/* ... */\n\t\toptions: {\n\t\t\tcoverage: 'coverage.enabled'\n\t\t}\n\t};\n};\n```\n\n`grunt foo:bar --coverage` will set the `grunt.config('coverage.enabled')` to true.\n\n```js\n// tasks/foo/bar.js\nmodule.exports = function() {\n\treturn {\n\t\t/* ... */\n\t\toptions: {\n\t\t\t'demo-port': {\n\t\t\t\tenv: 'DEMO_PORT',\n\t\t\t\talias: 'port',\n\t\t\t\tkey: 'foo.demoPort'\n\t\t\t}\n\t\t}\n\t};\n};\n```\neither of \n\n - `grunt foo:bar --demo-port=7000`\n - `grunt foo:bar --demo=7000`\n - `DEMO_PORT=7000 grunt foo:bar`\n\nwill set the `grunt.config('foo.demoPort')` to 7000.\n\n```js\n// tasks/foo/bar.js\nmodule.exports = function() {\n\treturn {\n\t\t/* ... */\n\t\toptions: {\n\t\t\tcoverage: {\n\t\t\t\tgrunt: ':coverage',\n\t\t\t\tkey: 'coverage.enabled'\n\t\t\t}\n\t\t}\n\t};\n};\n```\n\n`grunt foo:bar:coverage` will set `grunt.config('coverage.enabled')` to true.\n\n\n### _function_: `runFilter`\n\nFilter that may manipulate the tasks cue before execution.\n\n```js\n// tasks/foo/bar.js\nmodule.exports = function() {\n\treturn {\n\t\t/* ... */\n\t\trun: ['foo', 'bar'],\n\t\trunFilter: function(tasks, args) {\n\t\t\tif (args[0] === 'baz') {\n\t\t\t\ttasks.shift();\n\t\t\t}\n\t\t\treturn tasks;\n\t\t}\n\t};\n};\n```\n\nIn this case, when `grunt foo:bar:baz` is called, only the `foo` subtask will run.\n\n\nConfiguration Factories\n-----------------------\n\nevery file in `config.dir`/`config/` is expected to export a factory function, returning \na configuration object. The name has to match the path that this configuration will \nbe placed at, in the grunt config.\n\nFactories are being invoked using node-di, see [DI](#DI) for further informations.\n\n```js\n// config/jshint/src.js\nmodule.exports = function(/* di here */) {\n\treturn {\n\t\toptions: {\n\t\t\tignores: ['**/*.coffee'],\n\t\t\tjshintrc: true,\n\t\t},\n\t\tsrc: [\n\t\t\t'<%= my.src.files.js %>'\n\t\t]\n\t};\n};\n```\n\nThis is similar to the following standard configuration, only that it's\nsplit in to a lot of small files, with is more easy to maintain for big projects. \n\n```js\ngrunt.initConfig({\n\tjshint: {\n\t\tsrc: {\n\t\t\toptions: {\n\t\t\t\tignores: ['**/*.coffee'],\n\t\t\t\tjshintrc: true,\n\t\t\t},\n\t\t\tsrc: [\n\t\t\t\t'<%= my.src.files.js %>'\n\t\t\t]\n\t\t}\n\t}\n});\n```\n\n\nDI\n--\n\n[`getDefaults`](#function-getdefaults), [Task Factories](#task-factories) and \n[Configuration Factories](#task-factories) are being invoked with a \n[node-di](https://github.com/vojtajina/node-di) module, providing the following\nservices:\n\n - `_`: [lodash](https://github.com/lodash/lodash)\n - `cliOptions`: CLI Options using [minimist](https://github.com/substack/minimist)\n - `del`: [del](https://github.com/sindresorhus/del)\n - `findupSync`: [node-findup-sync](https://github.com/cowboy/node-findup-sync)\n - `fs`: node module\n - `getobject`: [node-getobject](https://github.com/cowboy/node-getobject)\n - `glob`: [node-glob](https://github.com/isaacs/node-glob)\n - `grunt`: currently running grunt instance\n - `mkdirp`: [node-mkdirp](https://github.com/substack/node-mkdirp) \n - `path`: node module\n - `merged`: (`getDefaults` ONLY) See [merged callback](#merged-callback)\n - `name`: (Task Factories ONLY) name of the task\n - `rootTask`: (Task Factories ONLY) the name of the task that has actually been called\n\n\n#### merged callback\n\n```js\n/* ... */\ngetDefaults: function(merged) {\n\tmerged(function(mergedConfig) {\n\t\tmergedConfig.foo = 'baz';\n\t});\n\treturn {foo: 'bar'};\n}\n```\n\n\n## [MIT License](https://raw.github.com/Xiphe/thrall/master/LICENSE)\n","gspawn":"GSpawn - Library to invoke external tools for Node.js\n=================================\n\nhttps://madebits.github.io/#r/nodejs-gspawn.md","gulp-es6-node-module":"Gulp ES6 Node Module\n=======\n\nOverview\n------\n\nA gulp wrapper for the es6-node-module library, intended to support es6-es5 builds.\n\nUsage\n------\n\nInstall:\n\n```\nnpm install gulp-es6-node-module\n```\n\nBasic usage:\n\n```javascript\ngulp.task('compileES5', function(){\n  return gulp.src('lib/**/*.js')\n    .pipe(nodePackage())\n    .pipe(getDependencies({\n      includeSeed: true\n    }))\n    .pipe(toCJS())\n    .pipe(gulp.dest('dist/es5'));\n});\n```\n\nOther options for the ```getDependencies``` function include ```shallow``` (defaults to ```false```) which specifies whether to perform\nshallow dependency resolution or deep/recursive (default).\n\nThe ```nodePackage``` function has a single option ```packageDir``` (defaults to ```process.cwd()```).\n","gulp-sloc2":"gulp-sloc2\r\n=========\r\n\r\nA port of the [grunt-sloc](https://github.com/rhiokim/grunt-sloc) plugin for gulp with some minor changes.\r\n\r\n## Usage\r\n\r\nFirst install the `gulp-sloc` plugin as a development dependency:\r\n\r\n```shell\r\nnpm install --save-dev gulp-sloc\r\n```\r\n\r\nThen, add it to your `gulpfile.js`:\r\n\r\n```javascript\r\nvar sloc = require('gulp-sloc2');\r\n\r\ngulp.task('sloc', function(){\r\n  gulp.src(['scripts/*.js'])\r\n    .pipe(sloc());\r\n});\r\n```\r\n\r\nThis would output the following:\r\n\r\n```shell\r\n[gulp] -------------------------------\r\n[gulp]         physical lines : 135\r\n[gulp]   lines of source code : 97\r\n[gulp]          total comment : 5\r\n[gulp]             singleline : 5\r\n[gulp]              multiline : 0\r\n[gulp]                  empty : 33\r\n[gulp]\r\n[gulp]   number of files read : 2\r\n[gulp]            strict mode\r\n[gulp] -------------------------------\r\n```\r\n\r\n## API\r\n\r\n### sloc(options)\r\n\r\n#### options.tolerant\r\nType: `Boolean`\r\nDefault: `false`\r\n\r\nSet as false to analyze only files with a subset of popular extensions. true to analyze files with any file extension. The default is false.\r\n\r\nIf true, the SLOC will be executed on all of the files specified, regardless of file extension. With `tolerant` set to `false`, or unspecified, only supported file extensions will be analyzed.\r\n\r\n#### options.reportType\r\nType: `String`\r\nDefault: `stdout`\r\n\r\nIt will generate a JSON file with the SLOC analysis results and sends it further downstream. Use with the `reportFile` option if you want to customize the file name. You may want to pipe to the `gulp.dest()` method to write it out to specified folder. Example:\r\n\r\n```javascript\r\nvar sloc = require('gulp-sloc2');\r\n\r\ngulp.task('sloc', function(){\r\n  gulp.src(['lib/**/*.js'])\r\n    .pipe(sloc({\r\n      reportType: 'json'\r\n    }))\r\n    .pipe(gulp.dest('./reports/'));\r\n});\r\n```\r\n\r\nWould output the following in the file `./reports/sloc.json`:\r\n\r\n``` js\r\n{\"total\":138,\"source\":100,\"comment\":5,\"single\":5,\"block\":0,\"empty\":33,\"file\":2}\r\n```\r\n\r\n#### options.reportFile\r\nType: `String`\r\nDefault: `sloc.json`\r\n\r\n The name of the file which would contain you'd like to output the JSON file. Use with the `json` as `reportType`. Ignored if used with the `stdout` report type. Example:\r\n\r\n``` js\r\nvar sloc = require('gulp-sloc2');\r\n\r\ngulp.task('sloc', function(){\r\n  gulp.src(['./test/**/*.js'])\r\n    .pipe(sloc({\r\n      reportType: 'json',\r\n      reportFile: 'testSloc.json'\r\n    }))\r\n    .pipe(gulp.dest('./reports/'));\r\n});\r\n```\r\n\r\nWould output the sloc results in the file `./reports/testSloc.json`.\r\n\r\n## Supported Languages and Extensions\r\n\r\n- JavaScript - `js`\r\n- CoffeeScript - `coffee` or `coffeescript`\r\n- C / C++ - `c` or `cc`\r\n- Python - `py`\r\n- Java - `java`\r\n- PHP - `php`\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","h-vue-ui":"# h-vue-UI","habrok":"habrok [![Build Status](https://travis-ci.org/kurttheviking/habrok-js.svg?branch=master)](https://travis-ci.org/kurttheviking/habrok-js) [![Coverage Status](https://coveralls.io/repos/github/kurttheviking/habrok-js/badge.svg?branch=master)](https://coveralls.io/github/kurttheviking/habrok-js?branch=master)\n======\n\n[Promises/A+](https://promisesaplus.com/), [request](https://www.npmjs.com/package/request)-powered, [boom](https://www.npmjs.com/package/boom)-enabled, JSON-first HTTP API client with automatic retry\n\n\n## Quick start\n\n### Prerequisites\n\n- [Node.js LTS (8+)](https://nodejs.org/)\n- [npm](https://www.npmjs.com/)\n\n### Installing\n\nInstall with `npm`:\n\n```sh\nnpm install habrok --save\n```\n\n### Example\n\n```js\nconst Habrok = require('habrok');\n\nconst habrok = new Habrok();\n\nhabrok.request({\n  method: 'GET',\n  uri: 'https://api.github.com/repositories'\n})\n.then(console.log);\n```\n\n```json\n{\n  \"statusCode\": 200,\n  \"headers\": {\n    \"content-length\": \"4477\",\n    \"content-type\": \"application/json; charset=utf-8\",\n    \"etag\": \"6ffc6a0dbbe2613e4d8b3f7444e5c604\",\n    ...\n  },\n  \"body\": [\n    {\n      \"id\": 1296269,\n      \"private\": false,\n      \"owner\": {\n        \"id\": 1,\n        \"login\": \"octocat\",\n        \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n        ...\n      },\n      \"name\": \"hello-World\",\n      \"full_name\": \"octocat/hello-world\",\n      \"description\": \"Octocat's first repo!\",\n      \"url\": \"https://api.github.com/repos/octocat/hello-world\",\n      ...\n    },\n    ...\n  ]\n}\n```\n\n\n## API\n\n### `Habrok` (Constructor)\n\n#### Definition\n\n```js\nHabrok([configuration])\n```\n\n#### Required arguments\n\n*None*\n\n#### Optional arguments\n\n- `configuration`: `Object` with one or more of the below properties:\n\n| Property | Type | Description | Default |\n| :------- | :--- | :---------- | :------ |\n| `disableAutomaticJson` | `Boolean` | Disable JSON headers and request/response bodies | `false` |\n| `disableCustomHeaders` | `Boolean` | Disable request headers added by Habrok | `false` |\n| `disableRetryEconnreset` | `Boolean` | Disable retry for connection reset errors | `false` |\n| `retries` | `Number` | Number of times to retry a failed request | `5` |\n| `retryMinDelay` | `Number` | Minimum milliseconds to wait before retrying a request | `100` |\n| `retryMaxDelay` | `Number` | Maximum milliseconds to wait before retrying a request | *None* |\n| `retryCodes` | `Array<Number>` | \tHTTP status codes that trigger a retry | `[429, 502, 503, 504]` |\n\nBy default, each request includes the following headers (which can be prevented with `disableCustomHeaders`):\n\n- `User-Agent`: `habrok/[MAJOR.MINOR.PATCH]`, versioned according to [`package.json`](./package.json) (e.g. `habrok/1.0.0`)\n- `X-Node-Platform`: Directly from [`process.platform`](https://nodejs.org/api/process.html#process_process_platform) (e.g. `linux`)\n- `X-Node-Version`: Derived from [`process.version`](https://nodejs.org/api/process.html#process_process_version) (e.g. `6.11.1`)\n\nThe retry logic follows exponential backoff, summarized as:\n\n```\nMINIMUM(retryMaxDelay, retryMinDelay * (attempt ** 2))\n```\n\nWith the default `configuration`, a failing request observes a delay sequence of `100`, `400`, `900`, and `1600` milliseconds before rejecting with an error.\n\n#### Returns\n\nA Habrok HTTP API Client instance.\n\n#### Examples\n\nConstruct a default client:\n\n```js\nconst Habrok = require('habrok');\n\nconst habrok = new Habrok();\n```\n\nConstruct a client with a minimum retry delay of 250 milliseconds:\n\n```js\nconst Habrok = require('habrok');\n\nconst habrok = new Habrok({ retryMinDelay: 250 });\n```\n\nConstruct a client that does not send Habrok-generated headers:\n\n```js\nconst Habrok = require('habrok');\n\nconst habrok = new Habrok({ disableCustomHeaders: true });\n```\n\n### `Habrok#request`\n\n#### Definition\n\n```js\nhabrok.request(req[, options])\n```\n\n#### Required arguments\n\n- `req`: `Object`, a [request-compatible](https://www.npmjs.com/package/request#requestoptions-callback) object\n\n#### Optional arguments\n\n- `options`: `Object` with one or more of the below properties:\n\n| Property | Type | Description | Default |\n| :------- | :--- | :---------- | :------ |\n| `attempt` | `Number` | Integer indicating current request sequence number | *None* |\n\nGenerally, `attempt` is not needed. The internal retry engine will pass the current attempt count into the next request. Override only as necessary &ndash; e.g. in cases where the retry logic should be bypassed.\n\n#### Returns\n\nA `Promise` that resolves to an `Object` with the following properties:\n\n- `statusCode`: `Number`, the HTTP status code provided in the response\n- `headers`: `Object`, HTTP headers (lower-cased) and their values provided in the response\n- `body`: `Any`, the JSON-parsed response body (or the raw body if `disableAutomaticJson` was set)\n\nThe `Promise` is rejected with a [Boom](https://www.npmjs.com/package/boom)-wrapped error if an HTTP error occurs. The `Promise` is rejected with a generic `Error` if an error is returned by the underlying request library (usually from [http.ClientRequest](https://nodejs.org/api/http.html#http_class_http_clientrequest)).\n\n#### Examples\n\nSend a `GET` request:\n\n```js\nhabrok.request({\n  method: 'GET',\n  uri: 'https://api.viki.ng/longships'\n})\n```\n\nSend a `POST` request:\n\n```js\nhabrok.request({\n  method: 'POST',\n  uri: 'https://api.viki.ng/longships',\n  json: {\n    name: 'Oseberg'\n  }\n})\n```\n\n\n## Development\n\n### Debug\n\nThe [debug](https://www.npmjs.com/package/debug) module is used for runtime logging. Omit the `DEBUG` environment variable to squelch all logging. Set `DEBUG` to the desired level (e.g. `DEBUG=habrok`) to restrict logging to a desired service. Or, use `DEBUG=*` to get all debug output from everywhere, including dependencies.\n\n```sh\nDEBUG=habrok* node index\n```\n\n### Tests\n\nTo run the unit tests:\n\n```sh\nnpm test\n```\n\nThis project maintains ~100% coverage of statements, branches, and functions. To determine unit test coverage:\n\n```sh\nnpm run coverage\n```\n\n### Contribute\n\nPRs are welcome! PRs must pass unit tests and linting prior to merge. PRs must not reduce unit coverage. For bugs, please include a failing test which passes when your PR is applied. To enable a git hook that runs `npm test` prior to pushing, `cd` into your repo and run:\n\n```sh\ntouch .git/hooks/pre-push\nchmod +x .git/hooks/pre-push\necho \"npm test\" > .git/hooks/pre-push\n```\n\n### Versioning\n\nThis project follows [semantic versioning](http://semver.org/). See the [changelog](CHANGELOG.md) for release information.\n\n\n## License\n\n- This module is licensed under the [ISC License](./LICENSE)\n- The underlying `boom` module is licensed under the [BSD 3-Clause License](https://github.com/hapijs/boom/blob/8b35a4c5f6dc706f3396cfed3f5cc5f60a5f6eb1/LICENSE)\n- The underlying `debug` module is licensed under the [MIT License](https://github.com/visionmedia/debug/blob/a45d4a0239f071634804dd7901dd33b0d0d407c9/LICENSE)\n- The underlying `has` module is licensed under the [MIT License](https://github.com/tarruda/has/blob/535c5c8ed1dc255c9e223829e702548dd514d2a5/LICENSE-MIT)\n- The underlying `request` module is licensed under the [Apache 2.0](https://github.com/request/request/blob/643c43ab7be269a1efaa080ff05a18fff3f64cd7/LICENSE)\n\n\n## Etymology\n\nFrom [GrÃ­mnismÃ¡l](https://en.wikipedia.org/wiki/Gr%C3%ADmnism%C3%A1l), [Stanza 44](http://www.voluspa.org/grimnismal41-45.htm):\n\n> The best of trees must Yggdrasil be,\n> Skithblathnir best of boats;\n> Of all the gods is Odin the greatest,\n> And Sleipnir the best of steeds;\n> Bifrost of bridges, Bragi of skalds,\n> Habrok of hawks, and Garm of hounds.\n\nHabrok, data-in-flight at its best.\n","head-require":"\n# HeadRequire.js\n\nExtension for head.js to use resource loader like require.js\n\n## Feature\n\n- Set main.js in script element's data-main attribute\n- Multiple main.js available now\n- Use `head.require()` to load resources\n- Grunt task to compile them to a file\n\n\n## Basic Usage\n\n### Resource Loader\n\n```html\n<script src=\"scripts/head.js\"></script>\n<script src=\"scripts/head-require.js\" data-main=\"scripts/main.js\"></script>\n```\n\"scripts/main.js\" like this : \n\n```javascript\nhead.require(\n\t\"the/path/to/foojs\",\n\t\"the/path/to/bar.js\",\n\t\"the/path/to/baz.js\"\n\t\"the/path/to/initialize.js\"\n);\n```\n&raquo; [Learn more about head-require.js](doc/head-require.md)\n\n\n### Grunt Task to Compile\n\nExample :\n\n```javascript\ngrunt.initConfig({\n\theadRequire : {\n\t\tdist : {\n\t\t\toptions : {},\n\t\t\tfiles : { \"the/path/to/dest.js\" : \"the/path/to/main.js\" }\n\t\t}\n\t}\n});\n```\n\n&raquo; [Learn more about Grunt task](doc/grunt-task.md)\n\n### CHANGE LOG\n\n&raquo; [Change Log](doc/changelog.md)\n\n-----\n\n## Author\n\nmach3\n\n- [Website](http://www.mach3.jp)\n- [Blog](http://blog.mach3.jp)\n- [Twitter](http://twitter.com/mach3ss)\n","hello-sugarlabs-module-v0.0.3":"# hello-sugarlabs\n## My Google Code-in Sugarlabs task\n## Jorrell Templeton\n","homebridge-pirf":"# homebridge-pirf\nHomebridge Raspberry Pi Radio Frequency plugin\n","html-inline-assets-loader":"# html-inline-assets-loader\n\nèªå¨å¤ç html æä»¶ä¸­çç¸å¯¹å¼ç¨ css/js/html èµæº æä»¶ï¼ç´æ¥åèå° html æä»¶ä¸­ï¼æèèªå¨ç¼è¯å¹¶æ·è´å° dist ç®å½\n\n# useage\n\n```js\nconst configureHtmlLoader = () => {\n  return {\n    test: /\\.(html|njk|nunjucks)$/,\n    use: [\n      resolve('html-loader'),\n      // èªå¨å¤çhtmlä¸­çç¸å¯¹è·¯å¾å¼ç¨ css/js/htmlæä»¶\n      resolve('html-inline-assets-loader'),\n      {\n        loader: resolve('nunjucks-html-loader'),\n        options: {\n          // Other super important. This will be the base\n          // directory in which webpack is going to find\n          // the layout and any other file index.njk is calling.\n          searchPaths: ['./src'],\n        },\n      },\n    ],\n  };\n};\n```\n\nHTML file\n\n```html\n<!--auto transform and copy-->\n<link rel=\"stylesheet\" href=\"./assets/css/reset.css\"/>\n<script href='./assets/rem.js'></script>\n\n<!--inline code-->\n<link rel='html' href=\"./assets/html/meta.html\"/>\n<link rel=\"stylesheet\" href=\"./assets/css/reset.css?_inline\"/>\n<script href='./assets/rem.js?_inline'></script>\n\n<!-- only process.env.NODE_ENV==='production' -->\n<script href='./assets/rem.js?_dist'></script>\n```\n\n","http-live-simulator":"# HTTP Live Simulator\n\n`http-live-simulator` is a simple http file server for local development written in Node.JS. It is similar, for instance, to python's `http.server` module or node's `http-server`, but with one major difference: It adds a random time delay of 200-500 milliseconds before serving each request in order to simulate a live hosted environment where such delays are a common occurrence.\n\n## Installation:\n\n`npm install -g http-live-simulator`\n\n## Usage:\n\n```\n$ http-live\nServing Directory: /your/current/path\nPort 8080\nDelay: 200-500ms\n```\n\nYou can change the behaviour of http live server with following optional arguments:\n\n```\nOptional arguments:\n  -h, --help            Show this help message and exit.\n  -v, --version         Show program's version number and exit.\n  -p PORT, --port PORT  Port number for running the server\n  -m MIN_DELAY, --min-delay MIN_DELAY\n                        Minimum delay in milliseconds\n  -x MAX_DELAY, --max-delay MAX_DELAY\n                        Maximum delay in milliseconds\n```\n\n## Uninstallation:\n\n`npm uninstall -g http-live-simulator`\n","hyperdoc":"# Hyperdoc\n\nA distributed blogging and documentation tool powered by the [Dat](https://www.datproject.org/) protocol.\n\nIt extends the functionality of the [Dat client](https://github.com/datproject/dat), and allows you to create a blog or wiki that could be synchronized over the p2p network and served by webbrowser.\n\n## Installation\n\n> npm install -g hyperdoc\n\n## Blog App\n\nCreate your blog:\n\n> hyperdoc create --type=blog\n\nEdit the blog post in the `_posts` directory in markdown format with name like `_posts/2018-01-01-first-blog.md`\n\nCommit new files to dat:\n\n> hyperdoc commit\n\nGenerate index.json for the blog:\n\n> hyperdoc index\n\nServe the blog:\n\n> hyperdoc serve\n\nThen open `http://localhost:3300/` to see the blog.\n\n## Doc App\n\nCreate your doc app:\n\n> hyperdoc create --type=doc\n\nJust edit any markdowns in the repository, and `README.md` would be the home page.\n\nCommit new files to dat:\n\n> hyperdoc commit\n\nServe the doc:\n\n> hyperdoc serve\n\nThen open `http://localhost:3300/` to see it.\n\n\n## Acknowledgement and License\n\nThe documentation app is inspired from and based on [docsify](https://docsify.js.org/), which is a lean and beautiful alternative to gitbook. The blog theme is based on [scribble](https://github.com/muan/scribble).\n\nMIT License\n\n","ia-web-components":"![Built With Stencil](https://img.shields.io/badge/-Built%20With%20Stencil-16161d.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE5LjIuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA1MTIgNTEyIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTEyOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI%2BCjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI%2BCgkuc3Qwe2ZpbGw6I0ZGRkZGRjt9Cjwvc3R5bGU%2BCjxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik00MjQuNywzNzMuOWMwLDM3LjYtNTUuMSw2OC42LTkyLjcsNjguNkgxODAuNGMtMzcuOSwwLTkyLjctMzAuNy05Mi43LTY4LjZ2LTMuNmgzMzYuOVYzNzMuOXoiLz4KPHBhdGggY2xhc3M9InN0MCIgZD0iTTQyNC43LDI5Mi4xSDE4MC40Yy0zNy42LDAtOTIuNy0zMS05Mi43LTY4LjZ2LTMuNkgzMzJjMzcuNiwwLDkyLjcsMzEsOTIuNyw2OC42VjI5Mi4xeiIvPgo8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNDI0LjcsMTQxLjdIODcuN3YtMy42YzAtMzcuNiw1NC44LTY4LjYsOTIuNy02OC42SDMzMmMzNy45LDAsOTIuNywzMC43LDkyLjcsNjguNlYxNDEuN3oiLz4KPC9zdmc%2BCg%3D%3D&colorA=16161d&style=flat-square)\n\n# Stencil Component Starter\n\nThis is a starter project for building a standalone Web Component using Stencil.\n\nStencil is also great for building entire apps. For that, use the [stencil-app-starter](https://github.com/ionic-team/stencil-app-starter) instead.\n\n# Stencil\n\nStencil is a compiler for building fast web apps using Web Components.\n\nStencil combines the best concepts of the most popular frontend frameworks into a compile-time rather than run-time tool.  Stencil takes TypeScript, JSX, a tiny virtual DOM layer, efficient one-way data binding, an asynchronous rendering pipeline (similar to React Fiber), and lazy-loading out of the box, and generates 100% standards-based Web Components that run in any browser supporting the Custom Elements v1 spec.\n\nStencil components are just Web Components, so they work in any major framework or with no framework at all.\n\n## Getting Started\n\nTo start building a new web component using Stencil, clone this repo to a new directory:\n\n```bash\ngit clone https://github.com/ionic-team/stencil-component-starter.git my-component\ncd my-component\ngit remote rm origin\n```\n\nand run:\n\n```bash\nnpm install\nnpm start\n```\n\nTo build the component for production, run:\n\n```bash\nnpm run build\n```\n\nTo run the unit tests for the components, run:\n\n```bash\nnpm test\n```\n\nNeed help? Check out our docs [here](https://stenciljs.com/docs/my-first-component).\n\n\n## Naming Components\n\nWhen creating new component tags, we recommend _not_ using `stencil` in the component name (ex: `<stencil-datepicker>`). This is because the generated component has little to nothing to do with Stencil; it's just a web component!\n\nInstead, use a prefix that fits your company or any name for a group of related components. For example, all of the Ionic generated web components use the prefix `ion`.\n\n\n## Using this component\n\n### Script tag\n\n- [Publish to NPM](https://docs.npmjs.com/getting-started/publishing-npm-packages)\n- Put a script tag similar to this `<script src='https://unpkg.com/my-component@0.0.1/dist/mycomponent.js'></script>` in the head of your index.html\n- Then you can use the element anywhere in your template, JSX, html etc\n\n### Node Modules\n- Run `npm install my-component --save`\n- Put a script tag similar to this `<script src='node_modules/my-component/dist/mycomponent.js'></script>` in the head of your index.html\n- Then you can use the element anywhere in your template, JSX, html etc\n\n### In a stencil-starter app\n- Run `npm install my-component --save`\n- Add an import to the npm packages `import my-component;`\n- Then you can use the element anywhere in your template, JSX, html etc\n","iagent":"DIY keep-alive agent for NodeJS\n","id-pool":"# IdPool\nWith IdPool, you can reserve ids that remain unique until released.\n\n## Installation\n```sh\nnpm install id-pool\n```\n\n## Usage\n```js\nconst pool = new IdPool()\npool.on('release', id => {\n  console.log('release', id)\n})\n\nconst first = pool.reserve()\nconst second = pool.reserve()\n\nsetImmediate(function () {\n  pool.release(first)\n  pool.release(second)\n})\n```\n---\n\n### Copyright (c) 2019 Stephen Belanger\n#### Licensed under MIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","initialize":"# initialize [![stability][0]][1]\n[![NPM version][2]][3] [![Downloads][4]][5] [![js-standard-style][6]][7]\n\nCreate a new repo with sane defaults. Provides all the tools needed to create\na unix style module.\n\n## Installation\n```sh\n$ npm install -g initialize\n```\n\n## Usage\n```txt\ninitialize - generate a fresh package\n\nUsage: initialize [options]\n\nOptions:\n  -h, --help        Output usage information\n  -v, --version     Output version number\n  -u, --user        Override user with organization\n  -d, --directory   Specify output directory\n\nExamples:\n  $ initialize            # generate package in `./`\n  $ initialize -d ./dir   # generate package in `./dir`\n  $ initialize -u npm     # generate package for `npm`\n\nDocs: https://github.com/yoshuawuyts/initialize\nBugs: https://github.com/yoshuawuyts/initialize/issues\n```\n\n## .npmrc\nRequires npm to be configured:\n```sh\n# required\nnpm config set init.author.name \"Your Name\"\nnpm config set init.author.email \"me@example.com\"\nnpm config set init.author.github \"your-github-handle\"\n\n# optional, defaults to your github\nnpm config set init.author.url \"http://your-site.com/\"\n```\n\n## Variables\nThe following variables are used in the templates:\n```txt\nname          Name of the package\nvarName       Name of package usable as JS var\ndescription   Description of the package\ntags          Package tags\nuser          Logged in user (github)\nrealName      User's real name\ndate.year     Current year\ndate.month    Current month\ndate.day      Current day\ndate.date     Current date\n```\n\n## See Also\n- [initialize-cli][10]\n- [initialize-project][11]\n- [initialize-subpackage][12]\n\n## License\n[MIT](https://tldrlegal.com/license/mit-license)\n\n[0]: https://img.shields.io/badge/stability-stable-brightgreen.svg?style=flat-square\n[1]: https://nodejs.org/api/documentation.html#documentation_stability_index\n[2]: https://img.shields.io/npm/v/initialize.svg?style=flat-square\n[3]: https://npmjs.org/package/initialize\n[4]: http://img.shields.io/npm/dm/initialize.svg?style=flat-square\n[5]: https://npmjs.org/package/initialize\n[6]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\n[7]: https://github.com/feross/standard\n[10]: http://github.com/yoshuawuyts/initialize-cli\n[11]: http://github.com/yoshuawuyts/initialize-project\n[12]: http://github.com/yoshuawuyts/initialize-subpackage\n","instagrammer":"# instagrammer\n\n[![license](https://img.shields.io/github/license/khaledalam/instagrammer.svg)](LICENSE)\n[![npm downloads](https://img.shields.io/npm/dt/instagrammer.svg)](https://www.npmjs.com/package/instagrammer)\n\n<img src=\"https://www.dpreview.com/files/p/articles/8326097332/icon.png\" width=\"300\">\n\nNodeJS module NPM package that helps to scrape and load instagram profile media and useful information.\n\n## Disclamer\n\nInstagram has gone to great lengths to prevent scraping and other unauthorized access to their public content. This module is dependant on the markup the public-facing instagram.com. Should that change this module might also stop working as intended. It also only loads the 12 posts that are displayed on first-load without following pagination to load more images. You should take this into consideration when deciding whether this module will work for you.\n\n## Installation\n\n`npm i instagrammer`\n\n## Usage\n\nnote: there are some limitation of loading instagram data, but it still usefull in most cases :)\n\n### Get recent profile posts and media details\n\n```\nconst IG = require(\"instagrammer\");\nconst instagramUsername = \"AsdamPodcast\";\n\nIG.profile(instagramUsername).then((data) => {\n    const recentPost = data[0];\n    console.log(recentPost);\n});\n```\n\nExample output response:\n\n```json\n{\n  \"node\": {\n    \"id\": \"2289200113878789071\",\n     \"shortcode\": \"B_E31_3h2vP\",\n     \"dimensions\": { \"height\": 746, \"width\": 480 },\n     \"display_url\":\n      \"https://scontent-hbe1-1.cdninstagram.com/v/t51.2885-15/e35/93603649_2611993775714054_5259993384970767717_n.jpg?_nc_ht=scontent-hbe1-1.cdninstagram.com&_nc_cat=102&_nc_ohc=jGCK60y7RwEAX8boRhD&oh=7844ea993f6f6888f5f3ff3fdbdc6fba&oe=5EA6D0E0\",\n     \"gating_info\": null,\n     \"fact_check_overall_rating\": null,\n     \"fact_check_information\": null,\n     \"media_preview\":\n      \"ABsqrbh6j86XI9axYx3NaCK6A44A78Y/z+NAFo8Um4etRShiSoyRgencA1Txj/8AXQBFEhPYke1aDLtTazEKenH8z/8AWqJL4KMY/D/GmfbWkbDgFTxj/PegCfeQGAYkkD8hVINT1fbkDryM9gKqbjQBY8tP8n/61KQuABgY/Mn6/wAh0/Gm0UAAUDp3pNi0tFAH/9k=\",\n     \"owner\": { \"id\": \"32593640820\", \"username\": \"asdampodcast\" },\n     \"is_video\": true,\n     \"accessibility_caption\": null,\n     \"edge_media_to_caption\": { \"edges\": [Array] },\n     \"edge_media_to_comment\": { \"count\": 0 },\n     \"comments_disabled\": false,\n     \"taken_at_timestamp\": 1587114237,\n     \"edge_liked_by\": { \"count\": 0 },\n     \"edge_media_preview_like\": { \"count\": 0 },\n     \"location\": null,\n     \"thumbnail_src\":\n      \"https://scontent-hbe1-1.cdninstagram.com/v/t51.2885-15/e35/c0.133.480.480a/93603649_2611993775714054_5259993384970767717_n.jpg?_nc_ht=scontent-hbe1-1.cdninstagram.com&_nc_cat=102&_nc_ohc=jGCK60y7RwEAX8boRhD&oh=4b4cc5a6edeeef7111fbaa1b18952569&oe=5EA6DFD5\",\n     \"thumbnail_resources\": [ [Object], [Object], [Object], [Object], [Object] ],\n     \"felix_profile_grid_crop\": null,\n     \"video_view_count\": 9\n  }\n}\n```\n\n### Get post comments\n\n```\nconst IG = require(\"instagrammer\");\nconst post_id = \"B-oJxU9g0ST\";\n\nIG.comments(post_id).then((data) => {\n    const recentPost = data[0];\n    console.log(recentPost);\n});\n```\n\nExample output response:\n\n```json\n[ { \"node\":\n     { \"id\": \"18018715516279713\",\n       \"text\": \"@asdampodcast\",\n       \"created_at\": 1587829462,\n       \"did_report_as_spam\": false,\n       \"owner\": [Object],\n       \"viewer_has_liked\": false,\n       \"edge_liked_by\": [Object],\n       \"is_restricted_pending\": false,\n       \"edge_threaded_comments\": [Object] } },\n  { \"node\":\n     { \"id\": \"17914398049420103\",\n       \"text\": \"for git\",\n       \"created_at\": 1587829582,\n       \"did_report_as_spam\": false,\n       \"owner\": [Object],\n       \"viewer_has_liked\": false,\n       \"edge_liked_by\": [Object],\n       \"is_restricted_pending\": false,\n       \"edge_threaded_comments\": [Object] } } ]\n```\n","iobroker.onkyo-vis":"![Logo](admin/onkyo.png)\n# ioBroker.onkyo-vis\n\n[![NPM version](http://img.shields.io/npm/v/iobroker.onkyo-vis.svg)](https://www.npmjs.com/package/iobroker.onkyo-vis)\n[![Downloads](https://img.shields.io/npm/dm/iobroker.onkyo-vis.svg)](https://www.npmjs.com/package/iobroker.onkyo-vis)\n[![Travis-CI](https://travis-ci.org/Eisbaeeer/ioBroker.onkyo-vis.svg?branch=master)](https://www.travis-ci.org/Eisbaeeer/ioBroker.onkyo-vis)   \n[![NPM](https://nodei.co/npm/iobroker.onkyo-vis.png?downloads=true)](https://nodei.co/npm/iobroker.onkyo-vis/)\n\n\nThis adapter allows control of Onkyo AVRs using the EISCP protocol.\n\nIt uses node-eiscp: https://github.com/tillbaks/node-eiscp\n\nFor sending commands, there is a special state \"RAW\". Writes to that state\ntrigger only RAW commands like the known EISCP Excel files\nAs example of an EISCP RAW command in the form of \"PWR01\".\n\n## VIS compatibility\nThe adapter will convert the given values in Onkyo readable values and sends it directly to the receiver and vice versa.\nIn this way you can set the value of e.g. volume with a slider or input box. If you control your receiver via IR you will get this reply also on this object.\nAs an second example, you can use a boolean switch button to control the power-button of the receiver.\n\n! Please do only use the Object \"RAW\" to send own commands. Please do not check the \"Ack\" flad, otherwise the command will not be working.\n\n|OBJECT WHO CAN USED IN VIS   |ISCP  |Input value         |Example  |Description                           |\n|-----------------------------|:----:|:------------------:|:-------:|-------------------------------------:|\n|Volume_Zone1                 |MVL   |1-99 decimal        |20       |\"Master volume (Zone 1)\"              |                \n|Volume_Zone2    \t            |ZVL   |1-00 decimal        |22       |\"Volume zone2 (Zone 2)\"               |\n|Audio_Mute_Zone1             |AMT   |true/false or 00/01 |00       |\"Mute Zone1\"                          |\n|Audio_Mute_Zone2             |ZMT   |true/false or 00/01 |01       |\"Mute Zone2\"                          |\n|Input_Select_Zone1           |SLI   |00-FF hex           |2B       |\"See excel list EISCP for hex values\" |\n|Input_Select_Zone2           |SLZ   |00-FF hex           |2F       |\"See excel list EISCP for hex values\" |\n|Internet_Radio_Preset_Zone1  |NPR   |1-40 decimal        |12       |\"Internet radio preset number Zone 1\" |\n|Internet_Radio_Preset_Zone2  |NPZ   |1-40 decimal        |10       |\"Internet radio preset number Zone 2\" |\n|Tuner_Preset_Zone1           |PRS   |1-30 decimal        |08       |\"Tuner preset number Zone 1\"          |\n|Tuner_Preset_Zone2           |PRZ   |1-30 decimal        |11       |\"Tuner preset number Zone 2\"          |\n|Power_Zone1                  |PWR   |true/false or 00/01 |00 or 0  |\"Power Zone 1\"                        |\n|Power_Zone2                  |ZPW   |true/false or 00/01 |01 or 1  |\"Power Zone 2\"                        |\n\nAnother special state maintained by the adapter is \"connected\". It's a boolean\nshowing whether node-eiscp is currently connected to a receiver.\n\nExample of VIS view\n![VIS](admin/onkyo-vis.png)     \n\n## ToDo\n* Adding new admin to adapter\n\n## ChangeLog\n### 1.0.5\n* (Eisbaeeer) Changed structure\n* (Eisbaeeer) Added Object RAW to send own commands\n\n### 1.0.4 (2018.07.24)\n* (Eisbaeeer) Cleaned program\n* (Eisbaeeer) Fix logging\n\n### 1.0.2 (2018.02.28)\n* (Eisbaeeer) Changed name of adapter\n* (Eisbaeeer) Added testing of adapter in travis\n\n### 1.0.0 (2017.11.28)\n* (Eisbaeeer) Add max volume settings to zone1 and zone2.   \n* (Eisbaeeer) changed objects to switch\n* (Eisbaeeer) moved adapter to \"multimedia\"\n* (Eisbaeeer) cleaned log outputs\n\n### 0.1.20 (2016.03.29)\n* (Eisbaeeer) Add checkbox in settings for VIS objects. Volumes can be set in\n  decimal. Power states, mute states, etc. are now usable with VIS buttons.\n\n### 0.1.12 (2016.02.25)\n* (installator) Fix power state\n\n### 0.1.11 (2016.01.13)\n* (installator) Fix regexp error\n\n### 0.1.10\n* (installator) For command CTL sets Center Level -12 - 0 - +12\n\n### 0.1.9\n* (installator) change power to system-power\n\n### 0.1.8\n* (installator) fix values to control power and enable using of 1 and 0\n\n### 0.1.7\n* (bluefox) fix creation of specific states (twice)\n\n### 0.1.6\n* (bluefox) fix creation of specific states\n\n### 0.1.5\n* (bluefox) fix node-eiscp package\n\n### 0.1.4\n* (bluefox) add debug outputs\n\n### 0.1.1\n* (bluefox) replace git with tarball\n\n### 0.1.0\n* (bluefox) update adapter for new concept\n\n### 0.0.4\n* (owagner) use verify_commands=false, to be able to send high-level commands to unknown AVR models\n\n### 0.0.3\n* (owagner) allow setting of states other than \"command\". This will trigger a high level\n  command with the state name being set to the new value. Note that this will fail for\n  many newer models, as they are not yet properly represented in node-eiscp's\n  command table. Use the raw command in that case\n* send some initial queries upon connect to get basic state information from the AVR\n\n### 0.0.2\n* (owagner) support node-eiscp's Autodiscovery mechanism\n* (owagner) updated README, notably removing bogus reference to single instancing\n\n### 0.0.1\n* (owagner) initial version\n\n","ip-slider":"# IP Slider\n\n![Built With Stencil](https://img.shields.io/badge/-Built%20With%20Stencil-16161d.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE5LjIuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA1MTIgNTEyIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTEyOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI%2BCjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI%2BCgkuc3Qwe2ZpbGw6I0ZGRkZGRjt9Cjwvc3R5bGU%2BCjxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik00MjQuNywzNzMuOWMwLDM3LjYtNTUuMSw2OC42LTkyLjcsNjguNkgxODAuNGMtMzcuOSwwLTkyLjctMzAuNy05Mi43LTY4LjZ2LTMuNmgzMzYuOVYzNzMuOXoiLz4KPHBhdGggY2xhc3M9InN0MCIgZD0iTTQyNC43LDI5Mi4xSDE4MC40Yy0zNy42LDAtOTIuNy0zMS05Mi43LTY4LjZ2LTMuNkgzMzJjMzcuNiwwLDkyLjcsMzEsOTIuNyw2OC42VjI5Mi4xeiIvPgo8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNDI0LjcsMTQxLjdIODcuN3YtMy42YzAtMzcuNiw1NC44LTY4LjYsOTIuNy02OC42SDMzMmMzNy45LDAsOTIuNywzMC43LDkyLjcsNjguNlYxNDEuN3oiLz4KPC9zdmc%2BCg%3D%3D&colorA=16161d&style=flat-square)\n[![Published on webcomponents.org](https://img.shields.io/badge/webcomponents.org-published-blue.svg)](https://www.webcomponents.org/element/ip-slider)\n\nA simple wrapper around `<input type=\"range\" />` HTML5 Element.\n\nThe range input itself has browser support about like: Firefox 23+, Safari 4+, iOS 5+, Chrome 6+, Opera 11+, IE 10+, Android 4.2+. So pretty good. This custom component should largely match that.\n\nInspired by [CSS-TRICKS](https://css-tricks.com/styling-cross-browser-compatible-range-inputs-css/).\n\n![ip slider example](https://image.ibb.co/iSZ1O0/ip-slider-ex.gif)\n\n## Install\n\n### Script tag\n\n- Put a script tag `<script src='https://unpkg.com/ip-slider@0.0.1/dist/ip-slider.js'></script>` in the head of your index.html\n- Then you can use the `<ip-slider></ip-slider>` element anywhere in your template, JSX, html etc\n\n### Node Modules\n\n- Run `npm install ip-slider --save`\n- Put a script tag similar to this `<script src='node_modules/ip-slider/dist/ip-slider.js'></script>` in the head of your index.html\n- Then you can use the `<ip-slider></ip-slider>` element anywhere in your template, JSX, html etc\n\n### In a Stencil app\n\n- Run `npm install ip-slider --save`\n- Add an import to the npm packages `import 'ip-slider';`\n- Then you can use the `<ip-slider></ip-slider>` element anywhere in your template, JSX, html etc\n\n## Using\n\nInclude `ip-slider` element in you page:\n\n```html\n<ip-slider value=\"0\" min=\"0\" max=\"0\" step=\"1\"></ip-slider>\n```\n\nAdd `disabled` attribute in order to disable.\n\nYou can get the **value** listening **oninput** event:\n\n```html\n<ip-slider value=\"10\" oninput=\"yourFunction(event)\"></ip-slider>\n```\n\nThis **event** is a **CustomEvent**:\n\n```js\nfunction yourFunction(event) {\n  console.log(event.detail.value);\n}\n```\n\nTo get the real event from input, get `srcEvent`:\n\n```js\nfunction yourFunction(event) {\n  console.log(event.detail.srcEvent);\n}\n```\n\nAnother option to get data:\n\n```js\nconst ipSlider = document.querySelector('ip-slider');\n\nconsole.log(ipSlider.value);\nconsole.log(ipSlider.min);\nconsole.log(ipSlider.max);\nconsole.log(ipSlider.step);\nconsole.log(ipSlider.disabled);\n```\n","irc-bot-maker":"# irc-bot-maker\r\nA NodeJS irc bot framework that focuses on plugin based command sets and on the easy creation of your own commands.\r\n\r\n## Installation\r\n```\r\n$ npm install irc-bot-maker\r\n```\r\n\r\n## Features\r\n- Use and stop using plugins dynamically without having to disconect.\r\n- Creating your own plugins is simple.\r\n- Connect to multiple channels at once.\r\n- Lightweight, only having a single dependency.\r\n\r\n## Usage\r\nTo create a simple bot that uses the \"examplePlugin\" plugin:\r\n```js  \r\nvar IRCBot = require(\"irc-bot-maker\");\r\nvar myBot = new IRCBot(\"myBot\");\r\n\r\nvar examplePlugin = require(\"./examplePlugin\");\r\nmyBot.use(examplePlugin());\r\n\r\nmyBot.connect(\"myServer.com\", {\r\n\tchannels: [\"#myChannel1\", \"#myChannel2\"]\r\n});\r\n```  \r\nYou can .use() new plugins even after connecting so order doesn't matter.  \r\n\r\nHere is the \"examplePlugin\" that has defines a \"ping\" and an \"echo\" command:\r\n```js\r\nmodule.exports = function() {\r\n\treturn {\r\n\t\t_plugin: \"examplePlugin\",\r\n\t\tping: {\r\n\t\t\tmodifier: \"!\",\r\n\t\t\tignorePm: false,\r\n\t\t\tcallback: function(bot, args) {\r\n\t\t\t\tbot.send(\"pong\");\r\n\t\t\t}\r\n\t\t},\r\n\t\techo: {\r\n\t\t\tmodifier: \"!\",\r\n\t\t\tignorePm: true,\r\n\t\t\tcallback: function(bot, args) {\r\n\t\t\t\tbot.send(args.join(\" \"));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n```  \r\nThis bot will now listen in chat for \"!ping\" and \"!echo 'text'\". Support for more command properties is coming soon.\r\n\r\n## API\r\n### IRCBot(nick)\r\nThe bot constructor takes the bot's nickname (required). To create a new instance simply:\r\n```js\r\nvar IRCBot = require(\"irc-bot-maker\");\r\nvar myBot = new IRCBot(\"myBot\");\r\n```\r\n\r\n### .use(plugin)\r\nTell the bot to use a plugin. The plugin param is the returned object from a plugin containing its commands. If you want to use a plugin with a file name of \"examplePlugin.js\":\r\n```js\r\nvar examplePlugin = require(\"./examplePlugin\");\r\nmyBot.use(examplePlugin());\r\n```\r\n\r\n### .unuse(plugin)\r\nTell bot to stop using a plugin. The string param is the name of the plugin that is defined by its _plugin property.\r\n```js\r\nmyBot.unuse(\"examplePlugin\");\r\n```\r\n\r\n### .connect(server, options)\r\nConnect to a server. [The possible options that can be passed into the options object can be found here.](https://node-irc.readthedocs.org/en/latest/API.html#client)\r\nIf you wanted to connect to the server myServer.com to channels myChannel1 and myChannel2:\r\n```js\r\nmyBot.connect(\"myServer.com\", {\r\n\tchannels: [\"#myChannel1\", \"#myChannel2\"]\r\n});\r\n```\r\n\r\n### .disconnect([message[, callback]])\r\nDisconnects from current server. Message will be sent when disconnecting. If message is a function it will be considered the callback instead.\r\n\r\n### .send(message[, ignorePm[, to]])\r\nSends a message to the current channel. The current channel would be the one the last message came from. Optionally you can only send it when it isn't a private message.\r\n```js\r\nmyBot.send(\"This is a message.\", true);\r\n```  \r\nThis will not send the message if the last message was a PM to the bot.  \r\nThe third param is an array that manually defines the message recipients. Channel names start with a # and are otherwise considered users.\r\n```js\r\nmyBot.send(\"This is a message.\", false, [\"user1\", \"#channel1\", \"user2\", \"#channel2\"]);\r\n```  \r\nThis message will be sent to two user: user1 and user2, and to two channels: #channel1 and #channel2\r\n\r\n### .plugins\r\nAn array listing all of the plugins currently being used by the bot.\r\n\r\n### .nick\r\nThe nickname being used by the bot. Changing this property will not alter it's nickname.\r\n\r\n### .client\r\nThis object is the interface returned by the [node irc](https://www.npmjs.com/package/irc) module. It contains the core capabilities of the bot and \r\n[is well documented here.](https://node-irc.readthedocs.org/en/latest/)\r\n\r\n## Creating Plugins\r\nPlugins need to return an object with an _plugin property which gives the name of the plugin. All other properties are commands which can be executed. These commands are objects\r\ncontaining the following properties.\r\n\r\n### modifier\r\nThe modifier is what must be before the actual command name for the callback to be called.\r\n```js\r\nping: {\r\n\tmodifier: \"!\",\r\n\tcallback: function(bot, args) {\r\n\t\tbot.send(\"pong\");\r\n\t}\r\n}\r\n```  \r\nThis will listen for the \"!ping\" command. Modifier are not restricted to a single character.\r\n```js\r\nping: {\r\n\tmodifier: \"\",\r\n\tcallback: function(bot, args) {\r\n\t\tbot.send(\"pong\");\r\n\t}\r\n}\r\n```\r\nThis will listen for just a \"ping\" command.\r\n```js\r\nping: {\r\n\tmodifier: \"!?$\",\r\n\tcallback: function(bot, args) {\r\n\t\tbot.send(\"pong\");\r\n\t}\r\n}\r\n```\r\nThis will listen for a \"!?$ping\" command.\r\n\r\n### ignorePm\r\nTell the bot not to execute a command if it is a private message. If unspecified or set to false, it will respond to commands that are private messaged to it by private\r\nmessaging the return value back. Also, this is an alias for the disablePm property.\r\n\r\n### onlyPm\r\nIf true, that command will only be executed if it is send via private message.\r\n\r\n### ignore\r\nAn array containing users or channels that will not trigger this command. Channels start with # and are otherwise considered users.\r\n\r\n### callback(bot, args)\r\nThis will be triggered once the command is used. The bot param that is passed in is the instance of your bot. You can use any of the instance methods and any changes to the bot\r\nthat is passed in will also alter your instance.  \r\n\r\nThe second param args is an array with the args used when the command was called.\r\n```\r\n!echo I'm a bot\r\n```  \r\nUsing this command in IRC will pass the following args to the callback function:\r\n```\r\n=> [\"I'm\", \"a\", \"bot\"]\r\n```\r\n\r\n## License\r\nMIT","is-json-object":"\nThis is a small package with a minimal footprint that tries to detect if an\nobject is a JSON-like value in the most generic way possible, using the\nfollowing rules for edge cases\n\n - Though not specified in the standard, root objects may be other values than plain objects\n - `NaN` and `Infinitiy` are not acceptable JSON values, as per the standard\n - Objects constructed with `Object.create(null)` will be accepted\n - Array-like objects with a `length` property will get accepted\n\nThese rules should cover most common use cases, while users requiring more\nfine-grained contol can take a look at the source (it isn't that much).\n\n## Usage\n\n```js\nconst isJSON = require('is-json-object')\n\nclass Foo {  }\n\nisJSON({ a: 1, b: 2 }) // true\nisJSON(new Foo) // false\nisJSON('test test test') // true\n```\n\n## License\n\nThe MIT License\n\n","is-kotlin-keyword":"[![npm version](https://badge.fury.io/js/is-kotlin-keyword.svg)](https://badge.fury.io/js/is-kotlin-keyword.js)  ![Dependencies](https://david-dm.org/thodorisbais/is-kotlin-keyword.svg)\n# is-kotlin-keyword\n> Determine whether a string is a Kotlin keyword.\n\n## Install\n[![https://nodei.co/npm/is-kotlin-keyword.png](https://nodei.co/npm/is-kotlin-keyword.png)](https://www.npmjs.com/package/is-kotlin-keyword)\n\n## Use\n```javascript\n// load the module\nvar isKotlinKeyword = require('index.js');\n\n// check a keyword\nisKotlinKeyword(\"while\"); // true\n```\n\n## Test\nTo execute tests, first install the project dependencies:\n\n```\n$ npm install | yarn install\n```\n\nThen, run the tests\n```\n$ npm test\n```\n","iterm_quotes":"This is just a package written in node. This outputs the random quotes from the terminal. \n\nTry node index.js ","iwe7-compiler":"\nç¼è¯æ¨¡æ¿å°æå®ä½ç½®\n\n```ts\nimport { compilerTemplate } from 'iwe7-compiler';\nconst name = './iwe7-compiler#Iwe7Template';\nconst outputPath = __dirname;\ncompilerTemplate(name, outputPath).subscribe();\n```\n","izy-server":"# izy-server\nNode.js server side components for interoperability with the Izy platform.\n\n## INSTALLATION\n\nIf you are using npm (the Node.js package manager) always ensure that your npm is up-to-date by running:\n\n`npm update -g npm`  \n\nThen use:\n\n`npm install izy-server`\n\n## USING THE TOOL\n\nIn your node server, you can intercept any url and redirect it to the izy-server by:\n\n```\n\nreturn require('izy-server')({\n\n/* config object for customizing the izy access */\n\n}).handleRequest(request, response);    \n```\n\nFor example, the following will create a very simple end point on https://localhost:3000/. It is worth mentionin that the *ui/node/direct* will convert http urls to https when called from https context, so it is important that your local server support https. Here is an example https server:\n\nGenerate the private key and certificate by: \n\n```\nopenssl genrsa 1024 > key.pem\nopenssl req -x509 -new -key key.pem > key-cert.pem\n```\n\nThen run the server: \n\n```\n\nconst port = 3000;\nconst https = require('https');\nconst fs = require('fs');\n\n var options = {\n key: fs.readFileSync('key.pem'),\n cert: fs.readFileSync('key-cert.pem')\n };\n\nconst requestHandler = (request, response) => {\n   console.log('requestHandler', request.url);\n   return require('izy-server')({}).handleRequest(request, response);\n}\n\nhttps.createServer(options, requestHandler).listen(port);\nconsole.log('Listening on port: ', port);\n\n\n```\n\nHitting https://localhost:3000/ will display the following message:\n\n```\nizyserver running. Please define processReq function to customize the behavior.\n```\n\n## NOTE\nfor more details, visit https://izyware.com\n","jackeytest":"# APIç½å³SDKä½¿ç¨æå\n\n- API æ´æ°æ¥æ: 2018-08-06 03:15:59\n- SDK åå»ºæ¥æ: 2018-08-15T11:17:21.519+08:00\n\nJackeytest - JavaScript client for jackeytest\n\n## SDKç®ä»\næ¬SDKæ¯APIç½å³æ ¹æ®æ¨èªå®ä¹çAPIæ¥å£èªå¨çæç Javascript è°ç¨ä»£ç ï¼éè¿ä½¿ç¨SDKï¼æ¨å¯ä»¥æ´æ¹ä¾¿å°è®¿é®è¾è®¯äºæä¾çAPIç½å³æå¡ãä¸é¢åæ¨ä»ç»å¦ä½ä½¿ç¨APIç½å³çSDKã\n\nä¸»è¦æä»¶çå±çº§ç»æå¦ä¸ï¼\n\n* src/ ç®å½\n  * api/ ç®å½   `åå«ç¨æ·èªå®ä¹çææAPIæ¥å£`\n  * ApiClient.js\n  * index.js\n* docs/ ç®å½      `å­æ¾APIæ¥å£ææ¡£`\n* README.md       `æ¬SDKä½¿ç¨æå`\n* swagger.json    `åå«ææAPIå®ä¹çswaggeræä»¶ï¼æ¨å¯ä»¥ç¨æ­¤æä»¶å¨`[è¿é](https://editor.swagger.io//?_ga=2.13932151.1152137434.1516190014-1544097500.1514542032#/)`è°è¯æ¨çAPI`\n\n## èº«ä»½è®¤è¯ä¸ç­¾åè®¡ç®\n\næ¨éè¦åå¤ä¸å¯¹ææå¯é¥ç¨äºç­¾åä¿¡æ¯ï¼æ¨å¯ä»¥å¨[è¾è®¯äºAPIç½å³ç®¡çæ§å¶å°](https://console.cloud.tencent.com/apigateway/key?rid=1)åå»ºå¥½ä¸å¯¹ secret_id å secret_keyã\nç¶åæ ¹æ® [ç­¾åè®¡ç®è§å](https://cloud.tencent.com/document/product/628/11819)è®¡ç®å¥½ç­¾åä¿¡æ¯ã\nç­¾åè®¡ç®æ¹æ³è¯·åè[è¿é](https://cloud.tencent.com/document/product/628/11819)ï¼å¦å¤ï¼APIææ¡£ä¸­ä¹æè¯¦ç»ä»ç»ç­¾åè®¡ç®è§ååDemoä»£ç ã\n**æ³¨æï¼`secret_id`å`secret_key`æ¯APIç½å³è®¤è¯ç¨æ·è¯·æ±åæ³æ§çå¯é¥ï¼è¿å¯¹ç§é¥å¦æä¿å­å¨å®¢æ·ç«¯ï¼è¯·å¦¥åå å¯ã** \n\nç¶åï¼æ ¹æ®è®¡ç®åºçç­¾åä¿¡æ¯ï¼æé HTTPè¯·æ±Headerï¼å¯å¨ `src/api/*.js` æä»¶ä¸­è®¾ç½®Headeråæ°ã\n\n\n## Installation\n\n### For [Node.js](https://nodejs.org/)\n\n#### npm\n\nTo publish the library as a [npm](https://www.npmjs.com/),\nplease follow the procedure in [\"Publishing npm packages\"](https://docs.npmjs.com/getting-started/publishing-npm-packages).\n\nThen install it via:\n\n```shell\nnpm install jackeytest --save\n```\n\n##### Local development\n\nTo use the library locally without publishing to a remote npm registry, first install the dependencies by changing \ninto the directory containing `package.json` (and this README). Let's call this `JAVASCRIPT_CLIENT_DIR`. Then run:\n\n```shell\nnpm install\n```\n\nNext, [link](https://docs.npmjs.com/cli/link) it globally in npm with the following, also from `JAVASCRIPT_CLIENT_DIR`:\n\n```shell\nnpm link\n```\n\nFinally, switch to the directory you want to use your jackeytest from, and run:\n\n```shell\nnpm link /path/to/<JAVASCRIPT_CLIENT_DIR>\n```\n\nYou should now be able to `require('jackeytest')` in javascript files from the directory you ran the last \ncommand above from.\n\n#### git\n\nIf the library is hosted at a git repository, e.g.\nhttps://github.com/GIT_USER_ID/GIT_REPO_ID\nthen install it via:\n\n```shell\n    npm install GIT_USER_ID/GIT_REPO_ID --save\n```\n\n### For browser\n\nThe library also works in the browser environment via npm and [browserify](http://browserify.org/). After following\nthe above steps with Node.js and installing browserify with `npm install -g browserify`,\nperform the following (assuming *main.js* is your entry file, that's to say your javascript file where you actually \nuse this library):\n\n```shell\nbrowserify main.js > bundle.js\n```\n\nThen include *bundle.js* in the HTML pages.\n\n### Webpack Configuration\n\nUsing Webpack you may encounter the following error: \"Module not found: Error:\nCannot resolve module\", most certainly you should disable AMD loader. Add/merge\nthe following section to your webpack config:\n\n```javascript\nmodule: {\n  rules: [\n    {\n      parser: {\n        amd: false\n      }\n    }\n  ]\n}\n```\n\n## Getting Started\n\nPlease follow the [installation](#installation) instruction and execute the following JS code:\n\n```javascript\nvar Jackeytest = require('jackeytest');\n\nvar api = new Jackeytest.JackeytestApi()\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.getHaha(callback);\n\n```\n\n\n## APIç¸å³æè¿°ä¿¡æ¯\njackeytest\n\n* é»è®¤ååï¼\nservice-5f7nt6zq-1255429582.ap-guangzhou.apigateway.myqcloud.com/test\n\nAll URIs are relative to *http://service-5f7nt6zq-1255429582.ap-guangzhou.apigateway.myqcloud.com/test*\n\nClass | APIåç§° | HTTP è¯·æ±æ¹æ³ä¸è·¯å¾ | æè¿°\n------------ | ------------- | ------------- | -------------\n*Jackeytest.JackeytestApi* | **getHaha** | **GET** /haha | null\n\n\n","JamSwitch":"#JamSwitch\r\nThis module is still in development mode\r\n\r\nvar jam = require('JamSwitch').run\r\n\r\n, data = ''\r\n\r\n, tour = jam(data);\r\n\r\nconsole.log(tour);\r\n","javascript-logger":"# javascript-logger\r\nConditional javascript console logger\r\n\r\n## Installation\r\n```ts\r\nnpm i javascript-logger --save\r\n```\r\n\r\n## Enabling logging/tracing by querystring\r\nAdd 'jsDebug' to your url querystring\r\n\r\n* To enable logging: http://localhost?jsDebug=1\r\n* To enable tracing: http://localhost?jsDebug=2\r\n* To enable logging and tracing: http://localhost?jsDebug=3\r\n\r\n## Enabling logging/tracing by localStorage\r\nAdd 'jsDebug' key to the localstorage object\r\n```ts\r\nlocalStorage.setItem(\"jsDebug\", \"1\") // To enable logging\r\nlocalStorage.setItem(\"jsDebug\", \"2\") // To enable tracing\r\nlocalStorage.setItem(\"jsDebug\", \"3\") // To enable logging and tracing\r\n\r\n\r\n```\r\n\r\n## jsDebug values\r\n* jsDebug = 1 enables displaying of logs in the console window\r\n* jsDebug = 2 enables displaying of trace commands in the console window\r\n* jsDebug = 3 enables displaying of log and trace commands in the console window\r\n\r\n## TypeScript\r\n```ts\r\nimport { Logger } from 'javascript-logger';\r\n\r\nLogger.log(\"Logging test 1\");\r\nLogger.log('%s, %s', var1, var2);\r\nLogger.log(`Logging test 3: ${this.properties.value1}`);\r\n\r\nLogger.trace(`Tracing test 1: ${this.properties.value1}`);\r\n```","jest-reporters":"# jest-reporters\n","jquery-custom-inview":"# jquery.inview\nCustom version of jquery.inview based on https://github.com/zuk/jquery.inview\n\n\n * author Remy Sharp\n * url http://remysharp.com/2009/01/26/element-in-view-event-plugin/\n * fork https://github.com/zuk/jquery.inview\n","jquery-scrollappear":"jQuery-ScrollAppear\n===================\n\njQuery ScrollAppear is a powerful and agile content appear on scroll (or on other event triggers) plugin for jQuery.\n\nView the plugin on the <a href=\"http://plugins.jquery.com/scrollAppear/\">jQuery Plugin Registry</a>.\n\nView full documentation at <a href=\"https://www.domsammut.com/projects/jquery-scrollappear?utm_source=GitHub&utm_medium=readme.md&utm_campaign=jQueryScrollAppear\">domsammut.com/projects/jquery-scrollappear</a>.\n\nView a live demo of the plugin at <a href=\"https://www.domsammut.com/projects/jquery-scrollappear/demo?utm_source=GitHub&utm_medium=readme.md&utm_campaign=jQueryScrollAppear\">domsammut.com/projects/jquery-scrollappear/demo</a>\n","jrm":"\r\n---\r\ntitle: æ¨¡æ¿ ææ¡£\r\ndate: 2017-6-3 14:10\r\nauthor: weizihua\r\n---\r\n\r\n\r\n## ç®å½ç»æ\r\n``` bash\r\n|\r\n|ââ .babelrc\r\n|ââ .gitignore\r\n|ââ main.js\r\n|ââ index.html  #ç½é¡µå¥å£\r\n|ââ package.json\r\n|ââ webpack.config.js\r\n|ââ README.md\r\n\r\n```\r\n\r\n## CSS--BEM\r\n> BEMçææå°±æ¯åï¼blockï¼ãåç´ ï¼elementï¼ãä¿®é¥°ç¬¦ï¼modifierï¼\r\n\r\n# npm\r\n```bash\r\nnpm whoami # npmå½åä½¿ç¨çç¨æ·\r\nnpm publish \r\nnpm publish --tag 0.1.0\r\n```\r\n","js-avl-tree":"# js-avl-tree\n\n> ä½¿ç¨ JavaScript ç¼åçå¹³è¡¡äºåæ ï¼å¯ä»¥å¿«éçæå¥ï¼å é¤åæ¥æ¾æ°æ®ã\n\n## åå®¹\n\n- [**`å®è£`**](#å®è£)\n- [**`æ¡ä¾`**](#æ¡ä¾)\n- [**`AVLTree`**](#AVLTree)\n- [**`AVLNode`**](#AVLNode)\n- [**`insert`**](#insert)\n- [**`delete`**](#delete)\n- [**`search`**](#rsearch)\n- [**`è´¡ç®`**](#è´¡ç®)\n\n\n## å®è£\n\n```bash\nnpm install js-avl-tree\n```\n\n## æ¡ä¾\n\nè¯·æ¥ç[**`example`**](https://github.com/wanls4583/js-avl-tree/tree/master/src/example)\n\n[**`online demo`**](https://blog.lisong.hn.cn/code/example/js-avl-tree/src/example/index.html)\n\n## AVLTree\n\n```javascript\n/**\n * äºåå¹³è¡¡æ \n * @param {Function} compartor å³é®å­çæ¯è¾å¨\n * @param {Boolean}  ifMerge   æ¯å¦å°æå¥çæ°æ®åå¹¶å°èç¹\n */\nfunction AVLTree(compartor, ifMerge)\n```\n\n## AVLNode\n\n```javascript\n/**\n * æå¥èç¹\n * @param  {[type]} key  èç¹çkey\n * @param  {[type]} data èç¹çæ°æ®\n * @return {Boolean}     æ¯å¦å°æå¥çæ°æ®åå¹¶å°èç¹\n */\nfunction AVLNode(key, data, ifMerge)\n```\n\n## insert\n\n```javascript\n/**\n * æå¥èç¹\n * @param  {[type]} key  èç¹çkey\n * @param  {[type]} data èç¹çæ°æ®\n * @return {Boolean}     æå¥æ¯å¦æå\n */\n_proto.insert = function(key, data)\n```\n\n## delete\n\n```javascript\n/**\n * å é¤èç¹\n * @param  {[type]}   key     éè¦å é¤çèç¹çkey\n * @param  {Boolean}  ifAll   æ¯å¦å é¤ææç¬¦åçç»ç¹ï¼é»è®¤åªå é¤ç¬¬ä¸ä¸ªæ¥æ¾å°çç»æï¼\n * @return {Array|AVLNode}    è¢«å é¤åçç¹\n */\n_proto.delete = function(key, ifAll) \n```\n\n## search\n\n```javascript\n/**\n * æ¥æ¾èç¹\n * @param  {[type]}   key     éè¦æ¥æ¾çèç¹çkey\n * @param  {Boolean}  ifAll   æ¯å¦è¿åææç»æï¼é»è®¤åªè¿åç¬¬ä¸ä¸ªæ¥æ¾å°çç»æï¼\n * @return {Array|AVLNode}    æ¥æ¾ç»æ\n */\n_proto.search = function(key, ifAll)\n```\n\n## è´¡ç®\n\næ¬¢è¿ç»åºä¸äºæè§åä¼åï¼æå¾ä½ ç `Pull Request`","js-pkg":"ï»¿## About Syncfusion JavaScript\r\n\r\nSyncfusion Essential JavaScript is a comprehensive collection of over 80+ enterprise-grade HTML5 JavaScript components for building modern web applications. It includes all the UI controls that are typically required for building line-of-business (LOB) applications including charts, grids, gantt, scheduler, diagram and much more.\r\n\r\n## Configuring Syncfusion Bower Packages\r\n\r\nRefer the Syncfusion bower packages documentation in [https://help.syncfusion.com/js/installation-and-deployment#configuring-syncfusion-bower-packages](https://help.syncfusion.com/js/installation-and-deployment#configuring-syncfusion-bower-packages)\r\n\r\n## Configuring Syncfusion NPM Packages\r\n\r\nRefer the Syncfusion npm packages documentation in [https://help.syncfusion.com/js/installation-and-deployment#configuring-syncfusion-npm-packages](https://help.syncfusion.com/js/installation-and-deployment#configuring-syncfusion-npm-packages)\r\n\r\n## Configuring Syncfusion JSPM Packages\r\n\r\nRefer the Syncfusion jspm packages documentation in [https://help.syncfusion.com/js/installation-and-deployment#configuring-syncfusion-jspm-packages](https://help.syncfusion.com/js/installation-and-deployment#configuring-syncfusion-jspm-packages)\r\n\r\n## Documentation\r\n\r\nFor complete Syncfusion JavaScript documentation, please visit [http://help.syncfusion.com/js/](http://help.syncfusion.com/js/# \"\")\r\n\r\n## Demos\r\n\r\n### Online Demos\r\n\r\nTake a look at the Syncfusion JavaScript Web and Mobile live demos.\r\n\r\n* [Web](http://js.syncfusion.com/demos/web/# \"\")\r\n\r\n* [Mobile](http://js.syncfusion.com/demos/mobile/# \"\")\r\n\r\n### Offline Demos\r\n\r\nDownload our JavaScript Platform installer from [here](https://www.syncfusion.com/downloads/javascript/).\r\n\r\n## Support\r\n\r\nIn case of any questions regarding the use of Syncfusion JavaScript, please [contact us](http://www.syncfusion.com/support/# \"\") by creating a support ticket.\r\n\r\n## Release Notes\r\n\r\nRefer the Syncfusion JavaScript Product Release Notes in [online Release Notes at Syncfusion](http://help.syncfusion.com/js/release-notes/# \"\").\r\n\r\n## License Information\r\n\r\nFor licensing information about Syncfusion JavaScript, Download the Syncfusion License Agreements from [here](https://www.syncfusion.com/content/downloads/syncfusion_license.pdf).\r\n","jsbean":"# Bean\n[![Build Status][travis-image]][travis-url]\n[![NPM version][npm-image]][npm-url]\n[![Coverage Status][coveralls-image]][coveralls-url]\n\nJavascript Object composition, inheritance and private state\n\nInspired by [Composing Software: An Introduction](https://medium.com/javascript-scene/composing-software-an-introduction-27b72500d6ea) an article on Medium by Eric Elliott\n\n## Basic Usage\n\n`Bean.roast` returns a function that is used as a factory of Javascript objects.\nIt takes as first parameter an optinal constructor and a series of object that will be composed into the final prototype and descriptors.\n```javascript\n    const Bean = require('bean')\n    \n    const Character = Object.create({\n      whoami() {\n        return `a bat called ${this.name || '...'}`\n      },\n    })\n\n    const FlyingThing = Object.create({\n      canFly: true,\n      fly() {\n        return 'flap, flap ...'\n      }\n    })\n\n    const Duck = Bean.roast(\n      function Duck(name) {\n        this.name = name\n        this.specie = 'bird'\n      },\n      Character,\n      FlyingThing\n    )\n\n    const Bat = Bean.roast(\n      function Bat(name) {\n        this.name = name\n        this.specie = 'mammal'\n      },\n      Character,\n      FlyingThing\n    )\n\n    const Dog = Bean.roast(\n      function Dog(name) {\n        this.name = name\n        this.specie = 'mammal'\n      },\n      Character\n    )\n\n    const daffyDuck = Duck('Daffy Duck')\n```\nIn a console:\n```Shell\n    daffyDuck\n    > Duck { name: 'Daffy Duck', specie: 'bird' }\n    daffyDuck.fly()\n    > 'flap, flap ...'\n```\n## Private State\n\n`Bean.wrap` is a function, enabled by module `wrap-bean`, that wraps a context arround bean creation.\n\n```Javascript\n    const Bean = require('../src/bean')\n    require('bean/wrap-bean') // enable Bean.wrap function\n    module.exports = Bean.wrap(() => {\n      // wrapping this implementation, not exposing it\n      // this implementation takes care of optimising caching...\n      const PrimeIndex = Bean.roast(\n        function PrimeIndex() { ... }, Bean.protected({\n          set(prime, seq) { ... },\n          test(candidate) { ... },\n          next(treshold) { ... },\n        }), {\n          // properties\n          ...\n        }\n      )\n      // Private constant that is not exposed\n      const primeIndex = PrimeIndex()\n      // Only exposing this bean\n      // Exposing this bean\n      return Bean.roast(\n        // cosmetic construcor - looks nice this the console\n        function Prime() {},\n        Bean.protected({\n          /**\n           * test whether a candidate integer is a prime number\n           * @param {Integer} candidate \n           */\n          test(candidate) {\n            return primeIndex.test(candidate)\n          },\n          /**\n           * Retreive a given number of prime numbers\n           * @param {Integer} length number of prime number to return\n           */\n          getList(length) {\n            while (primeIndex.sequence.length < length) {\n              primeIndex.next(+Infinity)\n            }\n            return primeIndex.sequence.slice(0, length)\n          }\n        })\n      )\n    })\n```\n\nCheck `test/wrap-bean.js` for more examples\n\n[travis-url]: https://travis-ci.org/jerp/bean\n[travis-image]: https://travis-ci.org/jerp/bean.svg?branch=master\n[npm-image]: https://img.shields.io/npm/v/jsbean.svg\n[npm-url]: https://www.npmjs.com/package/jsbean\n[coveralls-url]: https://coveralls.io/github/jerp/bean?branch=master\n[coveralls-image]: https://coveralls.io/repos/github/jerp/bean/badge.svg?branch=master","k-logs":"k-logs\r\n========\r\n\r\n```\r\nnpm install k-logs\r\n```\r\n\r\n```\r\napp.use(require(k-logs))\r\n```\r\n","keeps-on-ticking":"keeps-on-ticking\n===========================\nA simple development project time tracker\n\n# Introduction\nKeeps on ticking is a simple script to track the time you spend on projects.\n\nSimply run it and when you close it, it will record the time it was opened\nand how long it was open for in the `.tickings` file in the folder where you\nran it from.\n\n```\nyarn add -G keeps-on-ticking\n\nkot\n```\n\nThe tracker can be paused/resume by sending a SIGINT (`CTRL+C`) and closed by\nsending a SIGHUP (`CTRL+D`) to finish and close the tracker.\n\nIf the folder contains magic that one of the plugins is aware of, such as the\nincluded git plugin, you will also get features like automatic branch time\ntracking and switching.\n\n## Current Plugins\n- **git** - Adds the current branch to the logs and tickings\n\n# Example `.tickings` file\n```\n2018-04-13T15:30:05.421Z\tgit:master\t1:0:0\n2018-04-13T17:23:49.252Z\tgit:master\t0:48:08\n2018-04-15T13:03:46.074Z\tgit:master\tFixed up signals and exiting\n2018-04-15T13:03:46.074Z\tgit:master\t0:23:01\n```\n","kimberly":"v 1.1.7","kissfs":"# :kiss:fs\n[![Build Status](https://travis-ci.org/wix/kissfs.svg?branch=master)](https://travis-ci.org/wix/kissfs)\n[![Build Status](https://ci.appveyor.com/api/projects/status/github/wix/kissfs?branch=master&svg=true)](https://ci.appveyor.com/project/qballer/kissfs/branch/master)\n\nExtensible and reactive file-system library that keeps it simple\n\n## User documentation\n:kiss:fs supplies a standard API for the most basic file-system operations: CRUD of modest sized text files and directories, as well as listening for changes to files and directories. If you're looking to build a folder tree visualizer or manager, or a tool for viewing and editing any text file in a directory tree, :kiss:fs is what you're looking for. For simplicity and supportability, we are keeping the focus narrow so that it can be widely implemented and extended over a wide range of data sources, such as local file systems, remote git APIs, cloud-based file systems, etc. For example, you can use it to run a rename script on an in memory directory for testing purposes and then run the same script on the directories requiring the change. \n\nThere is currently no support for meta-data (timestamps, permissions, etc.), binary content or data streams. So if you're writing a log viewer or an all-in-one file system manager, this may not be the right tool for you and we suggest you try [vinyl](https://github.com/gulpjs/vinyl).\n\nFeedback, questions and contributions always welcome via issues.\n\n\n### usage code examples\ncoming soon...\n\n## developer documentation\nhow to build and test:\n - clone the repository\n - in the cloned folder, run `npm install`\n - run `npm test` to build and test the code in both nodejs and browser\n\nhow to debug (browser):\n - run `npm build:watch` to start transpiling all source files to es5 whenever they change (CTR+c to exit)\n - in a different window, run `npm start` to run a development server that watches the es5 files and serves them to the browser\n - open `http://localhost:8080/webtest.bundle` to run live tests that will update while you change the source code\n\n## similar solutions\n - [vinyl](https://github.com/gulpjs/vinyl) - a standard API for file descriptors, designed for gulp. More complex than :kiss:fs.\n - [vfs](https://github.com/c9/vfs) - a file-system API with HTTP transport layer. More complex than :kiss:fs.\n\n","knexentity":"Knex Entity\n----\n[Typescript only]Simple schema Context/Entity builder\n\n## How to use ?\n```\n> npm install knexentity\n> mkdir models\n> npx knextable toModel <your_schema> --useMoment --genContext --toFolder ./models\n```\n\n```ts\nimport knex from 'knex';\nimport { forumContext } from './models/forumContext';\nimport { usersEntity } from './models/users';\nimport { topicsEntity } from './models/topics';\n\nconst dbForum = new forumContext(knex({ ... your knex config ... }));\n\nasync function getAllTopicByUser(currentUser: userEntity) : topicEntity[] {\n  return dbForum.topics.fromDb((query, table) => {\n    query.where(table.Column.userId, currentUser.id);\n  });\n}\n```\n\n","koco-toastr":"# koco-toastr\nToastr wrapper for use in a [KOCO](https://github.com/cbcrc/generator-koco) project. It includes styles to match the bootstrap aesthetic. \n\n## Installation\n\n```bash\nbower install koco-toastr\n```\n\n## Usage with KOCO\n\nThis is a shared module that is used in many other modules. It includes the toastr library as a bower dependency. The convention is to configure an alias in the `require.configs.js` with the name `bootstrap-toastr` like so:\n\n```javascript\npaths: {\n  ...\n  'bootstrap-toastr': 'bower_components/koco-toastr/src/koco-toastr-ui',\n  'toastr': 'bower_components/toastr/toastr',\n  ...\n}\n```\n\nYou will also need to import the styles into `less/styles.less`:\n\n```css\n// Components\n@import \"../bower_components/koco-toastr/src/koco-toastr.less\";\n@import \"../bower_components/toastr/toastr.less\";\n...\n\n```\n","koot-redux":"# `koot-redux`\n\n> æ¨¡ååç redux ç»ç»æ¹æ¡\n\n> Redux æ¯ä¸ä¸ªæåçä¸æ©å±æ§æå¼ºçç¶æåç®¡çå¨ï¼ä½æ¯å¶å¤æä¸ç¹ççå¼åä½éªæ¯å¨æ¯è®©äººå¤´ç¼\n\n* å½æä»¬è¦å®æä¸ä¸ªå¤æçä¸å¡æ¶åï¼æä»¬è¦ç®¡çå¤§éç createAction, action, reducer\n* Action æ¬èº«å¯ä»¥çè§£ä¸ºä¸ä¸ªå®ä¹ï¼å¹¶ä¸æ¯çå®å­å¨çé»è¾ï¼ä¸ºäºå®æå¼æ­¥ æä»¬éè¦ä½¿ç¨ reudx-thunk\n* ...\n\n> koot-redux åèäº vuex ç Store æ¨¡ååçç®¡çæ¹æ¡, å¨ä¸æ¹å redux æ ¸å¿çæåµä¸ï¼å¯ä»¥ä»¥æ¨¡åçæ¹å¼åå»º action, reducerï¼ä¸ä½è½ä½éª redux æå¸¦æ¥çå¥½å¤ï¼ä¹ä¼åäºå¤æç action&reducer çåå»ºç®¡çè¿ç¨\n\n> koot-redux åæ ·å°å¾ªçä¸ redux ä¸æ ·çåå\n\n## å®è£\n\n### NPM\n```shell\nnpm install koot-redux --save\n```\n\n### Yarn\n```shell\nyarn koot-redux\n```\n\n## å¿«éä½¿ç¨\n\n> å©ç¨koot-cli åå»ºçæ¨¡æ¿é¡¹ç®ï¼å¯æç§å¦ä¸ä¿®æ¹ä½¿ç¨ã\n\nä¿®æ¹ File: /src/store/index.js\n```js\n    import { createReduxModuleStore, applyMiddleware } from 'koot-redux'\n    import { reduxForCreateStore } from 'koot'\n    import rootModule from './root'\n\n    const middlewares = [\n        ...reduxForCreateStore.middlewares\n    ]\n\n    export default () => {\n\n        const {\n            initialState\n        } = reduxForCreateStore\n\n\n        if (__CLIENT__ && __DEV__) {\n            return createReduxModuleStore(\n                rootModule,\n                initialState,\n                require('redux-devtools-extension').composeWithDevTools(applyMiddleware(...middlewares))\n            )\n        }\n\n        return createReduxModuleStore(\n            rootModule,\n            initialState\n        )\n\n    }\n```\n\næ·»å  File: /src/store/root.js \n```js\n    import { reduxForCreateStore } from 'koot'\n\n    export default {\n        state: {\n\n            ...reduxForCreateStore.reducers\n        },\n        reducers: {\n            ['SOME_REDUCER_FUNCTION']() {\n\n            }\n        },\n        actions: {\n            ['SOME_ACTION_FUNCTION']() {\n\n            }\n        },\n        modules: {\n            // æ­¤å¤å¯æ©å±å­éç module æ¨¡å\n        }\n    }\n```\n\n\n\n## Module\nå¨ koot-redux ä¸­ï¼\n* ä¸ä¸ªå®æ´ç store æ å°±æ¯ä»¥ä¸ªå±å±åµå¥ç module æ ï¼\n* æ¯ä¸ª module ç®¡çèªå·±ç state, action, reducer\n* reducer å¿é¡»æ¯åæ­¥ç\n* action æ¯å¿é¡»å­å¨çé»è¾ï¼ä½ å¿é¡» dipatch ä¸ä¸ª action, ä¸å¨ action å commit ä¸ä¸ª reducer\n\nmodule.js\n\n```js\n    const module = {\n        state: {\n            // å¨æ­¤å¤å®ä¹é»è®¤çstate\n            // ç¨åºå°å¨åå»ºæ¶å°æ­¤å¤å®ä¹å¥½çå¼åå§åä¸ºé»è®¤å¼\n            userinfo: {\n                username: 'liudehua',\n                password: '123456'\n            }\n        },\n        reducers: {\n            // reducer ä¸ºä¸ä¸ª funciton\n            // reducerçè°ç¨åç§° = funcitonçåç§°\n            ['SOME_REDUCER_FUNCTION'](state, payload){\n\n            }\n        },\n        actions: {\n            // action ä¸ºä¸ä¸ª funciton\n            // actionçè°ç¨åç§° = funcitonçåç§°\n            ['SOME_ACTION_FUNCTION']({\n                commit,\n                state,\n                rootState,\n                dispatch\n            }, payload){\n                // commit ç¨æ¥æäº¤ reducer\n                // eg: commit('SOME_REDUCER_FUNCTION', payload)\n\n                // state ç¨æ¥è·åå½åæ¨¡åçå±é¨ state\n                // eg: state.userinfo.username\n\n                // rootState æ´ä¸ªç¶ææ çæ ¹å±ï¼ä½ å¯ä»¥åæ­¤æ¿å°æ´ä¸ªç¶ææ \n                // eg: rootState.App.test\n\n                // dispatch å¯ä»¥ç»§ç»­æ´¾åå¶ä»ç action æä½\n                // eg: dispatch('OTHER_ACTION_FUNCTION')\n            }\n        },\n        modules: {\n            // æ­¤å¤å¯æ©å±å­éç module æ¨¡å\n            // å­çº§å¯ä»¥åæ ·æ©å±èªå·±çå­çº§\n            App: {\n                state: {\n                    test: 1\n                },\n                reducers: {},\n                actions: {},\n                modules: {}\n            }\n        }\n    }\n```\n\n## Action\n\nè¿éæä»¬å° action å®ä½åä¸ä¸ª âå¿é¡»å­å¨â çé»è¾å±ã\n\nå¨å¼åä¸­æä»¬åç°ï¼æ è®ºæ¯å¤§éçå¼æ­¥è¯·æ±ï¼ææ¯å­å¨æ°æ®ä¹åçå¤æé»è¾ï¼æä»¬é½éè¦ä¸ä¸ªæ¯æå¼æ­¥ä¸å®éå­å¨ç action function å­å¨ï¼å³ä½¿æ¯åæ­¥çéæ±ï¼action ä¹å¯ä»¥éå¸¸ç¨æ¥å¤çæ°æ®å­å¨ä¹åçé»è¾ï¼å¯ä½¿å¾ reducer çåè½æ´çº¯åï¼ä¸ç»æªæ¥çå¼åå¸¦æ¥äºè¶³å¤çæ©å±æ§ã\n\næä»¥å½ä½ æ§è¡æ´¾åæä½æ¶ï¼ä½ å¿é¡»å¨åæ§è¡ä¸ä¸ª action\nç¶åå¨ action ä¸­ï¼æäº¤ä½ è¦æ§è¡ç reducer æä½\n\n### æ´¾å action\n```js\n    // æ´¾å action\n    this.props.dispatch('SOME_ACTION_NAME')\n    \n    // or\n    this.props.dispatch('SOME_ACTION_NAME', payload)\n```\n\n### actionå½æ°ååæ°\n```js\n    // commit ç¨æ¥æäº¤ reducer\n    // eg: commit('SOME_REDUCER_FUNCTION', payload)\n\n    // state ç¨æ¥è·åå½åæ¨¡åçå±é¨ state\n    // eg: state.userinfo.username\n\n    // rootState æ´ä¸ªç¶ææ çæ ¹å±ï¼ä½ å¯ä»¥åæ­¤æ¿å°æ´ä¸ªç¶ææ \n    // eg: rootState.App.test\n\n    // dispatch å¯ä»¥ç»§ç»­æ´¾åå¶ä»ç action æä½\n    // eg: dispatch('OTHER_ACTION_FUNCTION')\n\n    ['SOME_ACTION_NAME']({commit, state, rootState, dispatch}, payload){\n        commit('SOME_REDUCER_NAME', payload)\n    }\n```\n\n## Reducer\n\n* æä»¬å»ºè®® reducer æ¯ä¸ä¸ªçº¯åçãåæ­¥çå­å¨è¿ç¨ï¼åªè·æ°æ®å­å¨æ¬èº«æå³ã\n* æ¯å¦å­å¨æå¶ä»ä¸å¡å¤æ­é»è¾æä»¬æ¨èåå° action å½ä¸­ã\n\n","ksys-express-http-proxy":"# express-http-proxy [![NPM version](https://badge.fury.io/js/express-http-proxy.svg)](http://badge.fury.io/js/express-http-proxy) [![Build Status](https://travis-ci.org/villadora/express-http-proxy.svg?branch=master)](https://travis-ci.org/villadora/express-http-proxy) [![Dependency Status](https://gemnasium.com/villadora/express-http-proxy.svg)](https://gemnasium.com/villadora/express-http-proxy)\n\nExpress proxy middleware to forward request to another host and pass response back\n\n## Install\n\n```bash\n$ npm install express-http-proxy --save\n```\n\n## Usage\n```js\nproxy(host, options);\n```\n\nTo proxy URLS starting with '/proxy' to the host 'www.google.com':\n\n```js\nvar proxy = require('express-http-proxy');\n\nvar app = require('express')();\n\napp.use('/proxy', proxy('www.google.com'));\n```\n\n### Options\n\n\n\n#### forwardPath\n\nThe ```forwardPath``` option allows you to modify the path prior to proxying the request.\n\n```js\nvar proxy = require('express-http-proxy');\n\nvar app = require('express')();\n\napp.use('/proxy', proxy('www.google.com', {\n  forwardPath: function(req, res) {\n    return require('url').parse(req.url).path;\n  }\n}));\n```\n#### forwardPathAsync\n\nThe ```forwardPathAsync``` options allows you to modify the path asyncronously prior to proxying the request, using Promises.\n\n```js\napp.use(proxy('httpbin.org', {\n  forwardPathAsync: function() {\n    return new Promise(function(resolve, reject) {\n      // ...\n      // eventually\n      resolve( /* your resolved forwardPath as string */ )\n    });\n  }\n}));\n```\n\n#### filter\nThe ```filter``` option can be used to limit what requests are proxied. For example, if you only want to proxy get request\n\n```js\napp.use('/proxy', proxy('www.google.com', {\n  filter: function(req, res) {\n     return req.method == 'GET';\n  },\n  forwardPath: function(req, res) {\n    return require('url').parse(req.url).path;\n  }\n}));\n```\n\n#### intercept\nYou can intercept the response before sending it back to the client.\n\n```js\napp.use('/proxy', proxy('www.google.com', {\n  intercept: function(rsp, data, req, res, callback) {\n    // rsp - original response from the target\n    data = JSON.parse(data.toString('utf8'));\n    callback(null, JSON.stringify(data));\n  }\n}));\n```\n\n#### decorateRequest\n\nYou can change the request options before it is sent to the target.\n\n```js\napp.use('/proxy', proxy('www.google.com', {\n  decorateRequest: function(proxyReq, originalReq) {\n    // you can update headers\n    proxyReq.headers['Content-Type'] = 'text/html';\n    // you can change the method\n    proxyReq.method = 'GET';\n    // you can munge the bodyContent.\n    proxyReq.bodyContent = proxyReq.bodyContent.replace(/losing/, 'winning!');\n    return proxyReq;\n  }\n}));\n\n```\n\n#### preserveHostHdr\n\nYou can copy the host HTTP header to the proxied express server using the `preserveHostHdr` option.\n\n```\napp.use('/proxy', proxy('www.google.com', {\n  preserveHostHdr: true\n}));\n```\n#### reqAsBuffer\n\nNote: this is an experimental feature.  ymmv\n\nThe ```reqAsBuffer``` option allows you to ensure the req body is encoded as a Node\n```Buffer``` when sending a proxied request.   Any value for this is truthy.\n\nThis defaults to to false in order to preserve legacy behavior. Note that\nthe value of ```reqBodyEnconding``` is used as the encoding when coercing strings\n(and stringified JSON) to Buffer.\n\n```js\napp.use('/proxy', proxy('www.google.com', {\n  reqAsBuffer: true\n}));\n```\n\n#### reqBodyEncoding\n\nEncoding used to decode request body. Defaults to ```utf-8```.\n\nUse ```null``` to preserve as Buffer when proxied request body is a Buffer. (e.g image upload)\nAccept any values supported by [raw-body](https://www.npmjs.com/package/raw-body#readme).\n\nThe same encoding is used in the intercept method.\n\n```\napp.use('/post', proxy('httpbin.org', {\n  reqBodyEncoding: null\n}));\n```\n\n\n#### timeout\n\nBy default, node does not express a timeout on connections.   Use timeout option to impose a specific timeout.    Timed-out requests will respond with 504 status code and a X-Timeout-Reason header.\n\n```js\napp.use('/', proxy('httpbin.org', {\n  timeout: 2000  // in milliseconds, two seconds\n}));\n```\n\n\n## Questions\n\n### Q: Can it support https proxy?\n\nThe library will use https if the provided path has 'https://' or ':443'.   You can use decorateRequest to ammend any auth or challenge headers required to succeed https.\n\n\nHere is an older answer about using the https-proxy-agent package.   It may be useful if the included functionality in ```http-express-proxy``` does not solve your use case.\n\nA:  Yes, you can use the 'https-proxy-agent' package. Something like this:\n\n```js\nvar corporateProxyServer = process.env.HTTP_PROXY || process.env.http_proxy || process.env.HTTPS_PROXY || process.env.https_proxy;\n\nif (corporateProxyServer) {\n  corporateProxyAgent = new HttpsProxyAgent(corporateProxyServer);\n}\n```\n\nThen inside the decorateRequest method, add the agent to the request:\n\n```js\n  req.agent = corporateProxyAgent;\n```\n\n## Release Notes\n\n| Release | Notes |\n| --- | --- |\n| 0.10.0 | Fix regression in forwardPath implementation. |\n| 0.9.1 | Documentation updates.  Set 'Accept-Encoding' header to match bodyEncoding. |\n| 0.9.0 | Better handling for request body when body is JSON. |\n| 0.8.0 | Features:  add forwardPathAsync option <br />Updates:  modernize dependencies <br />Fixes: Exceptions parsing proxied response causes error: Can't set headers after they are sent. (#111) <br />If client request aborts, proxied request is aborted too (#107) |\n| 0.7.4 | Move jscs to devDependencies to avoid conflict with nsp. |\n| 0.7.3 | Adds a timeout option.   Code organization and small bug fixes. |\n| 0.7.2 | Collecting many minor documentation and test improvements. |\n| 0.4.0 | Signature of `intercept` callback changed from `function(data, req, res, callback)` to `function(rsp, data, req, res, callback)` where `rsp` is the original response from the target |\n\n## Licence\n\nMIT\n<!-- do not want to make nodeinit to complicated, you can edit this whenever you want. -->\n","lazy-bones":"# lazy-bones\n\nDeclare how to get all your data in one place, then lazily get just the parts you need.\n\n\n## Do I need this?\n\nYour application needs data. Simple, right? Just make a request:\n\n```es6\ngetSomeData({ some: 'param' }).then(someData => {\n  useTheData(someData);\n});\n```\n\n...except sometimes to get that data we need another piece of data. Still simple, we can use Promises or async:\n\n```es6\ngetDataA().then(a => {\n  return getDataB({ blah: a.foo });\n}).then(b => {\n  return useTheData(b);\n});\n```\n\n...except sometimes there's quite a few sources involved with complex inter-dependencies. `async.auto`, right?\n\n```es6\nasync.auto({\n  a: next => getA(next),\n  b: ['a', (results, next) => {\n    getB(results.a, next);\n  }],\n  c: ['a', 'b', (results, next) => {\n    getC(results.a, results.b, next);\n  }],\n  d: ['a', 'c', (results, next) => {\n   getD(results.a, results.c, next);\n }],\n}, (err, results) => {\n  // ...\n});\n```\n\n...except sometimes pieces of these complex work-flows need to be shared. Just extract into a reusable function, right?\n\n```es6\n\n// File 1\n\nconst getB = require('./get-b');\n\nasync.auto({\n  a: next => {\n    getA(next);\n  },\n  b: ['a', (results, next) => {\n    getB(results.a, next);\n  }],\n  c: ['a', 'b', (results, next) => {\n    getC(results.a, results.b, next);\n  }],\n  d: ['a', 'c', (results, next) => {\n   getD(results.a, results.c, next);\n }],\n}, (err, results) => {\n  // ...\n});\n\n// File 2\n\nconst getB = require('./get-b');\n\nasync.auto({\n  a: next => {\n    doSomething(next);\n  },\n  b: ['a', (results, next) => {\n    getB(results.a, next);\n  }]\n}, (err, results) => {\n  // ...\n});\n\n```\n\n...except my workflow is scattered throughout multiple helpers/middlewares/etc, and I don't want to duplicate similar\nrequests for the same pieces of data. Hm, now things are getting tricky! We would now need to implement some sort of\ncaching within a particular scope, passing that around as some sort of continuation that weaves its way through multiple\nfiles.\n\nThis is where `lazy-bones` comes in. This library allows you to declare your entire application's data retrieval logic\nand inter-dependencies all in one place, then lazily retrieve just the pieces you want, with built in caching of \nintermediate values.\n\n\n## What does this look like?\n\nFirst you need to define your data source. The format of the definition is `async.auto`-inspired, except\nit plays nicely with Promises and synchronous results:\n\n```es6\n// state.js\n\nconst LazyBones = require('lazy-bones');\n\nconst DataSource = LazyBones({\n  customer: ['customerId', ({ customerId }, cb) => {\n    getCustomer(customerId, cb);\n  }],\n  preferences: ['customer', ({ customer }) => {\n    return getPreferences(customer.preferencesKey); // This returns a Promise\n  }],\n  likesPuzzles: ['preferences', ({ preferences }) => {\n    return prefs.likesPuzzles;\n  }]\n});\n\nmodule.exports = DataSource;\n```\n\nIf you have a very complex app, having everything in one huge object literal would make things hard to read. \nAdditionally, sometimes there may be two different pathways to the same pieces of data, some which is known and some \nwhich is retrieved. To support more advanced scenarios, you can use this pattern:\n\n```es6\n// state.js\n\nconst LazyBones = require('lazy-bones');\n\nconst accountId = require('./account-id');\nconst account = require('./account');\nconst profile = require('./profile');\nconst preferences = require('./preferences');\nconst authToken = require('./auth-token');\n\nconst DataSource = LazyBones({\n  accountId,\n  account,\n  profile,\n  authToken\n});\n\nmodule.exports = DataSource;\n\n\n// account.js\n\nconst myAPI = require('../api');\n\n// Can get an account given an accountId\n\nmodule.exports = ['accountId', ({ accountId }) => {\n  return myAPI.getAccount(accountId);\n}];\n\n\n// profile.js\n\nconst myAPI = require('../api');\n\n// Can get a profile given a profileId\n\nmodule.exports = ['profileId', ({ profileId }) => {\n  return myAPI.getProfile(profileId);\n}];\n\n\n// account-id.js\n\n// ...or if you already have a profile or an account, can get an account ID from either\n\nmodule.exports = [\n  ['account', ({ account }) => account.id],\n  ['profile', ({ profile }) => profile.accountId]\n];\n\n\n// auth-token.js\n\nmodule.exports = [\n  ['account', ({ account }) => account.authToken]\n];\n\n```\n\n\n## How do I use the data source I've created?\n\nThe data source is a function that can be used to construct an instance of a data set. You can optionally pass this\nfunction parameters that are specific to the data set instance. \n\n```es6\nconst dataSet = DataSource({ profileId: req.query.profileId });\n```\n\nEach data set contains its own cache and provides methods for retrieving pieces of data. \n\n\n## How do I use a data set?\n\nEach definition in your data source maps to a method in the data set. These methods automatically take care of caching\nresults and fetching dependencies. Although all methods return Promises, you can also use node-style callbacks.\n\n```es6\nconst DataSource = LazyBones({\n  customer: ['customerId', ({ customerId }, cb) => {\n    getCustomer(customerId, cb);\n  }],\n  preferences: ['customer', ({ customer }) => {\n    return getPreferences(customer.preferencesKey); // This returns a Promise\n  }],\n  likesPuzzles: ['preferences', ({ preferences }) => {\n    return prefs.likesPuzzles;\n  }]\n});\n\nconst dataSet = DataSource({ customerId: 293538 });\n\n// Promise style\ndataSet.likesPuzzles().then(likesPuzzles => {\n  // ...\n}, err => {\n  // ...\n});\n\n// Callback style\ndataSet.likesPuzzles((err, likesPuzzles) => {\n  if (err) {\n    // ...\n  } else {\n    // ...\n  }\n});\n\n```\n\nAs a convenience for fetching multiple things in parallel, there's also a `get` method:\n\n```es6\n// Promise style\ndataSet.get('preferences', 'likesPuzzles').then({ preferences, likesPuzzles }) => {\n  // ...\n}, err => {\n  // ...\n});\n\n// Callback style\ndataSet.get('preferences', 'likesPuzzles', (err, data) => {\n  if (err) {\n    // ...\n  } else {\n    const { preferences, likesPuzzles } = data;\n    // ...\n  }\n});\n\n```\n\nThe data set will automatically inspect your dependency tree and determine the most efficient path to your data if there\nare intermediate steps. To benefit from caching, you should preserve a data set instance within a given lifetime, for\nexample an express request/response. Here's an example data set usage with Express middleware:\n\n\n```es6\n// state-middleware.js\n\nconst State = require('./state');\n\nmodule.exports = (req, res, next) => {\n  res.locals.state = State({ profileId: req.query.profileId }); // profileId is a given for the request\n  next();\n};\n\n\n// output-token-middleware.js\n\nmodule.exports = (req, res, next) => {\n\n  /* If we just have `profileId`, the only available path to authToken is:\n   *\n   * profileId -> profile -> accountId -> account -> authToken\n   *\n   */\n\n  res.locals.state.authToken().then(token => {\n    res.headers['x-auth-token'] = token;\n    next();\n  });\n};\n\n\n// ensure-active-account.js\n\nmodule.exports = (req, res, next) => {\n  // Since we have already retrieved `account`, `res.locals.state.account()` will resolve immediately.\n  \n  res.locals.state.account().then(acct => {\n    if (acct.status !== 'active') {\n      return res.status(403).send('Your account is no-longer active.');\n    }\n    \n    next();\n  });\n};\n\n```\n\nHopefully you can see how a data set instance lets you avoid worrying about duplicated or unnecessary data fetches,\nand you can centralize all your data retrieval logic, even when called from multiple places.\n\n\n## What if there are no paths to my data?\n\nIf not enough information is present to get the data you request, your request will fail:\n \n```es6\nconst State = require('./state');\n\nconst state = new State();\n\nstate.authToken().catch(err => {\n  console.error(err);   \n  // Could not resolve dependency 'account'. You must provide one of the following:\n  // account, accountId, profile, or profileId\n});\n```\n\n\n## What if there are multiple paths to my data?\n\nThe `lazy-bones` engine uses a least-cost path to your data. Essentially it's a general path traversal within a graph,\nwhere the cost of each arc is calculated by maintaining an average of how long it takes to complete each request. This\nmeans that you can provide duplicate ways to get to the same piece of data and automatically use the fastest path.\n\n\n## How can I retrieve two pieces of state at a time?\n\n`Promise.all` will work:\n\n```es6\nPromise.all([\n  state.a(),\n  state.b()\n]).then(([ a, b ]) => {\n  // Use the data\n});\n```\n\nThere's also a `get` method:\n\n```es6\nstate.get('a', 'b').then(({ a, b }) => {\n  // Use the data\n});\n```\n\n...which will sequence things in either series or parallel depending on the dependency graph. One thing to mention: \n`lazy-bones` will wait for already-in-flight requests to complete, so you don't have to worry about duplicate requests\nwhether already-completed or in-progress.\n\n\n## How can I track performance in order to optimize my data flows?\n\nSince `lazy-bones` is already keeping track of timings, it also provides those timings via its `EventEmitter` interface:\n\n```es6\nconst LazyBones = require('lazy-bones');\n\nconst DataSource = LazyBones({\n  // ...\n});\n\nDataSource.on('timing', ({ name, dependencies, waitStartTime, requestStartTime, requestEndTime, duration, totalDuration }) => {\n  logTimings(name, duration);\n});\n```\n\n\n## What if I don't like Promises?\n\nYou don't have to use them. If you pass a Node-style callback to any of the functions, the callback pattern is assumed\ninstead. Note that callback APIs are tricky to use since a callback may have been invoked with more than one value. \nUnlike `async.auto`, which may convert unexpected multiple values into an Array, if you pass more than one non-error\nvalue to a callback in `lazy-bones`, only the first is used. Explicitly pass an Array or Object for complex return \nvalues.\n\nNote that you are free to use async functions as well.\n","lille-ui":"# lille-ui\n\n> A Vue.js project\n\n## Build Setup\n\n``` bash\n# install dependencies\nnpm install\n\n# serve with hot reload at localhost:8080\nnpm run dev\n\n# build for production with minification\nnpm run build\n```\n\nFor detailed explanation on how things work, consult the [docs for vue-loader](http://vuejs.github.io/vue-loader).\n","list-runner":"\r\n\r\n# Copyright 2018 Jared Boice (MIT License / Open Source)\r\n\r\n# List-Runner - Summarized Documentation\r\n\r\n_\"Within Cells Interlinked\"_\r\n\r\nget the [full documentation](https://github.com/jaredboice/list-runner) at gitHub.\r\n\r\n![List-Runner](screenshots/list-runner-logo.png \"Within Cells Interlinked\")\r\n\r\n## Donations - Bitcoin: 19XgiRojJnv9VDhyW9HmF6oKQeVc7k9McU \r\n(use this address until 2022)\r\n\r\n**_this codebase has survived 65 unit tests_**\r\n\r\n## Description\r\n\r\n**List-Runner** is a lightweight _linked-list_ implementation that offers both _Singly_ _(next)_ \r\nand _Doubly_ data structures _(next and previous)_.\r\n\r\nNodes are referred to as cells and the list is referred to as a stem.\r\n\r\nSingly cell instances have getNext() and setNext() methods. \r\nDoubly cell instances additionally have getPrev() and setPrev() methods.\r\nAll other operations are controlled by the Stem instance. There are two types of stems, one for singly data structures and one for doubly data structures.\r\n\r\n## Install, Import & Instantiate\r\n\r\n**Install**\r\n\r\n`npm install --save list-runner`\r\n\r\n**Import**\r\n\r\n_importing the commonly needed classes_\r\n```javascript  \r\nimport { CellSingly, CellDoubly, StemSingly, StemDoubly } from 'list-runner';\r\n```\r\n\r\n_importing the constants_\r\n```javascript  \r\nimport { SENTINEL, CELL, SINGLY, DOUBLY } from 'list-runner';\r\n```\r\n\r\n_importing the sidekick functions_\r\n```javascript    \r\nimport { initializeStem, findForward, findBackward, runForward, runBackward, countForward, countBackward } from 'list-runner';\r\n```\r\n\r\n_importing less commonly needed classes_\r\n```javascript  \r\nimport { SentinelSingly, SentinelDoubly } from 'list-runner';\r\n```\r\n\r\n**Instantiate**\r\n\r\n_solo instantiation_\r\n\r\n```javascript\r\nconst cell = new CellDoubly();    \r\nconst stem = new StemDoubly(cell);\r\n```\r\n\r\n_connective instantiation_\r\n\r\n```javascript\r\nconst cell1 = new CellDoubly();    \r\nconst cell2 = new CellDoubly();    \r\nconst cell3 = new CellDoubly();    \r\nconst stemCells = [cell1, cell2, cell3];    \r\nconst structureType = DOUBLY; // imported constant    \r\nconst stem = initializeStem(stemCells, structureType);\r\n```\r\n\r\n_code examples: stem and cell classes_\r\n\r\n```javascript\r\n// assume the following are not strings\r\nconst baseline = 'some arbitrary cell on the stem'; // substitute a cell on the stem\r\nconst cell = 'some new cell'; // substitute a newly instantiated cell\r\nconst cells = 'an array of cells'; // substitute an array of unlinked cells\r\n\r\n/* CELL OPERATIONS */\r\nconst nextCell = cell.getNext();\r\nconst prevCell = cell.getPrev(); // only DOUBLY data-structure\r\n\r\n/* STEM OPERATIONS */\r\nconst head = stem.getHead();\r\nconst tail = stem.getTail(); // only DOUBLY data-structure\r\ninsert(cell, baseline); // returns true || false based on success\r\nextract(baseline); // returns extracted cell || false based on success\r\nunshift(cell); // returns true || false based on success\r\nshift(); // returns extracted cell || false based on success\r\npush(cell); // only DOUBLY data-structure / returns true || false based on success\r\npop(); // only DOUBLY data-structure / returns extracted cell || false based on success\r\nreplace(cell, baseline); // returns true || false based on success\r\ndelete(baseline); // returns true || false based on success\r\n```\r\n\r\n_code examples: sidekick functions_\r\n\r\n```javascript\r\n// assume the following are not strings\r\nconst comparator = 'a callback function that returns true when the right cell is found'; // receives each cell\r\nconst callBackParams = 'any kind of parameters that you want to pass to the callBack function';\r\nconst callBack = 'a custom callback function that will receive each cell from a loop and also callBackParams'; // receives each cell and callBackParams\r\n\r\n/* SIDEKICK FUNCTIONS */\r\ninterlink(cells);\r\nconst foundCell1 = findForward(baseline, comparator);\r\nconst foundCell2 = findBackward(baseline, comparator);\r\n// lastCellInLoop1 will be cell.type === SENTINEL if it loops to the edge of the stem (by not triggering a custom short-circuit condition)\r\nconst lastCellInLoop1 = runForward(baseline, callBack, callBackParams);\r\nconst lastCellInLoop2 = runBackward(baseline, callBack, callBackParams);\r\nconst totalCount1 = countForward(baseline);\r\nconst totalCount2 = countBackward(baseline);\r\n\r\n/* findForward / findBackward comparator callback examples */\r\n\r\n// standard\r\nexport const findComparator1 = (cell) => {\r\n  return cell.id === 'KD6-3.7';\r\n};\r\n\r\n// curried\r\nexport const findComparator2 = (id) => {\r\n    return (cell) => {\r\n        return cell.id === id;\r\n    };\r\n};\r\n\r\nconst myComparator = findComparator2('KD6-3.7');\r\nconst foundCell3 = findForward(baseline, myComparator);\r\n\r\n/* runForward / runBackward callback examples */\r\n\r\n// standard\r\nexport const runCallBack1 = (cell, callBackParams) => {\r\n    // do stuff\r\n    const continueLoop = cell.id !== id;\r\n    return continueLoop;\r\n};\r\n\r\n// curried\r\nexport const runCallBack2 = (id) => {\r\n    return (cell, callBackParams) => {\r\n      // do stuff\r\n      const continueLoop = cell.id !== id;\r\n      return continueLoop;\r\n    };\r\n};\r\n\r\nconst myCallBack = runCallBack2('KD6-3.7', 'any other arbitrary parameters');\r\n// lastCellInLoop3 will be cell.type === SENTINEL if it loops to the edge of the stem (by not triggering a custom short-circuit condition)\r\nconst lastCellInLoop3 = runForward(baseline, myCallBack, callBackParams);\r\n```\r\n","lodash-template-source-loader":"# lodash-template-source-loader\n\nCompile a lodash template and load its source. I can't believe this didn't already exist.\n\n# Usage\n\nwebpack.config.js:\n\n    module.exports = {\n      module: {\n        // ...\n        rules: [\n          // ...\n          {\n            test: /\\.html$/,\n            use: 'lodash-template-loader',\n          }\n        ],\n      },\n    };\n\nindex.js:\n\n    import template from './index.html';\n\n    // <div>bar</div>\n    template({ foo: 'bar' });\n\nindex.html:\n\n    <div><%- obj.foo -%></div>\n","logger-lib-1401":"###example:\r\n```\r\nlet Logger = require('logger-lib-1401');\r\n(async function () {\r\n\tconsole.log(await Logger.si.systemInformation());\r\n\tLogger.logger.setOption('./options.json');\r\n\tLogger.logger.log({name: \"tom\"}, \"info\");\r\n})();\r\n```\r\nAPIè¯´æè§IDEæç¤º","loopback-connector-rethinkdbdash":"# Loopback connector for RethinkDB.\n\n[![NPM version](https://badge.fury.io/js/loopback-connector-rethinkdbdash.svg)](http://badge.fury.io/js/loopback-connector-rethinkdbdash) [![Downloads](http://img.shields.io/npm/dm/loopback-connector-rethinkdbdash.svg)](http://badge.fury.io/js/loopback-connector-rethinkdbdash)   \n[![Build Status](https://travis-ci.org/Yoobic/loopback-connector-rethinkdbdash.svg?branch=master)](https://travis-ci.org/Yoobic/loopback-connector-rethinkdbdash) [![Test Coverage](https://codeclimate.com/github/Yoobic/loopback-connector-rethinkdbdash/badges/coverage.svg)](https://codeclimate.com/github/Yoobic/loopback-connector-rethinkdbdash) [![Code Climate](https://codeclimate.com/github/Yoobic/loopback-connector-rethinkdbdash/badges/gpa.svg)](https://codeclimate.com/github/Yoobic/loopback-connector-rethinkdbdash)   \n[![Dependency Status](https://david-dm.org/Yoobic/loopback-connector-rethinkdbdash.svg)](https://david-dm.org/Yoobic/loopback-connector-rethinkdbdash) [![devDependency Status](https://david-dm.org/Yoobic/loopback-connector-rethinkdbdash/dev-status.svg)](https://david-dm.org/Yoobic/loopback-connector-rethinkdbdash#info=devDependencies) [![peerDependency Status](https://david-dm.org/Yoobic/loopback-connector-rethinkdbdash/peer-status.svg)](https://david-dm.org/Yoobic/loopback-connector-rethinkdbdash#info=peerDependencies)    \n\nA loopback connector for rethinkdb using rethinkdbdash\n\n[![NPM](https://nodei.co/npm/loopback-connector-rethinkdbdash.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/loopback-connector-rethinkdbdash)\n\n## Description\nThis connector is based on rethinkdbdash driver.\nPlease, report all issues, this will help to publish stable version on NPM as soon as possible.\n\nPlease, note that many tests from Loopback Juggler suite are made with MongoDB in mind and RethinkDB shows different behavior in some cases.\n\n## Changelog\n\nRecent changes can be viewed on Github on the [Releases Page](https://github.com/Yoobic/loopback-connector-rethinkdbdash/releases)\n\n## License\n\nMIT","mad-science-modules":"Mad Science Modules\n===================\n\nDelightful npm packages that make you say \"wow, didn't know that was possible!\"\n\n## peer-to-peer\n- [peerwiki](https://www.npmjs.com/package/peerwiki) - all of wikipedia on bittorrent\n- [simple-peer](https://www.npmjs.com/package/simple-peer) - send video/voice/data p2p in the browser (with webrtc)\n- [torrent-docker](https://www.npmjs.com/package/torrent-docker) - realtime boot of remote docker images over bittorrent\n- [torrent-mount](https://www.npmjs.com/package/torrent-mount) - mount a torrent as a filesystem\n- [webtorrent](https://www.npmjs.com/package/webtorrent) - streaming torrent client for node & the browser\n\n## browserify\n- [brfs](https://www.npmjs.com/package/brfs) - turn `fs.readFileSync()` calls into inlined static assets\n- [browser field spec](https://gist.github.com/defunctzombie/4339901) - replace certain files/modules when a module is bundled for the browser\n- [browserify](https://npmjs.org/package/browserify) - use `require()` in the browser\n- [webworkify](https://www.npmjs.com/package/webworkify) - composable web workers for browserify\n\n## files\n- [file-type](https://www.npmjs.com/package/file-type) - detect file content types by checking their magic numbers\n- [fuse4js](https://www.npmjs.com/package/fuse4js) - write filesystem driver in js\n\n## geometry\n- [alpha-shape](https://www.npmjs.com/package/alpha-shape) - any dimensional alpha shapes (think \"concave\" hull)\n- [box-intersect](https://www.npmjs.com/package/box-intersect) - fast any dimensional box intersection detection\n- [convex-hull](https://www.npmjs.com/package/convex-hull) - robust any dimensional convex hull\n- [delaunay-triangulate](https://www.npmjs.com/package/delaunay-triangulate) - robust any dimensional delaunay triangulation\n- [surface-nets](https://www.npmjs.com/package/surface-nets) - extracts level sets in any dimension\n- [voronoi-diagram](https://www.npmjs.com/package/voronoi-diagram) - any dimensional voronoi diagrams\n- [voxelize](https://www.npmjs.com/package/voxelize) - voxelize a mesh\n\n## hardware\n- [cyclon](https://www.npmjs.com/package/cylon) - command robots, devices, and more from node\n\n## images\n- [indico.io](https://www.npmjs.com/package/indico.io) - facial emotion recognition and facial feature extraction\n\n## streams\n- [strip-html](https://www.npmjs.com/package/strip-html) - strip html from a stream\n\n## text\n- [diff](https://www.npmjs.com/package/diff) - show text differences\n- [franc](https://www.npmjs.com/package/franc) - detect the language of text\n- [indico.io](https://www.npmjs.com/package/indico.io) - political sentiment analysis\n- [node-tesseract](https://www.npmjs.com/package/node-tesseract) - A simple wrapper for the Tesseract OCR package\n- [normit](https://www.npmjs.com/package/normit) - Google translate text & speak it\n- [ocrad.js](https://www.npmjs.com/package/ocrad.js) - OCR in Javascript via Emscripten\n- [pullquoter](https://www.npmjs.com/package/pullquoter) - pull interesting quotes out of an article\n- [sbd](https://www.npmjs.com/package/sbd) - split text into sentences\n- [sentiment](https://www.npmjs.com/package/sentiment) - basic sentiment analysis\n\n## terminal\n- [minimist](https://www.npmjs.com/package/minimist) - simple argument parser\n- [progress](https://www.npmjs.com/package/progress) - create a simple terminal progress bar\n- [terminal-menu](https://www.npmjs.com/package/terminal-menu) - create retro terminal menus\n\n## virtual machines\n- [jsemu](https://github.com/fcambus/jsemu) - A list of emulators written in the JavaScript\n- [jslinux](https://www.npmjs.com/package/jslinux) - x86 emulator for running Linux, written in JavaScript\n- [jvm](https://www.npmjs.com/package/node-jvm) - java virtual machine in pure node.js\n\n## misc\n- [bell.js](https://www.npmjs.com/package/bell.js) - real-time anomalies detection for periodic time series.\n- [bitcoinjs-lib](https://www.npmjs.com/package/bitcoinjs-lib) - bitcoin client for node & the browser\n- [fastparallel](https://www.npmjs.com/package/fastparallel) - zero overhead parallel function calls\n- [google-distance](https://www.npmjs.com/package/google-distance) - calculate travel distance between two locations on earth using Google Maps' API\n- [qr-image](https://www.npmjs.com/package/qr-image) - generate QR codes\n\n## mad scientists (people)\n- [Mikola Lysenko](https://www.npmjs.com/~mikolalysenko) - linear algebra, computational geometry, WebGL\n- [Dominic Tarr](https://www.npmjs.com/~dominictarr) - streams, distributed systems\n- [Elijah Insua](https://www.npmjs.com/~tmpvar) - NC machines, CAD/CAM\n\nPRs welcome!\n","magmo-wallet-client":"# `magmo-wallet-client`\n\n> A library for creating and interacting with a Magmo wallet.\n\n## Usage\n### Creating the Wallet iframe\nThe wallet iframe can be created by calling `createWalletIFrame` and then embedded anywhere in the page.\nThe wallet handles stying and displaying itself!\n```\nconst walletClient = require('magmo-wallet-client');\nconst walletIframe = walletClient.createWalletIFrame('magmo-wallet-00');\n```\n### Listening for Wallet events\nThe `WalletEventListener` can be used to subscribe to `WalletEvent`s.\n```\nconst walletClient = require('magmo-wallet-client');\nconst walletListener = new walletClient.WalletEventListener();\nwalletListener.subscribeAll(yourHandler);\n```\n### Wallet functions\nThe wallet exposes various functions to interact with the wallet.\n```\nconst walletClient = require('magmo-wallet-client');\nwalletClient.initializeWallet('magmo-wallet-00','my-user-id');\n```\n","mala":"# MÃ¥la\n\n**MÃ¥la** is swedish for painting. This is a lightweight (less than 7kB) library to paint on the HTML5 ```<canvas>``` element.\n\n## Setup\n\n### Use with browserify\n\n```\n$ npm install mala\n```\n\nAnd \n\n```\nvar Mala = require('mala')\n```\n\n### Use directly in an HTML page\n\nDownload ```mala.min.js``` [here](https://raw.githubusercontent.com/idris-maps/mala/master/dist/mala.min.js)\n\nAnd add it to the page\n\n```\n<script src=\"mala.min.js\"></script>\n```\n\n## Usage\n\n### Initialise\n\nAdd a ```<div>``` to your HTML with a unique id.\n\n```\n<div id=\"myPainting\"></div>\n```\n\nAdd a canvas within the div by creating a new instance of MÃ¥la that takes two arguments:\n* The id of the div\n* The desired size of the canvas\n\n```\nvar paint = new Mala('myPainting', { width: 1000, height: 500 })\n```\n\nNow you can add **rectangles**, **circles**, **lines**, **polygons**, **text** and **images** (see below). When you are done, draw the canvas with\n\n```\npaint.draw()\n```\n\n### Add a rectangle\n\n```\nvar firstRectangle = paint.rect(10, 10, 100, 50)\n```\n\n```.rect(x,y,width,height)``` takes four arguments:\n* x: The number of pixels to the right of the top-left corner\n* y: The number of pixels down from the top-left corner\n* width (in pixels)\n* height (in pixels)\n\n#### Style options\n\n* ```fill```: Any HTML color (defaults to ```'black'```)\n* ```stroke```: Any HTML color (defaults to ```undefined```)\n* ```opacity```: A number between 0 and 1 (defaults to ```1```)\n* ```lineWidth```: The width in pixels of the ```stroke``` (defaults to ```1```)\n* ```lineJoin```: The shape of the corners of the ```stroke``` (defaults to ```miter```, other possibilities are ```round``` and ```bevel```)\n\nSet the styles like this:\n\n```\nfirstRectangle.fill = 'blue'\nfirstRectangle.stroke = 'red'\n```\n\nExample: \n\n```\nvar paint = new Mala('c', {width: 200, height: 100})\n\n// Create the rectangle\nvar firstRectangle = paint.rect(10, 10, 100, 50)\n\n// Set the style\nfirstRectangle.fill = 'blue'\nfirstRectangle.stroke = 'red'\nfirstRectangle.lineWidth = 5\n\n// Render\npaint.draw()\n```\n\nLooks like this:\n\n<img src=\"img/rectangle.png\" />\n\n### Add a circle\n\n```\nvar firstCircle = paint.circle(50, 30, 20)\n```\n\n```.circle(x,y,r)``` takes four arguments:\n* x: The number of pixels to the right of the top-left corner\n* y: The number of pixels down from the top-left corner\n* r: The radius in pixels\n\n#### Style options\n\n* ```fill```: Any HTML color (defaults to ```'black'```)\n* ```stroke```: Any HTML color (defaults to ```undefined```)\n* ```opacity```: A number between 0 and 1 (defaults to ```1```)\n\nSet the styles like this:\n\n```\nfirstCircle.fill = 'green'\n```\n\n### Add a line\n\n```\nvar firstLine = paint.line([[10,10],[20,20],[20,30]])\n```\n\n```.line([[x1,y1],[x2,y2],[x3,y3]])``` takes one argument: an array of x and y coordinates\n\nTo draw curves add one or two control points like this:\n\n```\n.line([[x1,y1],[ctrlPoint1-x,ctrlPoint1-y,x2,y2],[x3,y3]])\n```\n\n(with one control point)\n\nor \n\n```\n.line([[x1,y1],[ctrlPoint1-x,ctrlPoint1-y,ctrlPoint2-x,ctrlPoint2-y,x2,y2],[x3,y3]])\n```\n\n(with two control points)\n\nExample with a simple line:\n\n```\npaint.line([[20,50],[180,50])\n```\n\n<img src=\"img/line_0.png\" />\n\nWith one control point at [100,20]\n\n```\npaint.line([[20,50],[100,20,180,50])\n```\n\n<img src=\"img/line_1.png\" />\n\nWith two control points at [40,20] and [160,20]\n\n```\npaint.line([[20,50],[40,20,160,20,180,50])\n```\n\n<img src=\"img/line_2.png\" />\n\n\n#### Style options\n\n* ```stroke```: Any HTML color (defaults to ```'black'```)\n* ```opacity```: A number between 0 and 1 (defaults to ```1```)\n* ```lineWidth```: The width in pixels of the ```stroke``` (defaults to ```1```)\n* ```lineJoin```: The shape of the corners of the ```stroke``` (defaults to ```miter```, other possibilities are ```round``` and ```bevel```)\n* ```lineCap```: The shape of the ends of the line (defaults to ```butt```, other possibilities are ```round``` and ```square```)\n\nSet the styles like this:\n\n```\nfirstLine.lineWidth = 5\nfirstLine.lineCap = 'round'\n```\n\n### Add a polygon\n\n```\nvar firstPolygon = paint.polygon([[[10,10],[20,20],[20,30]]])\n```\n\n```.polygon([[[x1,y1],[x2,y2],[x3,y3]]])```, takes one argument: an array of arrays of x and y coordinates. For curved sides of the polygon, add control points as with ```.line()```\n\n#### Style options\n\n* ```fill```: Any HTML color (defaults to ```'black'```)\n* ```stroke```: Any HTML color (defaults to ```undefined```)\n* ```opacity```: A number between 0 and 1 (defaults to ```1```)\n* ```lineWidth```: The width in pixels of the ```stroke``` (defaults to ```1```)\n* ```lineJoin```: The shape of the corners of the ```stroke``` (defaults to ```miter```, other possibilities are ```round``` and ```bevel```)\n\nSet styles like this:\n\n```\nfirstPolygon.fill = 'yellow'\n```\n\nTo make a hole in a polygon, add an array of coordinates in counter clockwise order.\n\n```\nvar paint = new Mala('c', {width: 200, height: 100})\nvar outlineArray = [[0,0],[0,100],[200,100]]\nvar holeArray = [[10,60],[10,80],[30,80]]\nvar polygonWithHole = paint.polygon([outlineArray, holeArray])\npaint.draw()\n```\n\n<img src=\"img/polygon_0.png\" />\n\n### Add text\n\n```\nvar firstText = paint.text('Hello world', 20, 30)\n```\n\n```.text(txt,x,y)``` takes three arguments:\n* txt: The text string\n* x: The number of pixels to the right of the top-left corner\n* y: The number of pixels down from the top-left corner\n\n#### Style options\n\n* ```fill```: Any HTML color (defaults to ```'black'```)\n* ```font```: A string with the font-size (followed by ```px```) and the font-family (defaults to ```'12px sans-serif'```)\n* ```stroke```: Any HTML color (defaults to ```undefined```)\n* ```opacity```: A number between 0 and 1 (defaults to ```1```)\n* ```lineWidth```: The width in pixels of the ```stroke``` (defaults to ```1```)\n\nSet styles like this:\n\n```\nfirstText.font = '20px Helvetica'\n``` \n\nExample:\n\n```\nvar paint = new Mala('c', {width: 200, height: 100})\n\n// Add text\nvar firstText = paint.text('Hello world', 20, 30)\n\n// Set style\nfirstText.font = '30px Helvetica'\nfirstText.fill = undefined\nfirstText.stroke = 'red'\n\n// Render\npaint.draw()\n```\n\n<img src=\"img/text.png\" />\n\n### Add an image\n\nIn order to add an image to the canvas, you first need to add the image file\n\n```\nvar myImage = paint.addImageFile('theImage.png')\n```\n\n```.addImageFile(pathToImage)``` takes one argument, the path to the file.\n\n**..............................................................................**\n\n**WARNING** \n\n```paint.draw()``` waits until all images are loaded to draw on canvas. If the path does not lead to a file, the **canvas will not be drawn**. \n\nIf you are doing an animation, use ```.addImageFile()``` before starting the animation. Even if you are not going to use it in the first frames.  \n\n**..............................................................................**\n\nOnce you have added a file with ```.addImageFile()```, you can add the image to the canvas like this:\n\n```\nvar firstImage = paint.image(myImage, 10, 10)\n```\n\n```.image(img, x, y)``` takes three arguments:\n* img: the image loaded with ```.addImageFile()```\n* x: The number of pixels to the right of the top-left corner\n* y: The number of pixels down from the top-left corner\n\nYou can add an image several times using ```.addImageFile()``` once:\n\n```\nvar myImage = paint.addImageFile('theImage.png')\nvar firstImage = paint.image(myImage, 10, 10)\nvar secondImage = paint.image(myImage, 100, 100)\n```\n\n#### Style options\n\n* ```opacity```: A number between 0 and 1 (defaults to ```1```)\n* ```width```: the width in pixels (defaults to the image files naturalWidth)\n* ```height```: the height in pixels (defaults to the image files naturalHeight)\n\nIf only ```width```, or only ```height```, is defined the aspect ratio will be preserved. If both are used, the image will have the defined ```width``` and ```height```.\n\nExamples with this image (100px wide and 80px high)\n\n<img src=\"img/troll.png\">\n\nAdd it to canvas\n\n```\nvar paint = new Mala('c', {width: 200, height: 100})\n\n// Setting a gray background to better see the image on the canvas\nvar r = paint.rect(0,0,200,100)\nr.fill = 'lightgray'\n\n// Add the file\nvar img = paint.addImageFile('troll.png')\n\n// Add the image\nvar img1 = paint.image(img, 0, 0)\n\n// Render\npaint.draw()\n```\n\nIt looks like this:\n\n<img src=\"img/img_0.png\" />\n\nIf we set only the width:\n\n```\nvar img1 = paint.image(img, 0, 0)\nimg1.width = 50\n```\n\n<img src=\"img/img_1.png\" />\n\nIf we set only the height:\n\n```\nvar img1 = paint.image(img, 0, 0)\nimg1.height = 100\n```\n\n<img src=\"img/img_2.png\" />\n\nIf we set both width and height:\n\n```\nvar img1 = paint.image(img, 0, 0)\nimg1.width = 50\nimg1.height = 100\n```\n\n<img src=\"img/img_3.png\" />\n\n### Layers\n\nWhen ```paint.draw()``` is triggered, all objects will be drawn in the order they have been added. The last above the ones before.\n\nIf we draw a rectangle, then a circle. The circle will be on top of the rectangle.\n\n```\nvar paint = new Mala('c', {width: 200, height: 100})\n\nvar rect = paint.rect(0,0,100,50)\nrect.fill = 'blue'\nrect.layer = 1\n\nvar circle = paint.circle(70,60,40)\ncircle.fill = 'red'\n\npaint.draw()\n```\n\nLooks like this:\n\n<img src=\"img/layer_0.png\" />\n\nBy default all added objects are on layer 0 (the bottom layer). If we want the rectangle in the example above to be on top although it is created before:\n\n```\nvar paint = new Mala('c', {width: 200, height: 100})\n\nvar rect = paint.rect(0,0,100,50)\nrect.fill = 'blue'\nrect.layer = 1 // <-- new line setting \"rect\" on layer 1\n\nvar circle = paint.circle(70,60,40)\ncircle.fill = 'red'\n\npaint.draw()\n```\n\nLooks like:\n\n<img src=\"img/layer_1.png\" />\n\n### Animation\n\n**MÃ¥la** does not provide any animation method, you will have to use your own. It does have two features that will help you animating: \n* the ```.move()``` method\n* the ```.show``` property \n\n#### .move()\n\nEvery object (rectangle, circle, line, polygon, text or image) can be \"moved\" with the method ```.move()```.\n\n```.move(x,y)``` takes two arguments:\n* x: the number of pixels by which we want to move the object horizontally\n* y: the number of pixels by which we want to move the object vertically\n\nIf we want to have a square moving across the canvas from left to right:\n\n```\nvar paint = new Mala('c', {width: 200, height: 100}) \n\nvar movingSquare = paint.rect(0,45,10,10) // <-- create the square\n\nsetInterval(function() {\n\tmovingSquare.move(1,0) // <-- move it\n\tpaint.draw() // <-- redraw the canvas to see the move\n},100)\n```\n\nThis will move the square one pixel to the right at every interval. Here the interval is set to 100, a tenth of a second.\n\nAnother way of animating is to move not at a certain interval in milliseconds but every time the screen is refreshed on your device by using ```requestAnimationFrame()``` instead of ```setInterval()```\n\nThis does the same using ```requestAnimationFrame()```. It is a bit faster because the screen is usually refreshed more often than every tenth of a second.\n\n```\nvar paint = new Mala('c', {width: 200, height: 100}) \n\nvar movingSquare = paint.rect(0,45,10,10) // <-- create the square\n\nrequestAnimationFrame(animate)\n\nfunction animate() {\n\tmovingSquare.move(1,0) // <-- move it\n\tpaint.draw() // <-- redraw the canvas to see the move\n\trequestAnimationFrame(animate)\n}\n```\n\n#### .show\n\nEvery object has a ```show``` attribute. By default it is set to ```true```, you can set it to ```false``` when you want the object not to be shown on the next frame but do not want to remove it permanently.\n\nIf we want to have a blinking circle:\n\n```\nvar paint = new Mala('c', {width: 200, height: 100})\n\nvar blinkingCircle = paint.circle(100,50, 20)\n\nsetInterval(function() {\n\n\t// set \"show\" to \"false\" if it is \"true\". If is \"false\", set it to \"true\"\n\n\tif(blinkingCircle.show === true) {\n\t\tblinkingCircle.show = false\n\t} else {\n\t\tblinkingCircle.show = true\n\t}\n\n\tpaint.draw() // <-- redraw\n\n},500)\n```\n\n#### paint.remove()\n\nIf you want to permanently remove an object from the canvas:\n\n```\npaint.remove(blinkingCircle)\n```\n\n## Updates\n\n### 2.0.0\n\nModified ```.polygon()``` API. It now takes an array of arrays of coordinates so that polygons can have holes.\n\n","map-pickas":"# map-pickas\r\n\r\n> NOTE: [map-pickas](https://www.npmjs.com/package/map-pickas) was renamed to [@extra-map/pick-as](https://www.npmjs.com/package/@extra-map/pick-as).\r\n[![NPM](https://nodei.co/npm/map-pickas.png)](https://nodei.co/npm/map-pickas/)\r\n\r\nFilter [map] with specified key(s), like [_.pick()].\r\n\r\n```javascript\r\nconst pickAs = require('map-pickas');\r\n// pickAs(<map>, <key(s)>, [begin=0], [end], [target=new Map()])\r\n// -> <value> (for single key) | <target> (for multiple keys)\r\n\r\nvar m = new Map([['i', 9], ['n', 14], ['c', 3]]);\r\npickAs(m, 'n');\r\n// 14\r\npickAs(m, ['n', 'i']);\r\n// Map {'n'=>14, 'i'=>9}\r\npickAs(m, ['n', 'i', 'c'], 1);\r\n// Map {'i'=>9, 'c'=>3}\r\npickAs(m, ['n', 'i', 'c'], 1, 2);\r\n// Map {'i'=>9}\r\npickAs(m, ['n', 'i', 'c'], 1, 2, new Map([['e', 5]]));\r\n// Map {'e'=>5, 'i'=>9}\r\n```\r\n\r\n\r\n[map]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\r\n[_.pick()]: http://underscorejs.org/#pick\r\n","mathio":"mathIO\r\n======\r\n\r\nmathIO is a (npm module) libary of math algorithms and basic math functions. I try to get as much algorithms that \r\nI know on to this npm module, I also try to get basic math functions that node.js lacks.\r\n\r\nI would love some one to help me out since this is my first npm module!\r\n","megadoc-plugin-reference-graph":"# megadoc-plugin-reference-graph\n","memory-scheduler":"# memory-scheduler\n\nThis is a tool made to help people schedule their learning in a more efficient way. It is very simple to use.\n\nFor more detail on why I make this lib, check this [post][blog].\n\n## Installation\n- npm : `$ npm install memory-scheduler`\n- yarn: `$ yarn add memory-scheduler`\n\n## Guide\nTo learn with this algorithm, two arguments have to be fed to it:\n\n- intervals([int]): intervals between each study session.\n- scroreToProgressChange([int]): how to update the progress based on the score the user gives when reviewing items\n\nFor one item we want to learn, store two data:\n\n- dueDate(int): the next day scheduled to review this item.\n- progress(int): How many times continuously the user has correctly answered this item.\n\nWhen reviewing an item, send these data to the calculate function and get the updated record of that item:\n\n- score(int): how confident the user is with this item.\n- prevRecord(object): the previous record of this item\n- now(int): the date of today\n\nThe answer is deemed as correct only when the score is equal to the length of scroreToProgressChange, and in this circumstance the nextDute is intervals[progress] days after today.\n\nOtherwise, the answer is deemed as incorrect and the next review is scheduled at tomorrow.\n\nIn both cases, progress should be updated in this way: progress+=scroreToProgressChange[score].\n\n\n## Example\n```javascript\nimport  MS from 'memory-scheduler';\n\nconst DAY_IN_MINISECONDS = 24 * 60 * 60 * 1000;\n\nconst today = Math.round(new Date().getTime() / DAY_IN_MINISECONDS);\n\nconst yesterday = today-1;\n\nconst ms = new MS([1, 2, 3, 8, 17], [-3, -1, 1]);\n\nconst record = ms.getInitialRecord(yesterday);\nconst updatedRecord = ms.calculate(1, record, today);\n\n```\n[blog]:http://blog.lotp.xyz/2018/08/12/A-Simple-But-Effective-Spaced-Repitition-Algorithm-MS/\n","meshblu-connector-netscaler":"# meshblu-connector-netscaler\n\n[![Build Status](https://travis-ci.org/octoblu/meshblu-connector-netscaler.svg?branch=master)](https://travis-ci.org/octoblu/meshblu-connector-netscaler)\n[![Test Coverage](https://codecov.io/gh/octoblu/meshblu-connector-netscaler/branch/master/graph/badge.svg)](https://codecov.io/gh/octoblu/meshblu-connector-netscaler)\n[![Dependency status](http://img.shields.io/david/octoblu/meshblu-connector-netscaler.svg?style=flat)](https://david-dm.org/octoblu/meshblu-connector-netscaler)\n[![devDependency Status](http://img.shields.io/david/dev/octoblu/meshblu-connector-netscaler.svg?style=flat)](https://david-dm.org/octoblu/meshblu-connector-netscaler#info=devDependencies)\n[![Slack Status](http://community-slack.octoblu.com/badge.svg)](http://community-slack.octoblu.com)\n\n[![NPM](https://nodei.co/npm/meshblu-connector-netscaler.svg?style=flat)](https://npmjs.org/package/meshblu-connector-netscaler)\n[![Dependency status](http://img.shields.io/david/octoblu/meshblu-connector-netscaler.svg?style=flat)](https://david-dm.org/octoblu/meshblu-connector-netscaler)\n\n\n## Installing\n\n```bash\n$ npm install meshblu-connector-netscaler\n```\n\n### Usage\n\n```bash\n$ npm start\n```\n\nor with debug\n\n```bash\n$ env DEBUG='meshblu-connector-netscaler*' npm start\n```\n\n### Releasing\n\n```bash\n$ npm run package\n```\n\n## License\n\nThe MIT License (MIT)\n\nCopyright 2016 Octoblu Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n","metalsmith-filetree":"# metalsmith-filetree\n\nThis is a plugin for [Metalsmith](http://metalsmith.io/) that creates a tree\nof all matching files in your project and adds a `link` property to each page\nthat contains the file path of the page.\n\n## Usage\n\n\n## License\n\nMIT, see [LICENSE](LICENSE).","mini-vue-sugar":"## Vueæ¨¡æ¿è¯­æ³è½¬å°ç¨åºè¯­æ³\r\næ­¤ç¼è¯å¨å°vueæ¨¡æ¿è¯­æ³è½¬åä¸ºå°ç¨åºæ¨¡æ¿è¯­æ³ï¼è®©ä½ å¯ä»¥ç¨vueæ¨¡æ¿è¯­æ³æ¥åå°ç¨åºï¼\r\nå¦ï¼v-for è½¬ä¸º wx:forï¼@click.stop=\"handler\"è½¬æ¢catchtap=\"handler\"\r\néè¿ç¼è¯å¹¶watché¡¹ç®ä¸ææç.vueæä»¶ï¼å¨.vueæä»¶åç®å½ä¸çæå°ç¨åºæé.jsã.wxmlã.wxssã.jsonæä»¶ï¼\r\næ³¨æï¼**scriptéé¢çjsè¿æ¯è¦æå°ç¨åºæ¹å¼æ¥åï¼å ä¸ºå¹¶æ²¡æå¼å¥vueçè¿è¡æ¶**\r\n\r\n## ä¸ºä»ä¹è¦åè¿ä¸ªç¼è¯å¨\r\n1. åmpvueè¿äºæ¡æ¶ï¼å å¥äºvueçè¿è¡æ¶ï¼å¾éï¼ä¾µå¥æ§å¤ªå¼ºï¼åèè¯´å°ç¨åºçé»è¾å±æ¬èº«å°±ä¸vueç±»ä¼¼ï¼åºæ¬æ»¡è¶³å¼åéè¦\r\n2. ç®åï¼åªåç¼è¯ï¼åªè¦ä¼åvueæ¨¡æ¿å°±è¡\r\n\r\n## ç¨æ³ä¸ï¼å¼å¯ä¸ä¸ªæ°é¡¹ç®\r\n1. npm i mini-vue-sugar -g\r\n2. sugar i æè sugar init   // ä¼çæä¸ä¸ªé»è®¤å«miniappå°ç¨åºé¡¹ç®ï¼ä¹å¯æå®åç§° sugar i my-project\r\n3. cd miniapp\r\n4. å¨vueæä»¶éé¢åæ¨¡æ¿ï¼jsï¼styleï¼å¦ï¼\r\n    ```vue\r\n    <template>\r\n        <div>\r\n            <span v-for=\"(list,index) in lists\" :key=\"index\">{{list.title}}</span>\r\n\r\n            <p v-if=\"type==1\"></p>\r\n            <p v-else-if=\"type==2\"></p>\r\n            <p v-else></p>\r\n            \r\n            <span v-show=\"isTrue></span>\r\n\r\n            <div class=\"header\" :class=\"{active:isActive}\">\r\n                <div>{{username}}</div>\r\n            </div>\r\n\r\n            <div :data-name=\"username\" @click=\"onClick\">\r\n                <div>{{password}}</div>\r\n            </div>\r\n\r\n            <TestComps @test=\"onTest\">\r\n                <template v-slot>\r\n                    <div>ææ¯é»è®¤slot</div>\r\n                </template>\r\n                <template #header>\r\n                    <div>ææ¯header slot</div>\r\n                </template>\r\n            </TestComps>\r\n        </div>\r\n    </template>\r\n\r\n    <script>\r\n        import TestComps from './test.vue'    // **å¼å¥èªå®ä¹ç»ä»¶ï¼ä¼èªå¨çæjsonæä»¶çusingComponentséç½®**\r\n        import TestComps from '/component/test1/test1.vue'\r\n\r\n        let app=getApp()\r\n        import utils from '../modules/utils'   // å¼å¥æ¨¡åjs\r\n        \r\n        // **æ³¨æjsçåæ³è¿æ¯æå°ç¨åºçåæ³æ¥åï¼ç¼è¯å¨åªåæ¨¡æ¿ç¼è¯ï¼ä¸æ¹åè¿è¡æ¶**ï¼é¤å¼å¥çèªå®ä¹ç»ä»¶ä¼è¢«ç¨äºçæ.jsonæä»¶å¤ï¼\r\n        // å¶ä»çé½ä¸ä¼å\r\n        Compoennt({\r\n            data() {\r\n                return {\r\n                username: \"aliarmo\",\r\n                password: \"123\"\r\n                };\r\n            }\r\n        });\r\n    </script>\r\n\r\n    <style>\r\n        .box {\r\n            color: #123123;\r\n            font-size: 12px;\r\n            width: 100px;\r\n            height: 200px;\r\n            margin: 20px;\r\n        }\r\n        .content {\r\n            display: inline-block;\r\n            padding: 12px;\r\n        }\r\n    </style>\r\n\r\n    ```\r\n5. sugar    // ä¼ç¼è¯å¹¶watchææ.vueæä»¶ï¼æç»å¨.vueçåç®å½ä¸çæå°ç¨åºæéç.jsã.wxmlã.wxssã.jsonæä»¶\r\n\r\n## ç¨æ³äºï¼æ¥å¥å·²å­å¨é¡¹ç®\r\n1. npm i mini-vue-sugar -g\r\n2. åæ¢å°å·²å­å¨é¡¹ç®ç®å½ä¸ï¼æ§è¡ sugar\r\n3. æ°å»º.vueæä»¶ï¼åæ¨¡æ¿åä¸å¡é»è¾ï¼ä¸ä¿å­ä½ å°±ä¼åç°å¤åºå°ç¨åºæéç.jsã.wxmlã.wxssã.jsonæä»¶\r\n\r\n## åç\r\n1. ä¾æ¬¡è¯»åæ¯ä¸ª.vueæä»¶ï¼ç¶åè§£ææä»¶éé¢çtemplateï¼scriptï¼style\r\n2. å¯¹templateï¼è¿è¡æä»¤åäºä»¶ç»å®è½¬åï¼æåè¿è¡åç´ è½¬åï¼çæ.wxmlæä»¶ï¼å¦æåæ¥æ.wxmlä¼è¦ç\r\n3. å¯¹scriptï¼è§£æimportè¿æ¥çç»ä»¶ï¼çæå°ç¨åºæéç.jsonéç½®æä»¶ï¼å¦æåæ¥æ.jsonï¼ä¼è¿è¡mergeï¼å»é¤importç»ä»¶çä»£ç ï¼çæ.jsæä»¶ï¼å¦æåæ¥æjsæä»¶ï¼ä¼è¦çï¼æ³¨æï¼**å©ä½çscriptåæ³è¿æ¯è¦æå°ç¨åºçæ¹å¼æ¥åï¼å ä¸ºå¹¶æ²¡æå¼å¥vueçè¿è¡æ¶**\r\n4. å¯¹styleï¼ç´æ¥çæ.wxssæä»¶ï¼å¦æåæ¥æ.wxssæä»¶ï¼ä¼è¦ç\r\n5. çæµ.vueæä»¶åå¨ï¼éå¤1-4æ­¥éª¤\r\n\r\n## ä¸åç¹\r\n1. v-bind:class=\"classObject\"                // æ³¨æåºå«ï¼å°ç¨åºå¹³å°è®¤ä¸ºclassObjectä»£è¡¨å·ä½ç±»åçå­ç¬¦ä¸²\r\n2. v-bind:style=\"styleObject\"                // æ³¨æåºå«ï¼å°ç¨åºå¹³å°è®¤ä¸ºstyleObjectä»£è¡¨å·ä½æ ·å¼çå­ç¬¦ä¸²\r\n3. .vueæä»¶çscriptæ¨¡åè¦æå°ç¨åºæ¹å¼æ¥åï¼å ä¸ºå¹¶æ²¡æå¼å¥vueçè¿è¡æ¶,ç»ä»¶è¿æ¯éè¿importæ¹å¼å¼å¥ï¼ç¼è¯å¨ä¼è§£æå¼å¥çç»ä»¶ï¼ç¶åèªå¨çæ.jsonéé¢çusingComponentséç½®\r\n\r\n## tips\r\n1. å¯è½æåå­¦åç°äºï¼é¡¹ç®åå¸çæ¶åå¹¶ä¸éè¦è¿ä¸ª.vueæä»¶ï¼é£è¿ä¸ªæä»¶ä¼ä¸ä¼è¢«ä¸ä¼ äºå¢ï¼è¿ä¸ªä¸éè¦æå¿ï¼.vueæä»¶ä¸ä¼è¢«å°ç¨åºIDEæåä¸ä¼ \r\n\r\n## TODO-LIST\r\n1. ç¾åçæçå°ç¨åºæ¨¡æ¿ï¼ç®åæå¾å¤ç©ºæ ¼ï¼æ¢è¡æ²¡æå»æ\r\n2. è§£æåºçjsæ·»å v-modelç­çå®ç°ï¼éè¦çåå­¦æissueï¼æä¼èèå®ç°ï¼è¿éå¯æ³è±¡ç©ºé´è¿å¾å¤\r\n3. æ ·å¼ç±é©¼å³°è½¬ç±-åéï¼marginTopè½¬margin-top\r\n4. å¯ä»¥èèæ¯æ v-bind:class=\"[activeClass, errorClass]\"","mkd-search":"# mkd-search","mochito":"[![Build Status](https://travis-ci.org/dchambers/mochito.png)](https://travis-ci.org/dchambers/mochito)\n\n# Mochito\n\nMochito is a hygenic [JsMockito](http://jsmockito.org/) / [JsHamcrest](http://danielmartins.ninja/jshamcrest/) wrapper for modern test frameworks like [Mocha](http://mochajs.org/). It aims to make [JsMockito](http://jsmockito.org/) more competitive when compared with [Sinon.JS](http://sinonjs.org/).\n\n\n## Rationale\n\nDespite its popularity, Sinon.JS has a number of negatives, including:\n\n  1. You can't assert on a spy or stub; you can only ask a question that returns\n     a boolean, which provides no error info if it fails.\n  2. but, ... you have to use a spy or stub if you need a function rather\n     than an object.\n  3. Mocks have to define all expectations up front (leading to overly tight\n     specifications), rather than allowing assertions to be made post-hoc.\n  4. As a consequence, you can't do\n     [Given-When-Then](https://en.wikipedia.org/wiki/Given-When-Then) style\n     testing with Sinon.JS because what would otherwise be the _then_ clause\n     must appear before the _when_ clause.\n  5. Mocked methods are only given the ability to verify expectations after some\n     expectations have been added, often preventing the use of the mock when\n     it's first created.\n  6. The `mock()` function returns a configurator object rather than the mock\n     itself, which is somewhat confusing.\n  7. You need to remember to verify your expectations in your tear down methods\n     or tests may pass when they shouldn't.\n  8. Its deep equality checking method doesn't consider an array to be\n     the same as an argument array containing the same items.\n\nUnfortunately, JsMockito has some downsides too (which Mochito fixes):\n\n  1. It uses lots of global variables rather than allowing you to require a\n     single item.\n  2. It's difficult to integrate into your testing framework &mdash; as a\n     consequence of using globals.\n  3. It requires you to separately include JsHamcrest, but doesn't work\n     if you include a version that isn't exactly the version it's using.\n  4. The error messages don't read very well because JsMockito throws strings\n     which are subsequently converted to `Error` instances by the containing\n     test framework (will be fixed by\n     [this issue](https://github.com/cleishm/jsmockito/issues/38)).\n\n\n## Usage\n\nUsing _mochito_ is simple, for example:\n\n```js\nvar mochito = require('mochito');\n\ndescribe('mochito', function() {\n  it('allows mocking to be performed with no set-up required', function() {\n    var mock = mochito.mock({\n      doSomething: function() {}\n    });\n\n    mock.doSomething('x', 'y');\n    mock.doSomething('z', 'y');\n\n    mochito.verify(mock, mochito.once()).doSomething('x', 'y');\n    mochito.verify(mock, mochito.once()).doSomething('z', 'y');\n    mochito.verify(mock, mochito.times(2)).doSomething(mochito.anything(), 'y');\n  });\n});\n```\n\n## Global Functions\n\nIf you really want the JsHamcrest & JsMockito functions to be available\nglobally, you can simply write:\n\n```js\nmochito.installTo(global);\n```\n","mongo-edu":"mongo-edu\n=========\n\n[![NPM](https://nodei.co/npm/mongo-edu.png?compact=true)](https://nodei.co/npm/mongo-edu/)\n\n[![NPM version](https://badge.fury.io/js/mongo-edu.png)](http://badge.fury.io/js/mongo-edu)\n[![Dependency Status](https://gemnasium.com/przemyslawpluta/mongo-edu.png)](https://gemnasium.com/przemyslawpluta/mongo-edu)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/przemyslawpluta/mongo-edu?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\nSelect and download videos and handouts from [university.mongodb.com](https://university.mongodb.com) courses\n\n## Apps\n\nDepending on your needs you can download MongoDB University [ios](https://itunes.apple.com/us/app/mongodb-university/id1009365760?mt=8) or [android](https://play.google.com/store/apps/details?id=com.mongodb.university.mongou) app.\n\n## Prerequisite\n\n```\npy 2.7 or 3.x\n```\n\n## Installation\n\n```\nnpm install mongo-edu -g\n```\n\nor see [detailed installation guide](https://github.com/przemyslawpluta/mongo-edu/wiki/Installation) in the wiki pages\n\n## Usage\n\n```\n$ mongo-edu --help\n\nOptions:\n  -d          download path                             [required]\n  -u          email address\n  --py        pass switch to point to Python\n  --ncc       no check certificate for py3.x < py3.4.x\n  --verbose   print debug info\n  --retry     retry time in seconds if connection / download fails\n\nVideos:\n  --cw        switch from wiki video lists (default) to courseware\n  --cwd       same as --cw and dumps list of videos to file in -d\n  --co        arrange video files in correct order of the courseware\n  --cc        get closed captions\n  --cco       get only closed captions without downloading videos\n  --hq        get high quality videos\n\nHandouts:\n  -h          switch from videos (default) to handouts\n  --uz        unzip handout files\n\nProxy:\n  --proxy     pass proxy switch for video download\n  --test      use with --proxy to test if usable\n\nPresets:\n  --save      save presets\n  --load      load presets\n\n```\n\n## Select and download\n\n### Videos and closed captions\n\nDownload all available videos from lists present in the `wiki` pages for any given week. If no lists are present in `wiki` add `--cw` to search through the main courseware pages.\n\nAdd `--cc` to download closed captions with the videos and `--hq` to get high quality videos. Use with `--co` to sequence the video files in order of the wiki ( based on the order of the files present in the wiki lists ) or courseware ( when used with `--cw` preserves the courseware order ).\n\n![screenshot](https://raw.github.com/przemyslawpluta/mongo-edu/gh-pages/images/edu-videos.gif)\n\n### Videos via proxy\n\nYou can download videos via proxy tunnel. To test if proxy is usable just pass `--proxy http://proxy_ip_address:proxy_port_number --test` to download a test video via specified proxy. If succesfull just remove `--test` and pass the rest of the required flags.\n\n### Handouts\n\nAdd `-h` to download all available handouts present in the `syllabus` pages for any given week and `--uz` to unzip files after the download.\n\n![screenshot](https://raw.github.com/przemyslawpluta/mongo-edu/gh-pages/images/edu-handouts.gif)\n\n## Save / Load presets\n\nYou can save presets for use for later. To do so just add `--save my_preset_name` at the end of your call sequence. To recall saved presets just specify `--load ..`.\n\n![screenshot](https://raw.github.com/przemyslawpluta/mongo-edu/gh-pages/images/me-presets.gif)\n\n## License\nMIT\n","mongo-live":"# Mongo Live\n\n[![Build Status](https://travis-ci.org/cayasso/mongo-live.png?branch=master)](https://travis-ci.org/cayasso/mongo-live)\n[![NPM version](https://badge.fury.io/js/mongo-live.png)](http://badge.fury.io/js/mongo-live)\n\nListening to MongoDB live changes using oplog.\n\n## Instalation\n\n``` bash\n$ npm install mongo-live\n```\n\n## Usage\n\n``` javascript\nvar MongoLive = require('mongo-live');\nvar live = new MongoLive({\n  host: '127.0.0.1',\n  port: 27017,\n  database: 'blog'\n});\n\nvar posts = live\n.query('posts')\n.select('title body comments')\n.exec(function (error, stream) {\n\n  stream.on('data', function (data) {\n\n    if (error) {\n      // handle error\n      return;\n    }\n      \n    if ('insert' === data.operation) {\n      console.log('inserted', data);\n    }\n\n    if ('update' === data.operation) {\n      console.log('updated', data);\n    }\n\n    if ('remove' === data.operation) {\n      console.log('removed', data);\n    }\n\n    console.log('======== result ======>', data);\n\n  });\n\n});\n\n```\n\nYou can also listen to events like this:\n\n```javascript\nvar posts = live\n.query('posts')\n.select('title body')\n.exec();\n\nposts.on('insert', function(data){\n  console.log('inserted', data);\n});\n\nposts.on('update', function(data){\n  console.log('updated', data);\n});\n\nposts.on('remove', function(data){\n  console.log('removed', data);\n});\n\nposts.on('data', function(data){\n  if ('insert' === data.operation) {\n    console.log('inserted', data);\n  }\n\n  if ('update' === data.operation) {\n    console.log('updated', data);\n  }\n\n  if ('remove' === data.operation) {\n    console.log('removed', data);\n  }\n});\n```\n\nThen later any `find` query will be cached for 60 seconds.\n\nYou can also enable caching programatically by using the `cache` method directly from the query instance:\n\n``` javascript\nvar Person = mongoose.model('Person');\n\nPerson.find({ active: true })\n.cache(50000) // cache for 50 seconds\n.exec(function (err, docs) { /* ... */\n  \n  if (err) throw error;\n\n  console.log(docs.ttl) // time left for expiration in ms\n  console.log(docs.stored); // timestamp this query was cached\n  console.log(docs);\n\n});\n\n```\n\n## TODO\n\nAdd tests.\n\n## Credits\n\nThis module use [mongo-watcher](https://github.com/torchlightsoftware/mongo-watcher) for watching the mongodb oplog.\n\n## Run tests\n\n``` bash\n$ make test\n```\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2013 Jonathan Brumley &lt;cayasso@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","mongodb-js-repo-list":"# mongodb-js-repo-list [![travis][travis_img]][travis_url] [![npm][npm_img]][npm_url]\n\n> List repositories in a specified GitHub Organization\n\nThis module hits the Github API and returns a list of repositories in a specified organization. At the command line, it must be called with a Github oauth access token (following -t). Options include :\n\n- `format` (json, yaml, table)\n- `grep` (a word to filter the search on)\n- `out` (output to file)\n- `keys` (choose data about each repository to see)\n- `forked` (include forked repositories)\n\n## Usage\n\n```javascript\nmongodb-js-repo-list <organization> -t <oauth token> [options]\n```\n\n## Example\n\n```javascript\nmongodb-js-repo-list mongodb-js -t <oauth token> --format table --grep mongo\n```\n\n## License\n\nApache 2.0\n\n[travis_img]: https://img.shields.io/travis/mongodb-js/mongodb-js-repo-list.svg\n[travis_url]: https://travis-ci.org/mongodb-js/mongodb-js-repo-list\n[npm_img]: https://img.shields.io/npm/v/mongodb-js-repo-list.svg\n[npm_url]: https://npmjs.org/package/mongodb-js-repo-list\n","mrg":"Copyright (C) Infinity\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n","multiplexing-log4js":"# multiplexing-log4js\r\n\r\nA multiplexing log4js logger component\r\n\r\nYou can send logs over socket, and controll the appender's state, and event trigger listeners.\r\n\r\nExample:\r\n\r\nserver side:\r\n\r\n```js\r\nlog4js.configure({\r\n    appenders: {\r\n        file: MultiplexingFileAppender.createConfig(filename, pattern, listener),\r\n        server: MultiplexingSocketServerAppender.createConfig(port)\r\n    },\r\n    categories: {\r\n        default: { appenders: [\"file\"], level: \"all\" }\r\n    }\r\n})\r\n```\r\n\r\nclient side:\r\n\r\n```js\r\nlog4js.configure({\r\n    appenders: {\r\n        socket: MultiplexingSocketAppender.createConfig(\"127.0.0.1\", 1234),\r\n    },\r\n    categories: {\r\n        default: { appenders: [\"socket\"], level: \"all\" }\r\n    }\r\n})\r\nconst logger = log4js.getLogger(\"test\")\r\nlogger.info(\"test info\") // normal logging, will be writed to file as server side\r\nlogger.log(\"CMD\", \"hold\") // set MultiplexingFileAppender state to \"hold\", and it won't roll new file.\r\nlogger.log(\"CMD\", \"release\") // relase hold\r\nlogger.log(\"EVENT\", \"something\") // fire the listener at server side\r\n```","mustring":"# Î¼String [![Build Status](https://travis-ci.org/dfcreative/mustring.svg?branch=master)](https://travis-ci.org/dfcreative/mustring) [![Code Climate](https://codeclimate.com/github/dfcreative/mustring/badges/gpa.svg)](https://codeclimate.com/github/dfcreative/mustring) <a href=\"UNLICENSE\"><img src=\"http://upload.wikimedia.org/wikipedia/commons/6/62/PD-icon.svg\" width=\"20\"/></a>\r\n\r\nMicro string utils:\r\n\r\n* `capfirst`\r\n* `dashed`\r\n* `camel`\r\n* `prefix(a, pfx)` - add prefix\r\n* `unprefix(a, pfx)` - remove prefix\r\n\r\nYou can require selectively as `require('mustring/<method>')`\r\n\r\n[![NPM](https://nodei.co/npm/mustring.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/mustring/)","myratinglib":"# Myratinglib\n\nThis library was generated with [Angular CLI](https://github.com/angular/angular-cli) version 7.2.0.\n\n## Code scaffolding\n\nRun `ng generate component component-name --project myratinglib` to generate a new component. You can also use `ng generate directive|pipe|service|class|guard|interface|enum|module --project myratinglib`.\n> Note: Don't forget to add `--project myratinglib` or else it will be added to the default project in your `angular.json` file. \n\n## Build\n\nRun `ng build myratinglib` to build the project. The build artifacts will be stored in the `dist/` directory.\n\n## Publishing\n\nAfter building your library with `ng build myratinglib`, go to the dist folder `cd dist/myratinglib` and run `npm publish`.\n\n## Running unit tests\n\nRun `ng test myratinglib` to execute the unit tests via [Karma](https://karma-runner.github.io).\n\n## Further help\n\nTo get more help on the Angular CLI use `ng help` or go check out the [Angular CLI README](https://github.com/angular/angular-cli/blob/master/README.md).\n","nanocyte-component-function":"# nanocyte-component-function\n\n[![Build Status](https://travis-ci.org/octoblu/nanocyte-component-function.svg?branch=master)](https://travis-ci.org/octoblu/nanocyte-component-function)\n[![Test Coverage](https://codecov.io/gh/octoblu/nanocyte-component-function/branch/master/graph/badge.svg)](https://codecov.io/gh/octoblu/nanocyte-component-function)\n[![Dependency status](http://img.shields.io/david/octoblu/nanocyte-component-function.svg?style=flat)](https://david-dm.org/octoblu/nanocyte-component-function)\n[![devDependency Status](http://img.shields.io/david/dev/octoblu/nanocyte-component-function.svg?style=flat)](https://david-dm.org/octoblu/nanocyte-component-function#info=devDependencies)\n[![Slack Status](http://community-slack.octoblu.com/badge.svg)](http://community-slack.octoblu.com)\n\n[![NPM](https://nodei.co/npm/nanocyte-component-function.svg?style=flat)](https://npmjs.org/package/nanocyte-component-function)\n[![Build Status](https://travis-ci.org/octoblu/nanocyte-component-function.svg?branch=master)](https://travis-ci.org/octoblu/nanocyte-component-function)\n[![Code Climate](https://codeclimate.com/github/octoblu/nanocyte-component-function/badges/gpa.svg)](https://codeclimate.com/github/octoblu/nanocyte-component-function)\n[![Test Coverage](https://codeclimate.com/github/octoblu/nanocyte-component-function/badges/coverage.svg)](https://codeclimate.com/github/octoblu/nanocyte-component-function)\n[![npm version](https://badge.fury.io/js/nanocyte-component-function.svg)](http://badge.fury.io/js/nanocyte-component-function)\n[![Gitter](https://badges.gitter.im/octoblu/help.svg)](https://gitter.im/octoblu/help)\n","nativescript-rotate-3d":"# NativeScript Rotate3D\n\nThis is a nativescript plugin to add 3d rotaion (i.e around X, Y and Z).\n\n<img src=\"https://github.com/hamdiwanis/nativescript-rotate-3d/raw/master/screenshots/demo.png\" height=\"364px\" />\n\n## Installation\n```bash\ntns plugin add nativescript-rotate-3d\n```\n\n### Example\n\n```\n<Rotate3D rotate=\"40\" axis=\"Y\" cameraDistance=\"2000\">\n     /* Whatever you want */\n</Rotate3D>\n```\n\n## Usage\n\nSince we're subclassing `StackLayout`, you can add `<Rotate3D>` to your view at any place where you'd otherwise use a `StackLayout`.\n\nIn addition to any properties you can already set on a `StackLayout` you should add:\n\n|Param| Description | default|\n|---|---|---|\n|rotateAxis| the axis whic the view will rotate around (X, Y, Z)| Z\n|cameraDistance| the distance between the view and view camera| 2000 |\n\n## Next\n- [x] implement rotaion in X, Y, Z.\n- [ ] handel animation using view animate method.\n- [ ] improve procpective relation between ios and android.\n\n## Contribute\nif you want to help improve the plugin you can consider it yours and make as PRs as you want :)\n\n## Get Help\nPlease, use [github issues](https://github.com/hamdiwanis/nativescript-rotate-3d/issues) strictly for [reporting bugs](CONTRIBUTING.md#reporting-bugs) or [requesting features](CONTRIBUTING.md#requesting-new-features).\n\n## Contact\nTwitter: [hamdiwanis](https://twitter.com/hamdiwanis)  \\\nEmail: hamdiwanis@hotmail.com","nes-core":"# Network Events Simulator\n\n[![CircleCI](https://circleci.com/gh/dannielhugo/nes-core.svg?style=svg)](https://circleci.com/gh/dannielhugo/nes-core)\n\n> NES Core Modules\n\n:warning: This project is Under Development\n\nThis project will make use of [Typescript clean architecture scaffold](https://github.com/dannielhugo/typescript-clean-architecture)\n\n## Commit Message Guidelines\n\n> Based on [Angular commit message guideline](https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-commit-message-guidelines)\n\n```\n<type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n```\n\nThe **header** is mandatory and the **scope** of the header is optional.\n\n### Type\nMust be one of the following:\n\n* **build**: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)\n* **ci**: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)\n* **docs**: Documentation only changes\n* **feat**: A new feature\n* **fix**: A bug fix\n* **perf**: A code change that improves performance\n* **refactor**: A code change that neither fixes a bug nor adds a feature\n* **style**: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\n* **test**: Adding missing tests or correcting existing tests\n* **chore**: When updating tasks\n\n## Related Algorithms\nDistribution algorithms\n\nhttps://bost.ocks.org/mike/algorithms/\n\nhttps://bl.ocks.org/mbostock\n\nSearch nearest algorithm using quadtree\n\nhttps://github.com/d3/d3-quadtree\n","new-rutracker-api":"# New Rutracker API Ð´Ð»Ñ Node.js\n\nÐÐ°Ð½Ð½ÑÐ¹ Ð¼Ð¾Ð´ÑÐ»Ñ -- ÑÐ¾ÑÐº Ð¼Ð¾Ð´ÑÐ»Ñ ```rutracker-api``` Ð°Ð²ÑÐ¾ÑÑÑÐ²Ð° ÐÐ¸ÐºÐ¸ÑÑ ÐÑÑÐ°ÑÐ¾Ð²Ð°.\n\nÐÐ°Ð½Ð½ÑÐ¹ Ð¼Ð¾Ð´ÑÐ»Ñ Ð¿Ð¾Ð·Ð²Ð¾Ð»ÑÐµÑ Ð¸ÑÐºÐ°ÑÑ Ð¿Ð¾ ÑÐ°Ð·Ð´Ð°ÑÐ°Ð¼ ÑÑÐµÐºÐµÑÐ° Rutracker.org. ÐÐ¾ÑÐºÐ¾Ð»ÑÐºÑ Ð¿Ð¾Ð¸ÑÐº Ð·Ð°Ð¿ÑÐµÑÑÐ½ Ð´Ð»Ñ Ð½ÐµÐ·Ð°ÑÐµÐ³Ð¸ÑÑÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð½ÑÑ Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»ÐµÐ¹, ÑÐ°ÐºÐ¶Ðµ Ð¿Ð¾Ð´Ð´ÐµÑÐ¶Ð¸Ð²Ð°ÐµÑcÑ Ð¸ Ð°Ð²ÑÐ¾ÑÐ¸Ð·Ð°ÑÐ¸Ñ.\n\n## Ð£ÑÑÐ°Ð½Ð¾Ð²ÐºÐ°\nÐ£ÑÑÐ°Ð½Ð¾Ð²Ð¸ÑÐµ Ð¿Ð°ÐºÐµÑ Ð² Ð½ÑÐ¶Ð½ÑÑ Ð´Ð¸ÑÐµÐºÑÐ¾ÑÐ¸Ñ Ñ Ð¿Ð¾Ð¼Ð¾ÑÑÑ ```npm install new-rutracker-api``` (Ð¿ÑÐµÐ´Ð¿Ð¾Ð»Ð°Ð³Ð°ÐµÑÑÑ, ÑÑÐ¾ Node.js Ð¸ Ð¿Ð°ÐºÐµÑÐ½ÑÐ¹ Ð¼ÐµÐ½ÐµÐ¶Ð´ÐµÑ npm Ñ Ð²Ð°Ñ ÑÐ¶Ðµ ÑÑÑÐ°Ð½Ð¾Ð²Ð»ÐµÐ½Ñ). ÐÐ¾ÑÐ»Ðµ ÑÑÑÐ°Ð½Ð¾Ð²ÐºÐ¸ Ð¼Ð¾Ð´ÑÐ»Ñ Ð¸ Ð·Ð°Ð³ÑÑÐ·ÐºÐ¸ ÐµÐ³Ð¾ Ð·Ð°Ð²Ð¸ÑÐ¸Ð¼Ð¾ÑÑÐµÐ¹, New Rutracker API Ð³Ð¾ÑÐ¾Ð² Ðº Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°Ð½Ð¸Ñ.\n\n## ÐÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°Ð½Ð¸Ðµ\nÐ Ð¿ÐµÑÐ²ÑÑ Ð¾ÑÐµÑÐµÐ´Ñ Ð½ÐµÐ¾Ð±ÑÐ¾Ð´Ð¸Ð¼Ð¾ ÑÐºÐ¾Ð¿Ð¸ÑÐ¾Ð²Ð°ÑÑ Ð¿Ð°Ð¿ÐºÑ Ñ New Rutracker API Ð² Ð²Ð°Ñ Ð¿ÑÐ¾ÐµÐºÑ. ÐÐ°Ð»ÐµÐµ, Ð¿Ð¾Ð´ÐºÐ»ÑÑÐ¸ÑÐµ Ð¼Ð¾Ð´ÑÐ»Ñ Ð² Ð½ÑÐ¶Ð½Ð¾Ð¼ Ð²Ð°Ð¼ JS-ÑÐ°Ð¹Ð»Ðµ:\n\n```js\nvar RutrackerApi = require('new-rutracker-api');\n```\n\nÐ¡Ð»ÐµÐ´ÑÑÑÐ¸Ð¹ ÑÑÐ°Ð¿ â Ð°Ð²ÑÐ¾ÑÐ¸Ð·Ð°ÑÐ¸Ñ Ð¿ÑÐ¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ñ. Ð¡Ð´ÐµÐ»Ð°ÑÑ ÑÑÐ¾ Ð¼Ð¾Ð¶Ð½Ð¾ Ð½ÐµÐ¿Ð¾ÑÑÐµÐ´ÑÑÐ²ÐµÐ½Ð½Ð¾ Ð¿ÑÐ¸ Ð²ÑÐ·Ð¾Ð²Ðµ ÐºÐ¾Ð½ÑÑÑÑÐºÑÐ¾ÑÐ°, Ð»Ð¸Ð±Ð¾ Ð¿Ð¾Ð·Ð¶Ðµ â Ñ Ð¿Ð¾Ð¼Ð¾ÑÑÑ Ð¼ÐµÑÐ¾Ð´Ð° Ð¾Ð±ÑÐµÐºÑÐ° ```login```.\n\n```js\nvar username = 'username',\n    password = 'password';\n\n// ÐÐ°ÑÐ¸Ð°Ð½Ñ â1: Ð¿ÑÐ¸ Ð²ÑÐ·Ð¾Ð²Ðµ ÐºÐ¾Ð½ÑÑÑÑÐºÑÐ¾ÑÐ°\nvar rutracker = new RutrackerApi({\n    username: username,\n    password: password\n});\n\n// ÐÐ°ÑÐ¸Ð°Ð½Ñ â2: Ñ Ð¿Ð¾Ð¼Ð¾ÑÑÑ Ð¼ÐµÑÐ¾Ð´Ð° 'login'\nvar rutracker = new RutrackerApi();\nrutracker.login(username, password);\n```\n\nÐÐ¾Ð¼Ð½Ð¸ÑÐµ, ÑÑÐ¾ Ð´Ð»Ñ ÑÐ¸Ð½ÑÑÐ¾Ð½Ð¸Ð·Ð°ÑÐ¸Ð¸ Ð²Ñ Ð¼Ð¾Ð¶ÐµÑÐµ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÑ ÑÐ¾Ð±ÑÑÐ¸Ðµ ```login```. ÐÐ¾ÑÐ»Ðµ ÑÐ¾Ð³Ð¾, ÐºÐ°Ðº Ð¿ÑÐ¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ðµ Ð¿Ð¾Ð»ÑÑÐ¸Ð»Ð¾ ÑÐ¾ÐºÐµÐ½, Ð¼Ñ Ð¼Ð¾Ð¶ÐµÐ¼ Ð½Ð°ÑÐ°ÑÑ Ð¸ÑÐºÐ°ÑÑ ÑÐ°Ð·Ð´Ð°ÑÐ¸. ÐÐ¾Ð¸ÑÐº Ð¾ÑÑÑÐµÑÑÐ²Ð»ÑÐµÑÑÑ ÑÐµÑÐµÐ· Ð¼ÐµÑÐ¾Ð´ ```search```:\n\n```js\nvar query = \"YOUR QUERY HERE\",\n    callback = console.log.bind(console);\n\nrutracker.search(query, callback);\n```\n\nÐÐ¾Ð¿Ð¾Ð»Ð½Ð¸ÑÐµÐ»ÑÐ½Ð¾ Ð¼Ð¾Ð¶Ð½Ð¾ Ð·Ð°Ð´Ð°ÑÑ Ð¿Ð°ÑÐ°Ð¼ÐµÑÑÑ Ð¿Ð¾Ð¸ÑÐºÐ° Ð² Ð¾Ð±ÑÐµÐºÑÐµ ```options```:\n\n```js\nvar query = \"YOUR QUERY HERE\",\n    options = {\n      forums: [1000, 1001], // Ð¼Ð°ÑÑÐ¸Ð² id ÑÐ¾ÑÑÐ¼Ð¾Ð²\n      sortBy: 'seeds', // ÑÐ¼. Ð½Ð¸Ð¶Ðµ\n      sortOrder: 'desc' // Ð¸Ð»Ð¸ 'asc'\n    },\n    callback = console.log.bind(console);\n\nrutracker.search(query, options, callback);\n```\n\nÐÐ¾Ð·Ð¼Ð¾Ð¶Ð½Ð° ÑÐ¾ÑÑÐ¸ÑÐ¾Ð²ÐºÐ° Ð¿Ð¾ ÑÐ»ÐµÐ´ÑÑÑÐ¸Ð¼ Ð¿Ð¾Ð»ÑÐ¼:\n- ```created``` -- Ð·Ð°ÑÐµÐ³Ð¸ÑÑÑÐ¸ÑÐ¾Ð²Ð°Ð½\n- ```name``` -- Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ðµ ÑÐµÐ¼Ñ\n- ```downloads``` -- ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÑÐºÐ°ÑÐ¸Ð²Ð°Ð½Ð¸Ð¹\n- ```seeds``` -- ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÑÐ¸Ð´Ð¾Ð²\n- ```leeches``` -- ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð»Ð¸ÑÐµÐ¹\n- ```size``` -- ÑÐ°Ð·Ð¼ÐµÑ\n- ```updated``` -- Ð¿Ð¾ÑÐ»ÐµÐ´Ð½ÐµÐµ ÑÐ¾Ð¾Ð±ÑÐµÐ½Ð¸Ðµ\n\n\nÐ callback Ð±ÑÐ´ÐµÑ Ð¿ÐµÑÐµÐ´Ð°Ð½ Ð¾Ð±ÑÐµÐºÑ Ð²Ð¸Ð´Ð°:\n```js\n[\n  {\n    state: 'Ð¿ÑÐ¾Ð²ÐµÑÐµÐ½Ð¾',\n    id: 'XXXXXXXX'\n    category: 'CATEGORY_NAME',\n    title: 'TITLE',\n    author: 'AUTHOR_NAME',\n    size: '1.07 GB',\n    seeds: '7123',\n    leechs: '275',\n    url: 'rutracker.org/forum/viewtopic.php?t=XXXXXX'\n  }, ...\n]\n```\n\nÐÐ°ÑÑÐ¸Ð½Ð³ Ð¾ÑÑÑÐµÑÑÐ²Ð»ÑÐµÑÑÑ Ñ Ð¿Ð¾Ð¼Ð¾ÑÑÑ Ð¼ÐµÑÐ¾Ð´Ð° ```parseSearch```. ÐÑÐ¸ Ð¶ÐµÐ»Ð°Ð½Ð¸Ð¸ Ð¼Ð¾Ð¶Ð½Ð¾ ÑÐ´ÐµÐ»Ð°ÑÑ ÑÐ°Ðº, ÑÑÐ¾Ð±Ñ Ð² callback Ð¿ÐµÑÐµÐ´Ð°Ð²Ð°Ð»Ð°ÑÑ ÑÑÑÐ°Ñ HTML-ÑÑÑÐ°Ð½Ð¸ÑÐ°. ÐÐ»Ñ ÑÑÐ¾Ð³Ð¾ ÑÐ²Ð¾Ð¹ÑÑÐ²Ñ ```rutracker.parseData``` Ð½ÑÐ¶Ð½Ð¾ Ð¿ÑÐ¸ÑÐ²Ð¾Ð¸ÑÑ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ ```false```.\n\n## Ð¡Ð¾Ð±ÑÑÐ¸Ñ\n### login\nÐ¡ÑÐ°Ð±Ð°ÑÑÐ²Ð°ÐµÑ Ð¿ÑÐ¸ ÑÑÐ¿ÐµÑÐ½Ð¾Ð¹ Ð°Ð²ÑÐ¾ÑÐ¸Ð·Ð°ÑÐ¸Ð¸ Ð¿ÑÐ¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ñ.\n\n### login-error\nÐ¡ÑÐ°Ð±Ð°ÑÑÐ²Ð°ÐµÑ, ÐµÑÐ»Ð¸ ÑÐºÐ°Ð·Ð°Ð½Ð½ÑÐµ Ð»Ð¾Ð³Ð¸Ð½ Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ Ð½Ðµ Ð¿Ð¾Ð´Ð¾ÑÐ»Ð¸.\n\n### error\nÐ¡ÑÐ°Ð½Ð´Ð°ÑÑÐ½Ð¾Ðµ ÑÐ¾Ð±ÑÑÐ¸Ðµ. ÐÐ°Ð¸Ð±Ð¾Ð»ÐµÐµ Ð²ÐµÑÐ¾ÑÑÐ½ÑÐµ Ð¿ÑÐ¸ÑÐ¸Ð½Ñ Ð²Ð¾Ð·Ð½Ð¸ÐºÐ½Ð¾Ð²ÐµÐ½Ð¸Ñ â Ð¸ÑÑÐµÑÐµÐ½Ð¸Ðµ Ð²ÑÐµÐ¼ÐµÐ½Ð¸ Ð¾Ð¶Ð¸Ð´Ð°Ð½Ð¸Ñ Ð¾ÑÐ²ÐµÑÐ° Ð¾Ñ ÑÐµÑÐ²ÐµÑÐ° Ð¸Ð»Ð¸ Ð¾ÑÑÑÑÑÑÐ²Ð¸Ðµ Ð´Ð¾ÑÑÑÐ¿Ð° Ðº ÑÐµÑÐ²ÐµÑÐ°Ð¼ RuTracker.\n","ng2-countries-trivia":"# ng2-countries-trivia\r\nAngular 2 countries trivia application based on ng2-countries\r\n\r\nStatus: in development\r\n\r\nThe project written in [Angular 2](https://angular.io), [Typescript 2](https://www.typescriptlang.org).\r\n\r\nThe project was generated with [angular-cli](https://github.com/angular/angular-cli).\r\n\r\nThe project use dataset from [countries-data](https://github.com/dormd/countries-data) and pipes from [ng2-pipe](https://github.com/dormd/ng2-pipe).\r\n\r\n## Demo app\r\nYou can see how fun to use this npm in our [Demo Application](https://dormd.github.io/ng2-countries-trivia). \r\n\r\n## Table of Contents\r\n* [Demo app](#demo-app)\r\n* [Installation](#installation)\r\n* [List of Riddles](#list-of-riddles)\r\n* [Development server](#development-server)\r\n* [Build](#build)\r\n* [Deploying to Github Pages](#deploying-to-github-pages)\r\n\r\n## Installation\r\n```\r\nnpm install ng2-countries-trivia\r\n```\r\n\r\n## List of Riddles\r\nSoon..\r\n\r\n## Development server\r\nRun `ng serve` for a dev server. Navigate to `http://localhost:4200/`. The app will automatically reload if you change any of the source files.\r\n\r\n## Build\r\nRun `ng build` to build the project. The build artifacts will be stored in the `dist/` directory. Use the `-prod` flag for a production build.\r\n\r\n## Deploying to Github Pages\r\nRun `ng github-pages:deploy` to deploy to Github Pages.\r\n\r\n","ngx-clarity-datetime":"Angular Date Time Picker\r\n========================\r\n\r\n**Angular date time picker - Angular reusable UI component**\r\n**This package supports Angular 4**\r\n\r\n\r\nBreaking Changes\r\n-------\r\n - This picker is complete changed in version 5.\r\n - This picker now is no longer as a directive added into a text input. Instead, it is a stand along component that includes a text input and a dropdown calendar-time picker. You could see more details down below.\r\n - This picker now does not use [MomentJS](http://momentjs.com/). Instead, it is using [date-fns](https://date-fns.org/). [Here is why.](https://github.com/date-fns/date-fns/issues/275#issuecomment-264934189)\r\n\r\nLatest Update\r\n-------\r\nI am working on a way that the picker would add dynamically. In this way, the picker component would not have the input element and users could use their own input template (such as Angular Material, issue[#161](https://github.com/DanielYKPan/date-time-picker/issues/161)).\r\nIn the next major update, the picker would use [Javascript Intl](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl) to have better internationalization support.\r\n\r\nDescription\r\n-------\r\nSimple Angular date time picker. Online demo is [here](https://danielykpan.github.io/date-time-picker/). \r\nThis picker is responsive design, so feel free to try it in your desktops, tablets and mobile devices. \r\nThis picker uses  [date-fns](https://date-fns.org/).\r\n\r\nHow to Use\r\n-------\r\n\r\n 1. Install with [npm](https://www.npmjs.com):`npm install ng-pick-datetime --save`\r\n 2. Add `<link rel=\"stylesheet\" type=\"text/css\" href=\"/node_modules/ng-pick-datetime/assets/style/picker.min.css\" />` in your index.html.\r\n 3. Add __DateTimePickerModule__ import to your __@NgModule__ like example below\r\n  ```js\r\n     import { NgModule } from '@angular/core';\r\n     import { BrowserModule } from '@angular/platform-browser';\r\n     import { MyTestApp } from './my-test-app';\r\n \r\n     import { DateTimePickerModule } from 'ng-pick-datetime';\r\n \r\n     @NgModule({\r\n         imports:      [ BrowserModule, DateTimePickerModule ],\r\n         declarations: [ MyTestApp ],\r\n         bootstrap:    [ MyTestApp ]\r\n     })\r\n     export class MyTestAppModule {}\r\n  ```\r\n 4. If you are using __systemjs__ package loader add the following ng-pick-datetime properties to the __System.config__:\r\n```js\r\n  (function (global) {\r\n      System.config({\r\n          paths: {\r\n              'npm:': 'node_modules/'\r\n          },\r\n          map: {\r\n              // Other components are here...\r\n\r\n              'ng-pick-datetime': 'npm:ng-pick-datetime',\r\n          },\r\n          packages: {\r\n              // Other components are here...\r\n\r\n            // the picker\r\n              'ng-pick-datetime': {\r\n                  main: 'picker.bundle.js',\r\n                  defaultExtension: 'js'\r\n              },\r\n          }\r\n      });\r\n  })(this);\r\n```\r\n  5. Add picker component to your component:\r\n```<owl-date-time [(ngModel)]=\"moment\" ></owl-date-time>```\r\n\r\nAnimation\r\n-------\r\nThis picker uses angular animations to improve the user experience, \r\nstarting with Angular 4 animations have their own module so you need to import BrowserAnimationsModule to your application. \r\nIf you prefer to disable animation effect, use NoopAnimationsModule instead.\r\n\r\n`npm install @angular/animations --save`\r\n\r\n```js\r\n    import {BrowserModule} from '@angular/platform-browser';\r\n    import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\n    \r\n    @NgModule({\r\n        imports: [\r\n            BrowserModule,\r\n            BrowserAnimationsModule,\r\n            //...\r\n        ],\r\n        //...\r\n    })\r\n    export class YourAppModule { }\r\n```\r\n\r\nProperties\r\n-------\r\n\r\n|Name|Type|Required|Default|Description|\r\n|:--- |:--- |:--- |:--- |:--- |\r\n|`autoClose`|boolean|Optional|`false`| When specified, the calendar would be close when selected a date |\r\n|`dataType`|string|Optional|`'date'`| Type of the value to write back to ngModel. Default type is Javascript Date object. You could change it as string type |\r\n|`defaultMoment`|Date / string|Optional|`null`| Set the calendar's default month and year and timer picker's default value if the field is blank.|\r\n|`dateFormat`|string|Optional|`YYYY/MM/DD HH:mm`| Format of the date. You could find more in [this](https://date-fns.org/v1.28.5/docs/format).|\r\n|`disabled`|boolean|Optional|`false`| When specified, disables the component.|\r\n|`disabledDates`|Array-Date[]|Optional|`null`|Array with dates that should be disabled (not selectable).|\r\n|`disabledDays`|Array-number[]|Optional|`null`|Array with weekday numbers that should be disabled (not selectable). Start from 0(Sunday) to 6(Saturday).|\r\n|`hideClearButton`|boolean|Optional|`false`|When specified to true, the picker's input clear icon would be hidden.|\r\n|`hourFormat`|string|Optional|`'24'`|Specify the hour format, valid values are '12' and '24'.|\r\n|`inline`|boolean|Optional|`false`|When enabled, displays the picker as inline. Default is false for popup mode.|\r\n|`inputId`|string|Optional|`null`|Identifier of the focus input to match a label defined for the component.|\r\n|`inputStyle`|Object|Optional|`null`|Inline style of the picker text input.|\r\n|`inputStyleClass`|string|Optional|`null`|Style class of the picker text input.|\r\n|`locale`|Object|Optional|`null`|An object having regional configuration properties for the dateTimePicker. You could learn more in below.|\r\n|`maxDateCount`|number|Optional|`null`|Maximum number of selectable dates in multiple mode.|\r\n|`max`|Date / string|Optional|`null`|Set the maximum date/time that is selectable.|\r\n|`min`|Date / string|Optional|`null`|Set the minimum date/time that is selectable.|\r\n|`placeHolder`|string|Optional|`'yyyy/mm/dd hh:mm'`|Placeholder text for the input.|\r\n|`readonlyInput`|boolean|Optional|`true`|When specified to false, allows to enter the date manually with keyboard.|\r\n|`required`|boolean|Optional|`false`|When present, it specifies that an input field must be filled out before submitting the form.|\r\n|`showButtons`|boolean|Optional|`false`|When specified, the picker would have a confirm button and close button.|\r\n|`selectionMode`|string|Optional|`'single'`|Defines the quantity of the selection, valid values are \"single\", \"multiple\" and \"range\".|\r\n|`showHeader`|boolean|Optional|`false`|Defines whether to show the picker dialog header.|\r\n|`showOtherMonths`|boolean|Optional|`true`|When it is set to false, it would only show current month's days in calendar.|\r\n|`showSecondsTimer`|boolean|Optional|`false`|Defines whether to show a timer to control time's second value.|\r\n|`style`|Object|Optional|`null`|Inline style of the whole component.|\r\n|`styleClass`|string|Optional|`null`|Style class of the whole component.|\r\n|`tabIndex`|number|Optional|`null`|Index of the element in tabbing order.|\r\n|`type`|string|Optional|`'both'`|Specify the type of the date-time picker, valid value are 'both', 'calendar' and 'timer'.|\r\n\r\nEvents\r\n-------\r\n\r\n|Events|Parameter|Description|\r\n|:--- |:--- |:--- |\r\n|`onBlur`|event: Blur event|Callback to invoke on blur of input field|\r\n|`onFocus`|event: Focus event|Callback to invoke on focus of input field.|\r\n|`onInvalid`|originalEvent: event, value: invalid date-time value|Callback to invoke when a invalid date-time value is selected.|\r\n|`onSelect`|event: event, value: selected date-time value|Callback to invoke when a picker's date-time value is changed.|\r\n|`onConfirm`|originalEvent: event, value: selected date-time value|Callback to invoke when a confirm button is clicked.|\r\n|`onClear`|originalEvent: event, value: null|Callback to invoke when a clear button is clicked.|\r\n|`onClose`|event: event|Callback to invoke when picker dialog is closed.|\r\n\r\nStyling\r\n-------\r\nFollowing is the list of structural style classes.\r\n\r\n\r\n|Name|Element|\r\n|:--- |:--- |\r\n|`owl-dateTime`|Wrapper of the whole element|\r\n|`owl-dateTime-input`|Input element|\r\n|`owl-dateTime-dialog`|Wrapper of the dropdown dialog|\r\n\r\nDateFormat\r\n-------\r\nDefault date format is 'YYYY/MM/DD HH:mm', to customize this use dateFormat property.\r\nFollowing options can be a part of the format.\r\n\r\n - s - second of the time value (no leading zero 0, 1, ..., 59)\r\n - ss - second of the time value (two digits 00, 01, ..., 59)\r\n - m - minute of the time value (no leading zero 0, 1, ..., 59)\r\n - mm - minute of the time value (two digits 00, 01, ..., 59)\r\n - h - hour of the time value, 12 hour format (no leading zero 1, 2, ..., 12)\r\n - hh - hour of the time value, 12 hour format (two digits 01, 02, ..., 12)\r\n - H - hour of the time value, 24 hour format (no leading zero 0, 1, ..., 23)\r\n - HH - hour of the time value, 24 hour format (two digits 00, 01, ..., 23)\r\n - A - meridian of the time value (AM, PM)\r\n - a - meridian of the time value (am, pm)\r\n - D - day of the month (no leading zero 1, 2, ..., 31)\r\n - DD - day of the month (two digits 01, 02, ..., 31)\r\n - M - month of the year (no leading zero 1, 2, ..., 12)\r\n - MM - month of the year (two digits 01, 02, ..., 12)\r\n - MMM - month of the year (Jan, Feb, ..., Dec)\r\n - MMMM - month of the year (January, February, ..., December)\r\n - YYYY - year(2015, 2016, 2017 ...)\r\n \r\nYour could learn more about this from [here](https://date-fns.org/v1.28.5/docs/format).\r\n\r\nLocalization\r\n-------\r\nLocalization for different languages and formats is defined by binding the locale settings object to the locale property. Following is the default values for English.\r\n```\r\n<owl-date-time [(ngModel)]=\"dateValue\" [locale]=\"en\"></owl-date-time>\r\n```\r\n\r\n```js\r\nexport class MyModel {\r\n    \r\n    en: any;\r\n    \r\n    ngOnInit() {\r\n        this.en = {\r\n            firstDayOfWeek: 0,\r\n            dayNames: [\"Sunday\", \"Monday\", \"Tuesday\",\"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\r\n            dayNamesShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\r\n            monthNames: [ \"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\" ],\r\n            monthNamesShort: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\r\n        };\r\n    }\r\n}\r\n```\r\n\r\nIf you want the formatted date time to be localized as well, you need to npm install [date-fns](https://date-fns.org/).\r\n\r\n```\r\n<owl-date-time [(ngModel)]=\"dateValue\" [locale]=\"es\"></owl-date-time>\r\n```\r\n\r\n```js\r\nexport class MyModel {\r\n    \r\n    es: any;\r\n    esLocale = require('date-fns/locale/es')\r\n    \r\n    ngOnInit() {\r\n        this.es = {\r\n\t\t\t firstDayOfWeek: 1,\r\n\t\t     dayNames:[\"domingo\",\"lunes\",\"martes\",\"miÃ©rcoles\",\"jueves\",\"viernes\",\"sÃ¡bado\" ],\r\n\t\t     dayNamesShort: [ \"dom\",\"lun\",\"mar\",\"miÃ©\",\"jue\",\"vie\",\"sÃ¡b\" ],\r\n\t\t     monthNames: [ \"enero\",\"febrero\",\"marzo\",\"abril\",\"mayo\",\"junio\",\"julio\",\"agosto\",\"septiembre\",\"octubre\",\"noviembre\",\"diciembre\" ],\r\n\t\t     monthNamesShort: [ \"ene\",\"feb\",\"mar\",\"abr\",\"may\",\"jun\",\"jul\",\"ago\",\"sep\",\"oct\",\"nov\",\"dic\" ],\r\n\t\t     dateFns: esLocale\r\n        };\r\n    }\r\n}\r\n```\r\n\r\nDependencies\r\n-------\r\n[date-fns](https://date-fns.org/)\r\n\r\nTheme\r\n-------\r\n\r\nThe picker now separate its styles into **./node_modules/ng-pick-datetime/assets/style/picker.min.css**.\r\nYou could inspect the picker's classes from your browser's dev tool and overwrite them in your project's css files.\r\n\r\nDemo\r\n-------\r\n\r\nOnline demo is [here](https://danielykpan.github.io/date-time-picker/)\r\n\r\nLicense\r\n-------\r\n* License: MIT\r\n\r\nAuthor\r\n-------\r\n\r\n**Daniel YK Pan**","node-bc":"# node-bc\n\nThis is a simple screen scraping wrapper around the node bibliocommons website. It has been updated once.","node-blte":"# BLTEReader\nThis module provides a NodeJS reader for the BLTE file-format found in games by Blizzard Entertainment. The BLTEReader class is an extension of the [Bufo](https://github.com/Kruithne/node-bufo) buffer utility class.\n\n## Installing\n```\nnpm install node-blte\n```\n\n## Usage\n```javascript\n// Import module, naturally...\nconst BLTEReader = require('node-blte');\n\n// Register encryption keys (for encrypted blocks).\nBLTEReader.registerDecryptionKeys({\n    '213D67C1543A63A9': '1F8D467F5D6D411F8A548B6329A5087E',\n    '2BB68ACDC6254F79': '76583BDACD5257A3F73D1598A2CA2D99'\n});\n\nlet key = 'a19e2d57adf9830d989e3dad7dd56cec';\nlet buffer = obtainBufferSomehow();\n\n// Create a new BLTEReader from an existing buffer (or Bufo instance).\nlet reader = new BLTEReader(buffer, key);\n\n// `reader` can now be used just like a normal Bufo instance, and will automatically\n// decompress and decrypt blocks (using given keys) as needed.\n\n// If you need all blocks to be pre-processed (buffer transfer, etc), call `readAllBlocks()` first.\n```","node-csolanobix":"README - NODE JS Example\r\n","node-woff2":"# Security holding package\n\nThis package name is not currently in use, but was formerly occupied\nby another package. To avoid malicious use, npm is hanging on to the\npackage name, but loosely, and we'll probably give it to you if you\nwant it.\n\nYou may adopt this package by contacting support@npmjs.com and\nrequesting the name.\n","nodeplugs":"\n=== NodePlugs ===\n\nNode plugin manager.\n\nInstallation:\n\n\tnpm install nodeplugs\n\nUsage:\n\n\tvar Loader = require('nodeplugs').Loader;\n\tvar loader = Loader(options);\n\nOptions:\n\n\t\"path\" - [string] Path to search plugins in. (defaults to \"plugins\")\n\n\t\"autorun\"         - [bool] Enable or disable automatic function execution.\n\t\"autorunFunction\" - [string] Name of function to automatically execute. (if autorun is true)\n\t\"autorunDelay\"\t  - [int] Time (in milliseconds) to delay execution (don't set or set to 0 for no delay)\n\t\"autorunParam\"\t  - [object] Object to pass as param to the autorun function.\n\n\t\"requiredVariables\" - [Strings] List of required variables each plugin contain.\n\t\"requiredFunctions\" - [Strings] List of required functions each plugin contain.\t\n\n\t\"rename\" - [Object] Rename KEY to VALUE when passing plugin back.\n\nEvents:\n\n\t\"loading\" - Fired when Load is called.\n\t\"pluginsFound\" - Fired when enumeration of plugins has finished, returns an array of filenames (of the plugins)\n\t\"pluginLoaded\" - Fired when a plugin is loaded, returns a plugin.\n\t\"function\"\t   - Fired when a function is automatically run, returns the function name and the file name.\n\nExample:\n\n\tRead example/test.js\n","npm4":"# npm4\n\n[![Build Status](https://travis-ci.org/zertosh/npm4.svg?branch=master)](https://travis-ci.org/zertosh/npm4)\n\n[npm v4](https://github.com/npm/npm/releases/tag/v4.0.0) packaged as `npm4` to be run alongside `npm`.\n\n## Install\n\n```sh\nnpm install -g npm4\n```\n\n## Usage\n\nUse `npm4` like you would `npm`:\n\n```sh\n$ npm4 -v\n4.0.0\n```\n","o2o_layout":"It's very easy to make some words **bold** and other words *italic* with Markdown. You can even [link to Google!](http://google.com)\n\n","object-tagger-util":"# ObjectTagger\r\nTags ypur objects and quickly filters through tags.\r\n","omega-models":"# Omega Models\n\nAn elegant ORM solution for node.js. Intended to be used with the omega web framework, but **not required**. Supports\nmulitple backends for storage, including [mongoDB](http://www.mongodb.org/), [nedb](https://github.com/louischatriot/nedb),\n[riak](http://basho.com/riak/), [redis](http://redis.io/), as well as [SQLite](http://www.sqlite.org/) and\n[PostgreSQL](http://www.postgresql.org/). (It even includes a mock backend for unit tests.)\n\nThese backends are provided by separate projects (except for `nedb`, which is included.)\n\n## Status\n\n[![Build Status](https://travis-ci.org/Morgul/omega-models.png)](https://travis-ci.org/Morgul/omega-models])\n\nI would consider this library 'beta' quality. I'm quickly reaching the first 'stable' version, and it's been getting some real-world testing through my various other projects. Anything you build off of it should work just fine.\n\n### Missing Features\n\nThese are the big ticket items still missing:\n\n* Backend Migration - The ability to migrate data from one backend to another.\n* Initial Data - The ability to import data when the Backend is empty.\n* `AutoInc` field - This is going to be backend dependant, but it requires some API work to make sure backends can handle it.\n\n## Backends\n\nCurrently, the only backends that exist are those built into Omega Models itself:\n* `nedb` - A lightweight, node.js in-memory or file backed database that implements a subset of MongoDB's api. Highly recommended.\n* `simple` - A very lightweight, robust JSON store. It has options for being memory-only and gzip support.\n* `mock` - A mocked backend, used for unit tests.\n\nSee [here](https://github.com/Morgul/omega-models/blob/master/omega-models.js#L80) for how they're exposed.\n\n## Fields\n\n_Note_: Field names starting with `$` are **not supported**. While they will work in the most part, internally we use\nvariables with those names on the instances. If you overwrite them, everything will explode horribly.\n\nAll fields have the following options available:\n\n* `key` - Makes a field as the primary key for this model.\n* `default` - Sets the default value for this field.\n* `required` - This field is required to be not null/undefined in order to save the model.\n* `validators` - A list of functions of the form `function(fieldValue)` that must return true, or an Error object.\n\n### Field Types\n\n* `fields.Any()` - A field that represents any JSON-able value. No checking is done on this field.\n* `fields.AutoID()` - A field that represents an automatically assigned id. (This is dependant on the backend.)\n* `fields.AutoInc()` - An `Integer` field that automatically increments, based on a starting value.\n    * `start` - (Optional) The starting value for ids. Defaults to 1.\n* `fields.Binary()` - A field to store raw binary data.\n* `fields.Boolean()` - A field to store boolean values\n* `fields.String()` - A field to store text as a string. A maximum limit is not required, but if one is specified, SQL backends will store this in a smaller, more efficient data type.\n    * `max_length` - (Optional) The maximum number of chars that can be stored in this field. (If not specified, SQL backends should default to a Text field, or whatever the unlimited text storage type is.)\n* `fields.Choice()` - A field that limits possible inputs to a specified list of possible values.\n    * `choices` - A list of valid choices.\n    * `type` - (Optional) a field type instance, defining the underlying field the choice is stored as. Defaults to `Char`.\n* `fields.Date()` - A field to store dates. (This is the same as DateTimeField, but the time component is always set to 0:00:00.)\n    * `auto` - Automatically update every time the modle is saved. (Useful for 'last modified' fields)\n    * `first` - Set when the model is first created, then never again.\n* `fields.DateTime()` - A field to store date and time.\n    * `auto` - Automatically update every time the modle is saved. (Useful for 'last modified' fields)\n    * `first` - Set when the model is first created, then never again.\n* `fields.Dict()` - A field that represents a key/value store. Keys are assumed to be strings, and values are assumed to be `fields.Any()`.\n* `fields.File()` - A field that returns a file from the filesystem, however, is stored as a `Char` field path in the database.\n    * `basePath` - (Optional) The path under which to store files. Defaults to the field name.\n* `fields.Float()` - A field to store floating point numbers.\n    * `min` - (Optional) The minimum possible value to be stored.\n    * `max` - (Optional) The minimum possible value to be stored.\n* `fields.Integer()` - A field to store integer numbers.\n    * `min` - (Optional) The minimum possible value to be stored.\n    * `max` - (Optional) The minimum possible value to be stored.\n* `fields.List()` - A field to store a list of items of one of the other field types. (How this is achieved depends on the backend.)\n    * `type` - (Optional) A field type instance, representing the types that will be stored in this list. (Assumed to be `fields.Any` by default.)\n* `fields.Reference()` - A field that refers to another instance of a model.\n    * `model` - A string that is the name of a defined model. This reference will only accept instances of that model.\n    * `filter` - (Optional) An object, or function that filters the choices for this field to a subset of instances of the Model defined by `model`.\n\n## Tests\n\nIf you want to run the tests, just run:\n\n```bash\n$ npm test\n```\n","opent2t-cloud":"# OpenT2T API HubController class + server Sample\r\nA sample server that can be can be used to interact with similar devices using a common schema.\r\n\r\n\r\n> **Important:** This is just a code sample and NOT intended for any sort of real use since it does not implement any real auth or persistent storage.\r\n\r\nThe API for this sample is documented at: http://docs.opent2t.apiary.io\r\n> **Note:** The Apiary hasn't been updated yet for error cases but soon will be. Meanwhile the section below talks about the general behavior.\r\n\r\n## HubController Class\r\nAs part of this sample server, we provide a hubController class and distribute it separately outside of this sample server. This class provides for a simple management interface to controlling existing hubs and corresponding devices that the hubs control. The calls ultimately call into the OpentT2T set of libraries (see https://github.com/opent2t/opent2t) to create the actual translators, invoke the corresponding translator functions etc.\r\n\r\n### General Error handling notes\r\nAll APIs defined here return a custom Error object of type OpenT2TError defined in the opent2t common client library (https://github.com/openT2T/opent2t).\r\n\r\n1. Any errors that are bubbled out from the library are wrapped in a custom OpenT2TError (extends built-in Error interface). All APIs are promise-based, and in case of errors, the promise is rejected with given error.\r\n\r\n2. Users of this library will be able to handle the error in their code and view the status code, message, original 'inner' error for diagnostics.\r\n\r\n3. The error code is typically matched to a corresponding HTTPStatusCode if not already originally one in the inner error. Eg 400's for bad request input or validation failures, 500 for default/unexpected/technical errors etc\r\n\r\n4. Errors from providers eg WINK etc are returned as-is and their original error codes and messages retained. The original error is bubbled up in the nested err property of the message.\r\n\r\n### Running tests\r\n\r\n1. To run the tests, you need first install the node dependencies under the root cloud\\node folder.\r\n> `npm install`\r\n\r\n2. Next, ensure install the rest of the dependencies in particular, ava (the testing framework), opent2t, and the specific hub translator you are working with, are explicitly installed. Only WINK is supported at this time in the tests. The tests also require actual wink hub setup (username/pwd etc and work against the production wink service)\r\n> `npm install ava`\r\n> `npm install opent2t`\r\n> `npm install opent2t-translator-com-wink-hub`\r\n\r\n3. Next,(temporary step only until we fix this) copy the node_modules folder into the tests directory\r\n\r\n4. cd to the tests folder\r\n\r\n5. create a new hubController-testConfig-auth.json file. This has to be named this exact name. Populate with the onboardinginfo below and replace the contents with your username + id:\r\n\r\n{\r\n \"onboardingInfo\" : [\r\n        {\r\n            \"username\": \"\",\r\n            \"password\": \"\"\r\n        },\r\n        {\r\n            \"client_id\": \"\",\r\n            \"client_secret\": \"\"\r\n        }\r\n    ]\r\n}\r\n\r\n6. Next if you know already your device ids + control ids (for wink) populate them in the hubController-testConfig.json file or run the test once, look at the output with your device information and populate with your deviceId, control id in the test config.\r\n\r\n7. Run the test : ava hubcontroller.js\r\n\r\n\r\n## Code of Conduct\r\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\r\n","osirisguitar":"[npm] card for Anders Norrback Bornholm\n\n# Usage\n\nVia npx:\n\n```bash\nnpx osirisguitar\n```\n\n# Other\n\nIdea and trend started by [Tierney (@bitandbang)]\n\nTo create your own, use [create-my-card].\n\nie: `npm init my-card`\n\n[npm]: https://www.npmjs.com/\n[tierney (@bitandbang)]: https://www.npmjs.com/package/bitandbang\n[create-my-card]: https://www.npmjs.com/package/create-my-card\n\n","panda-portfolio":"<p align=\"center\"><img src=\"https://raw.githubusercontent.com/YashMeh/panda-portfolio/master/images/logoPanda.png\" alt=\"Panda-portfolio logo\"></p>\n<h1 align=\"center\">Panda Portfolio</h1>\n<p align=\"center\">No more worries while making single page github portfolio websites.</p>\n\n<p align=\"center\"><a href=\"https://www.npmjs.com/package/panda-portfolio\"><img src=\"https://img.shields.io/badge/npm-6.8.0-brightgreen.svg\" alt=\"npm\"></a> <img src=\"https://img.shields.io/badge/node-11.8.0-brightgreen.svg\" alt=\"node\"> <img src=\"https://img.shields.io/npm/dw/panda-portfolio.svg\" alt=\"downloads\"> <img src=\"https://img.shields.io/github/license/YashMeh/panda-portfolio.svg\" alt=\"LICENSE\"></p>\n\n## Installation\n\n```javascript\n// For npm<5.2.0\nsudo npm install -g panda-portfolio\n\n// For npm>=5.2.0\nnpx panda-portfolio <command>\n```\n\n## Creating the config file\n\nplease make sure that you have the profile photo as well as resume file in the same directory\n\n```javascript\npanda init\n```\n\n## Creating the index page\n\n```javascript\npanda config.json\n```\n\n- Get your single page portfolio as index.html.\n\n## Publishing\n\nIn case you want to publish your website to your github pages as <i>username.github.io</i> we recommend you checkout our inbuilt feature where you only need to give your credentials and we will automatically deploy it to your github page.\n\n## Alternate Method\n\n- Create a FILENAME.json file within the directory\n- Paste the following content.\n\n```javascript\n{\n    \"theme\":\"(dark or light)\",\n    \"name\":\"YOUR-NAME\",\n    \"profilePhoto\":\"PICTURE-LINK\",\n    \"resumeLink\":\"RESUME-LINK\",\n    \"about\":[\n        \"Paragraph1\",\n        \"Paragraph2\",\n        \"Paragraph3\",\n        \"So on..\"\n    ],\n    \"links\":{\n        \"github\":\"YOUR-GITHUB-PROFILE\",\n        \"linkedin\":\"YOUR-LINKEDIN-PROFILE\",\n        \"medium\":\"YOUR-MEDIUM-PROFILE\",\n        \"facebook\":\"YOUR-FACEBOOK-PROFILE\",\n        \"instagram\":\"YOUR-INSTAGRAM-PROFILE\"\n    }\n}\n```\n\n- Write panda FILENAME.json to get the index.html page.\n\n## Demo\n\n![screengif](https://raw.githubusercontent.com/YashMeh/panda-portfolio/master/images/pandatuts.gif)\n\n## Example\n\n| Theme |                                           Picture                                           |\n| ----- | :-----------------------------------------------------------------------------------------: |\n| light | ![light](https://raw.githubusercontent.com/YashMeh/panda-portfolio/master/images/light.png) |\n| dark  |  ![dark](https://raw.githubusercontent.com/YashMeh/panda-portfolio/master/images/dark.png)  |\n","parse-processes":"# Processes\n\nList processes on Unix/Linux.\n\n## Installation\n\n```bash\nnpm install processes\n```\n\n## Example\n\n```js\nvar processes = require('parse-processes');\n\nprocesses(function(err, result){\n  result.forEach(function(p){\n    console.log(p.id, p.tty, p.time, p.cmd);\n  });\n});\n```\n\n## Licence\n\nMIT","parse-tx-xdr-to-json-response":"\n# parse-tx-xdr-to-json-response\nA tiny library that parse contents of a Triam XDR blob to JSON format\n\n### Install\n```\nnpm install parse-tx-xdr-to-json-response --save\n```\n\n### Example\n```javascript\nconst { parseOperations } = require('parse-tx-xdr-to-json-response');\n const envelope_xdr = \"AAAAAEEPRPOcFZIwowt0GootrwjGX+aNqP5zG+kbuu4YXVLYAAAnEAAAAEUAAAACAAAAAAAAAAAAAAABAAAAAQAAAAB6LHmPFqLd3d8SbTZuAJD6B83V4P4Uw9gRyDwpdgjsEwAAAAYAAAABVVNEAAAAAABBD0TznBWSMKMLdBqKLa8Ixl/mjaj+cxvpG7ruGF1S2H//////////AAAAAAAAAAIYXVLYAAAAQKzoZwsMKh/yh5eLQD+xu4VzwgAZrg/ynqUGAJcb1oSNEVe1RI9r+k7H+O/SJvamFXx0yvEx2ohSuTRKxU7usQR2COwTAAAAQHklUcmcSvJxX13PddLcedVMPcxSeLpUddoBzJInZ2XKz2dbPe+Oz18PZ1Pbgoy75IBvHnRUX5NK+bpw5OYLUQY=\";\nlet oprations = parseOperations({\n    txEnvelopeXdr: envelope_xdr\n});\nconsole.log(oprations);\n```","parsec-utils":"## parsec\n\nChongqing second gap Technology Co., Ltd. JS NPM Kit.\n\n## Usage Example\n\n    import { SS }  from 'parsec-utils';\n\n\n    function test(){\n        //set\n        SS.set('key','value');\n\n        //get\n        var info = SS.get('key');\n\n        console.log(info);\n    }\n    \n\n## Installation\n\n\n```bash\nnpm install parsec-utils\n```\n\n\n## Contributors\n\n - Yanghc\n - hqwlkj@outlook.com\n","pathfind":"# pathfind [![Circle CI](https://circleci.com/gh/ndhoule/pathfind.svg?style=svg&circle-token=4b75e555a6bc0deea86292b70ee6d9cbd607ae3e)](https://circleci.com/gh/ndhoule/pathfind)\n\nFind a directory in a list of paths.\n\n## Requirements\n\n- Node >= 0.11.13\n\n## Installation\n\n```sh\n$ npm install pathfind\n```\n\n## API\n\nAll examples assume the following example directory layout:\n\n```sh\n$ mkdir -p a/sub_a b/sub_b c/sub_c\n```\n\n### `pathfind(<string[]> paths, <string> target) => Promise`\n\nAsynchronously find a `target` path in a list of `paths`.\n\n```javascript\npathfind(['a', 'b', 'c'], 'sub_b');\n// => 'a/sub_b'\n```\n\n## License\n\nCopyright 2014 [Nathan Houle](mailto:nathan+github@nathanhoule.com). Released under the [MIT license](LICENSE.md).\n","permutations":"\n# permutations\n\ngenerate unique permutations, like all lottery numbers\n\n## Example\n\n```\nvar permutations = require('permutations');\n\nvar perm = permutations(4,10);\n\nvar p;\nwhile (p = perm()) {\n  console.log(p); // [1,2,3,4] [1,2,3,5] ... [7,8,9,10]\n}\n```\n\n## License\n\nMIT\n","pg-tsquery":"# Text-Search parser for PostgreSQL\n\n[![npm version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![coverage status][codecov-image]][codecov-url]\n\n### Why?\n\nUsing pg's `to_tsquery` directly with user input can throw errors. `plainto_tsquery` sanitizes the user input, but it's very limited (it just puts an and between words), `websearch_to_tsquery` extends this behavior a little further only between double-quotes, with followedBy operator and negations.\n\nThis module allows customizable text-search operators: and, or, followedBy, not, prefix, parentheses, quoted text (same behavior than `websearch_to_tsquery`).\n\nSee the [options defaults values](index.js#L52-L61)\n\n### Usage\n```js\nconst tsquery = require('pg-tsquery')(/* options can be passed to override the defaults */);\n\npool.query('SELECT * FROM tabby WHERE to_tsvector(col) @@ to_tsquery($1)', [tsquery(str)])\n```\n\n| inputs | output |\n| --- | --- |\n| `foo bar` | `foo&bar` |\n| `foo -bar`, `foo !bar`, `foo + !bar` | `foo&!bar` |\n| `foo bar,bip`, `foo+bar \\| bip` | `foo&bar\\|bip` |\n| `foo (bar,bip)`, `foo+(bar\\|bip)` | `foo&(bar\\|bip)` |\n| `foo>bar>bip` | `foo<->bar<->bip` |\n| `foo*,bar* bana:*` | `foo:*\\|bar:*&bana:*` |\n\n\n### [Demo](https://caub.github.io/pg-tsquery)\n\n[npm-image]: https://img.shields.io/npm/v/pg-tsquery.svg?style=flat-square\n[npm-url]: https://www.npmjs.com/package/pg-tsquery\n[travis-image]: https://img.shields.io/travis/caub/pg-tsquery.svg?style=flat-square\n[travis-url]: https://travis-ci.org/caub/pg-tsquery\n[codecov-image]: https://img.shields.io/codecov/c/github/caub/pg-tsquery.svg?style=flat-square\n[codecov-url]: https://codecov.io/gh/caub/pg-tsquery\n","phpcbf-cli":"# phpcbf-cli\n\n`phpcbf` is a great tool for linting and formatting PHP code but it uses non-standard exit codes which cause it to not be compatible with other tools. The usage of this tool is exactly the same as `phpcbf` however it standardizes it's exit code.\n\n## Install\n\nThis tool requries that you have `phpcbf` installed and on your path. Installation instructions can be found here: https://github.com/squizlabs/PHP_CodeSniffer\n\n```bash\nt npm i -D phpcbf-cli\n```\n\n## Usage\n\nExact same usage as phpcbf execuitable\n\n```bash\nphpcbf-cli --standard=PSR2 -n path/to/some/file.php\n```\n","piece-table":"# Table of Contents\n\n* [PieceTable.js](#piecetable-js)\n  * [Overview](#overview)\n  * [Installation](#installation)\n  * [Usage](#usage)\n  * [API Documentation](#api-documentation)\n\n\n# PieceTable.js\n## A JavaScript implementation of the piece table data structure\nA piece table is an efficient data structure for tracking edits to a text document.\nA detailed explanation can be found [here](https://www.cs.unm.edu/~crowley/papers/sds/node15.html).\n\n## Overview\nA piece table consists of two buffers, the `file` buffer and the `add` buffer, and a\ntable of \"pieces\", or windows into those buffers (the `piece table`). Each piece consists\nof a length, an offset, and a descriptor of which buffer the piece points to. The actual\ntext of the document is represented by the series of pieces in the `piece table`. \nInitially, the `file` buffer consists of the full text of the document and the `add`\nbuffer is empty. Insertions involve appending the new text to the `add` buffer and\nadding pieces to the `piece table` to reflect the addition. Deletion is performed simply\nby removing and editing pieces from the `piece table`. This has the added benefit of\nnever losing data, allowing easy undo operations. Piece table operations are very\nefficient because they only ever append to the buffers, so no mid-array insertions or\ndeletions are performed.\n\n## Installation\n```bash\nnpm install --save piece-table\n```\n    \n## Usage\n```javascript\nconst PieceTable = require(\"piece-table\");\n\nconst document = new PieceTable(\"This is a document with some text.\");\n\ndocument.insert(\"This is some more text to insert at offset 33.\", 33);\n\n// Delete the previously inserted sentence\ndocument.delete(79, 46);\n\nvar sequence = document.getSequence();\n// sequence == \"This is a document with some text.\"\n\nvar subString = document.stringAt(9, 8);\n// subString == \"document\"\n\n// PieceTable is an iterable:\nfor (let character of document) {\n    console.log(character);\n    // 'T', 'h', 'i', 's', ...\n}\n```\n\n## API Documentation\n<a name=\"PieceTable\"></a>\n\n## PieceTable\n**Kind**: global class  \n\n* [PieceTable](#PieceTable)\n    * [new PieceTable(fileText)](#new_PieceTable_new)\n    * [.insert(str, offset)](#PieceTable+insert)\n    * [.delete(offset, length)](#PieceTable+delete)\n    * [.getSequence()](#PieceTable+getSequence) â <code>string</code>\n    * [.stringAt(offset, length)](#PieceTable+stringAt)\n\n<a name=\"new_PieceTable_new\"></a>\n\n### new PieceTable(fileText)\nA piece table is an efficient data structure to track changes to a text.\nSee <https://www.cs.unm.edu/~crowley/papers/sds/node15.html> for details\n\n\n| Param | Type | Description |\n| --- | --- | --- |\n| fileText | <code>string</code> | the initial text of the piece table |\n\n<a name=\"PieceTable+insert\"></a>\n\n### pieceTable.insert(str, offset)\nInserts a string into the piece table\n\n**Kind**: instance method of <code>[PieceTable](#PieceTable)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| str | <code>string</code> | the string to insert |\n| offset | <code>number</code> | the offset at which to insert the string |\n\n<a name=\"PieceTable+delete\"></a>\n\n### pieceTable.delete(offset, length)\nDeletes a string from the piece table\n\n**Kind**: instance method of <code>[PieceTable](#PieceTable)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| offset | <code>number</code> | the offset at which to begin deletion |\n| length | <code>number</code> | the number of characters to delete. If negative, deletes backwards |\n\n<a name=\"PieceTable+getSequence\"></a>\n\n### pieceTable.getSequence() â <code>string</code>\nGets the sequence as a string\n\n**Kind**: instance method of <code>[PieceTable](#PieceTable)</code>  \n**Returns**: <code>string</code> - The sequence  \n<a name=\"PieceTable+stringAt\"></a>\n\n### pieceTable.stringAt(offset, length)\nGets a string of a particular length from the piece table at a particular offset\n\n**Kind**: instance method of <code>[PieceTable](#PieceTable)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| offset | <code>number</code> | the offset from which to get the string |\n| length | <code>number</code> | the number of characters to return from the offset. If negative, looks backwards |\n\n\n","plainify-loader":"# plainify-loader\n\n[![npm version](https://badge.fury.io/js/plainify-loader.svg)](https://badge.fury.io/js/plainify-loader)\n[![Build Status](https://travis-ci.org/demiazz/plainify-loader.svg?branch=master)](https://travis-ci.org/demiazz/plainify-loader)\n\nConvert JSON to plain object.\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n  <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n       alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n## Why?\n\nLoader developed for usage with `react-intl` which can use only\nplain objects as messages object.\n\nBut I like structure used in `counterpart.js` or `Rails I18n`, where locales\nrepresents as nested object, but ids used by library for traversing over\nthe locales.\n\n## Example\n\n### in\n\n```json\n{\n  \"key\": \"value\",\n  \"nested\": {\n    \"other_key\": \"other_value\"\n  }\n}\n```\n\n### out\n\n```json\n{\n  \"key\": \"value\",\n  \"nested.other_key\": \"other_value\"\n}\n```\n\n## Warning\n\nThe loader provides support only for values represented as strings or objects\nwith strings values because developed for the particular usage.\n\n## Installation\n\n```sh\nnpm install plainify-loader\n```\n\n## Usage\n\n```js\nimport json from \"json!plainify!./file.json\";\n// => returns file.json content as JSON parsed and plainified object\n```\n\nor you can use it with `yaml-loader`\n\n```js\nimport json from \"json!plainify!yaml!./file.yml\";\n// => returns file.yml content as YAML parsed and plainified object\n```\n\n# Contributors\n\nGreat thanks to @jumpgh for contributions.\n","plugin-container":"[![Build Status](https://travis-ci.org/cancerberoSgx/plugin-container.png?branch=master)](https://travis-ci.org/cancerberoSgx/plugin-container) [![appveyor Build status](https://ci.appveyor.com/api/projects/status/w3ynfan159ejobkv/branch/master?svg=true)](https://ci.appveyor.com/project/cancerberoSgx/plugin-container/branch/master) [![codecov](https://codecov.io/gh/cancerberoSgx/plugin-container/branch/master/graph/badge.svg)](https://codecov.io/gh/cancerberoSgx/plugin-container/tree/master/src) [![dependencies](https://david-dm.org/cancerberosgx/plugin-container/status.svg)](https://david-dm.org/cancerberosgx/plugin-container) [![devDependencies](https://david-dm.org/cancerberosgx/plugin-container/dev-status.svg)](https://david-dm.org/cancerberosgx/plugin-container-dev#info=devDependencies)\n\n\n# Plugin Container\n\n Plugin-container is a design pattern similar to Observer, but with ore emphasis on data processing, state change, and cancelable actions.   \n \n Powerful and simple pattern to add extension points to your APIs or frameworks.  \n\n# API Reference\n\nhttps://cancerberosgx.github.io/plugin-container/interfaces/iplugincontainer.html\n\n# Install \n\n```sh\nnpm install --save plugin-container\n```\n\n# Usage\n\n```js\nimport { PluginContainer } from 'plugin-container';\nconst plugins = new PluginContainer();\nplugins.install({\n  name: 'secondPlugin',\n  priority: 2,\n  execute(input) {\n    return `avacadabra${input}flumflumblablasrpic`;\n  },\n});\nplugins.install({\n  name: 'first plugin',\n  priority: 1,\n  execute(input) {\n    return input.replace(/blabla/gi, 'loremipsum');\n  },\n});\n\nconst output = plugins.executeAll('hello world blabla world');\nconsole.log(output)\n// the output is the transformation, in other, of all the plugins, in this case:\n// 'avacadabrahello world loremipsum worldflumflumloremipsumsrpic'\n```\n\n# Use it in the browser\n\nplugin-container supports very old browsers. Just use files in `build/es3`, for example, after loading plugin-container-globals.js the global variable `PluginContainer` will be available: \n\n```html\n<script src=\"plugin-container-globals.js\"></script>\n<script>\nvar plugins = new PluginContainer();\n....\n``` \n\nOr you can use the AMD version if you want: \n\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/almond@0.3.3/almond.min.js\"></script>\n<script src=\"plugin-container-amd.js\"></script>\n<script>\nvar PluginContainer = require('PluginContainer')\nvar plugins = new PluginContainer();\n....\n``` \n\n\n# Ideas / TODOs\n\n## Errors\n\nif a plugin.execute throws an exception - what the container should do ? \n\n\n## asynchronous plugins\n\n * executeAll is sync and plugins.execute() must be sync\n\nProposal: \n\n// install an asynchronous plugin. If execute returns a promise / thenable - then the ocntainer will wait for it to resolve / reject before executing the next plugins\n\nplugins.install({\n  name: 'my-async-plugin,\n  priority: 1\n  execute: (input){\n    return new Promise(resolve=>{\n      return request('third/party/service').then(error=>{\n        if(error){\n          input.thirdPartyValidationError = error\n          reject(error)\n        }\n        else{\n          input.thirdPartyValidationOk=!error;\n          resolve(input) // so next plugins can keep processing the input\n        }\n      })\n    })\n  }\n})\n\n// install a synchronous plugin - it wil lbe executed after the first one is resolved or rejected\nplugins.install(\n  name: 'my-async-plugin,\n  priority: 2\n  execute: function(input){\n    if(input.thirdPartyValidationOk){\n      doSomethingWith(input)\n    }\n    return input\n  }\n)\n\nQuestions: What is the semantics of a rejected promise ? What the container should do ? probably rejected promises have same semantics that throws. \n\n\n## Cancelling\n\n* use case: I want my users to be able to subscribe plugins before something happens and  ","prometheus-log-client":"prometheus-log-client\n------\n\nThis module provides a simple way to turn your application logs into Prometheus metrics, using regex to match and extract data from the logs.\n\nIt is intended for use with applications that already provide logging, and where retrofitting Prometheus instrumentation may be difficult, e.g. an existing PHP application.\n\n## How to use\n\nInstall from npm:\n```js\nnpm install prometheus-log-client\n```\n\n```js\nconst PromLog = require('prometheus-log-client')\nconst promLog = new PromLog(6754)\n\npromLog.listen()\n\npromLog.createCounter(\n    /^(WARN|ERROR)/, // regex to match again\n    matches => { // how to process the matches\n        return {\n            name: 'fail_log_lines',\n            help: 'Count of total error and warn log lines',\n            labels: {\n                level: matches[1].toLowerCase()\n            }\n        }\n    }\n)\n\npromLog.watch('./test.log', '\\n', (err) => {\n    console.warn(err)\n})\n```\n\nSee `example/app.js` for a full working example.\n\n## Sample output\n\n```\n# HELP active_users Current active users in application\n# TYPE active_users gauge\nactive_users 160\n# HELP response_codes Count of responses by HTTP status\n# TYPE response_codes counter\nresponse_codes{code=\"200\"} 37\nresponse_codes{code=\"302\"} 13\n# HELP response_times Bucketed response times\n# TYPE response_times histogram\nresponse_times_bucket{le=\"10\"} 0\nresponse_times_bucket{le=\"20\"} 6\nresponse_times_bucket{le=\"30\"} 0\nresponse_times_bucket{le=\"40\"} 14\nresponse_times_bucket{le=\"50\"} 13\nresponse_times_bucket{le=\"75\"} 17\nresponse_times_bucket{le=\"100\"} 0\nresponse_times_bucket{le=\"200\"} 0\nresponse_times_bucket{le=\"+Inf\"} 0\nresponse_times_count 50\nresponse_times_sum 1998\n# HELP fail_log_lines Count of total error and warn log lines\n# TYPE fail_log_lines counter\nfail_log_lines{level=\"warn\"} 14\nfail_log_lines{level=\"error\"} 16\n```\n","promise-battlenet-api":"# promise-battlenet-api\r\n\r\nA basic client for the Blizzard Battle.net api using request and promises.\r\n\r\nCurrently only supports some WoW resources. \r\n\r\nDoes not currently support protected resources. \r\n\r\n## Installation\r\n    npm install promise-battlenet-api --save\r\n\r\n## Configuration\r\n\r\n### Basic Setup    \r\n    var bnet = require(\"promise-battlenet-api\");\r\n    var client = new bnet({\r\n        apikey: \"your_api_key_here\",\r\n    });\r\n    \r\n### Change your apikey at any time\r\n    client.setApiKey(\"your_api_key_here\");\r\n\r\n### Setting your apikey through environment variables\r\n\r\nIf an apikey has not been explicitly provided, the client will fallback to either of the below environment variables if available.\r\n\r\n    process.env.BNET_ID\r\n    process.env.BATTLENET_API_KEY\r\n\r\n### Enable Throttling\r\n\r\nIf for example, your apikey is limited to 100 calls a second, you should configure the client to perform 99 or less api calls per 1000 milliseconds (1 second). This allows for just a slight buffer to avoid edge cases. \r\n\r\nIf you are requesting api calls faster than the set throttle, subsequent calls be will queued to be executed once the throttle duration has expired.\r\n\r\nThrottling uses [xavi-/node-simple-rate-limiter](https://github.com/xavi-/node-simple-rate-limiter) under the hood.\r\n\r\n    var bnet = require(\"promise-battlenet-api\");\r\n    var client = new bnet({\r\n        apikey: \"your_api_key_here\",,\r\n        throttle: {\r\n            to: 99,   // the number of calls\r\n            per: 1000 // the timeframe in milliseconds\r\n        }\r\n    });\r\n\r\n**Throttling is intended for avoiding 403 Forbidden (Account Over Queries Per Second Limit) errors. Should your application make more requests than allowed for your hourly quota, you will need to manually handle those errors**.\r\n\r\n## Usage\r\n\r\n### Query basic character information\r\n    client.fetch(\"character\", { \r\n            region: \"us\", \r\n            realm: \"emerald-dream\", \r\n            name: \"talgees\" \r\n        })\r\n       .then(function printData (data) {\r\n            console.log(data);\r\n        })\r\n        .catch(console.error);\r\n\r\n### Query basic character information + stats + items\r\n    client.fetch(\"character\", { \r\n            region: \"us\", \r\n            realm: \"emerald-dream\", \r\n            name: \"talgees\",\r\n            fields: \"stats,items\"\r\n        })\r\n        .then(function printData (data) {\r\n            console.log(data);\r\n        })\r\n        .catch(console.error);\r\n\r\n### Query basic character information using a specific apikey\r\n    client.fetch(\"character\", {\r\n            apikey: \"your_api_key_here\",\r\n            region: \"us\", \r\n            realm: \"emerald-dream\", \r\n            name: \"talgees\"\r\n        })\r\n        .then(function printData (data) {\r\n            console.log(data);\r\n        })\r\n        .catch(console.error);\r\n\r\n## Example Responses\r\n\r\nThe below responses are an example of, but not a complete list, of common responses from the client.\r\n\r\n### Successful Response\r\n\r\n    { statusCode: 200, // http status code\r\n      responseTime: 528, // how long in milliseconds the response took\r\n      headers:\r\n       { 'x-plan-qps-allotted': '100', // how many calls you are allowed to make an second\r\n         'x-plan-qps-current': '61', // how many calls you have made this second\r\n         'x-plan-quota-allotted': '36000', // how many calls you are allowed to make an hour\r\n         'x-plan-quota-current': '711', // how many calls you have made this hour\r\n         'x-plan-quota-reset': 'Sunday, April 17, 2016 5:00:00 PM GMT', // when your calls per hour limit will reset\r\n         'last-modified': 'Sun, 17 Apr 2016 11:49:37 GMT' }, // when the data of the response was last modified\r\n      data: // the json payload / body of the response\r\n       { lastModified: 1460893777000,\r\n         name: 'BÃ¸llwÃ¨rk',\r\n         realm: 'Blackrock',\r\n         battlegroup: 'Glutsturm / Emberstorm',\r\n         class: 1,\r\n         race: 10,\r\n         gender: 0,\r\n         level: 100,\r\n         achievementPoints: 11625,\r\n         thumbnail: 'blackrock/3/67405315-avatar.jpg',\r\n         calcClass: 'Z',\r\n         faction: 1,\r\n         totalHonorableKills: 14402 } }\r\n\r\n### 404 Resource not Found\r\n\r\n    { statusCode: 404,\r\n      responseTime: 933,\r\n      headers:\r\n       { 'x-plan-qps-allotted': '100',\r\n         'x-plan-qps-current': '30',\r\n         'x-plan-quota-allotted': '36000',\r\n         'x-plan-quota-current': '870',\r\n         'x-plan-quota-reset': 'Sunday, April 17, 2016 5:00:00 PM GMT' },\r\n      data: { status: 'nok', reason: 'Character not found.' } }\r\n\r\n### 403 Forbidden (Account Over Queries Per Second Limit)\r\n\r\nUse the throttling feature to avoid this error.\r\n\r\n    { statusCode: 403,\r\n      responseTime: 498,\r\n      headers: { \r\n        'x-plan-qps-allotted': '100',\r\n        'x-plan-qps-current': '150' },\r\n      data:\r\n       { code: 403,\r\n         type: 'Forbidden',\r\n         detail: 'Account Over Queries Per Second Limit' } }\r\n\r\n## License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2015 Kevin Viglucci\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n","pssgo-reset.css":"# reset.css\n\n> pssgo's reset.css\n\n[![npm][npm-image]][npm-url] \n\n\n**NPM**\n\n```sh\nnpm install --save pssgo-reset.css\n```\n\n**YARN**\n```sh\nyarn add pssgo-reset.css\n```\n\n## LICENSE\n\n### [MIT](LICENSE)\n\n\n[npm-image]: https://img.shields.io/npm/v/pssgo-reset.css.svg?style=flat-square\n[npm-url]: https://www.npmjs.com/package/pssgo-reset.css\n","pundle-transformer-postcss":"# Pundle\n\n<p align=\"center\">\n  <img height=\"100px\" src=\"https://user-images.githubusercontent.com/4278113/41994587-f737ebf8-7a5f-11e8-8547-c60531960a05.png\">\n</p>\n\n<p align=\"center\">\n  modern javascript bundler\n</p>\n\n<p align=\"center\">\n  <a href=\"http://badge.fury.io/js/pundle\"><img alt=\"npm version\" src=\"https://badge.fury.io/js/pundle.svg\"></a>\n  <a href=\"https://npmjs.org/package/@pundle/core\"><img alt=\"Downloads\" src=\"http://img.shields.io/npm/dm/@pundle/core.svg\"></a>\n  <a href=\"https://circleci.com/gh/steelbrain/pundle/tree/master\">\n    <img src=\"https://img.shields.io/circleci/project/steelbrain/pundle/master.svg\" alt=\"CircleCI Build Status\">\n  </a>\n</p>\n\nPundle is a next generation module bundler. It's written with extensibility and performance in mind.\n\n## Getting Started\n\nPundle is still in beta but it's pretty stable. Here's how you can try it today!\n\nFor Yarn users\n\n```sh\n# For a react app with babel + hmr preconfigured\nyarn create pundle-react-app my-app\n# For a JS app with babel preconfigured\nyarn create pundle-babel-app my-app\n# For a pure bare bones app\nyarn create pundle-app my-app\n```\n\nIf you have Node v8+\n\n```sh\n# For a react app with babel + hmr preconfigured\nnpm init pundle-react-app my-app\n# For a JS app with babel preconfigured\nnpm init pundle-babel-app my-app\n# For a pure bare bones app\nnpm init pundle-app my-app\n```\n\n## Top Priority\n\n- docs\n\n## Note to self\n\n- \"ModuleScopePlugin\" to limit direct import of files\n- ESlint to lint files\n- enforce case sensitivity?\n\n## Post-initial demo goals\n\n- visualize dependency file size\n- Chunk minifers for HTML\n- Make tool to analyze cost of imports in app\n- Fork browser field resolver, it's so wasteful of fs\n","qb-react-growl":"# react-growl\nA 'Growl' style notification ReactJS component. forked from 'https://github.com/Moosylvania/react-growl'\n\n### INSTALL\n\nnpm install qb-react-growl\n\n\n### USAGE\n\nIn your app's main file:\n\n```Javascript\n\n/** @jsx React.Dom */\n\nvar React = require(\"react\");\n\nvar Growl = require(\"Growl/growl.react\");\n\nvar MyApp = React.createClass({\n\n\tgrowler: null,\n\n\tcomponentDidMount: function() {\n\n\t\t// Setup your Growl Settings\n\t\tGrowl.setPosition(\"tr\"); // Bottom-Right(br) by default\n\t\tGrowl.setMaxToShow(1); // Default is 8\n\n\t\t// set our internal variable to a reference to an instance of the growler\n\t\tthis.growler = this.refs.growler;\n\t},\n\n\t// Give your whole app a method to call and trigger a notification.\n\tgrowl: function(level, msg) {\n\t\tthis.growler.addNotification(level, msg);\n\t},\n\n\t// Somewhere in your main application view (so that it doesn't get unmounted) add an instance of Growl.\n\trender: function() {\n\t\treturn (\n\t\t\t<div className=\"myApp\">\n\t\t\t\t<Growl ref=\"growler\" />\n\t\t\t</div>\n\t\t);\n\t}\n\n});\n\nmodule.exports = MyApp;\n\n```\n\n### Static Methods\n\n- setPosition: @arg String inArray: [\"tr\", \"tl\", \"tc\", \"br\", \"bl\", \"bc\"]\n  - Sets the position where all notifications will appear. Default: \"br\"\n- setMaxToShow: @arg Integer\n  - The number of notifications to show before just showing \"x more\"\n- setDelay: @arg Integer ms\n  - The amount of time, in milliseconds, a notification will appear. Be sure to include time needed for any initial animation when the notification is added.\n- getDelay: @returns Integer ms\n- noAnimation: void\n  - If you are not using css animations for the notification show/remove, this will need called after you mount the component. If not called, the notifications will not be removed once the delay expires.\n\n### Copyright\n\nCopyright (c) 2015 Moosylvania Marketing (hosting@moosylvania.com)\n\n### Maintainer\n\nMitch Viner (mitch.viner@moosylvania.com)\n\nhttp://github.com/Mviner04\n\n### License\n\nLicensed under the MIT License.\n\n","rccc":"# Revista CinematogrÃ¡fica Cartelera CinematogrÃ¡fica\n\n[![NPM](https://nodei.co/npm/rccc.png)](https://nodei.co/npm/rccc/)\n\n## Installation\n\n    npm install rccc\n\n## Usage\n\n    var Rccc = require('rccc');\n    var rccc = new Rccc();\n\n    rccc.scrap(function(response){\n      console.log( JSON.stringify( response, null, 2 ) );\n    });\n\n## Response\n\n    [\n      {\n        \"cines\": [\n          {\n            \"name\": \"GalerÃ­as\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 1 (2D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><i>Lunes a Jueves</i></div><div class=\\\"horarios\\\">Horarios: 1:10 p.m. &#x2013; 3:10 &#x2013; 5:10 &#x2013; 7:10 &#x2013; 9:10 p.m.</div><div class=\\\"dias\\\"><i>Viernes a Domingo</i></div><div class=\\\"horarios\\\">Horarios: 11:10 a.m. &#x2013; 1:10 &#x2013; 3:10 &#x2013; 5:10 &#x2013; 7:10 &#x2013; 9:10 p.m.</div><div class=\\\"sala\\\">SALA 2 (3D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><i>Todos los D&#xED;as</i></div><div class=\\\"horarios\\\">Horarios: 11:40 a.m. &#x2013; 1:40 &#x2013; 3:40 &#x2013; 5:40 &#x2013; 7:40 &#x2013; 9:35 p.m.</div><div class=\\\"sala\\\">SALA VIP (2D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><i>Todos los D&#xED;as</i></div><div class=\\\"horarios\\\">Horarios: 12:10 m.d. &#x2013; 2:10 &#x2013; 4:10 &#x2013; 6:10 &#x2013; 8:10 p.m.</div><div class=\\\"sala\\\">SALA 8 (DOBLADA)</div><div class=\\\"dias\\\"><i>Todos los D&#xED;as</i></div><div class=\\\"horarios\\\">Horarios: 12:40 m.d. &#x2013; 2:40 &#x2013; 4:40 &#x2013; 6:40 &#x2013; 8:40 p.m.</div>\"\n          },\n          {\n            \"name\": \"Plaza inter\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 1 (3D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><i>Todos los D&#xED;as</i></div><div class=\\\"horarios\\\">Horarios: 12:15 m.d. &#x2013; 2:40 &#x2013; 4:40 &#x2013; 6:40 &#x2013; 8:40 p.m.</div><div class=\\\"sala\\\">SALA 3 (2D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><em>Todos los D&#xED;as</em></div><div class=\\\"horarios\\\">Horarios: 12:00 m.d. &#x2013; 2:00 &#x2013; 4:00 &#x2013; 6:00 &#x2013; 8:00 p.m.</div><div class=\\\"sala\\\">SALA 5 (DOBLADA)</div><div class=\\\"dias\\\"><em>Todos los D&#xED;as</em></div><div class=\\\"horarios\\\">Horarios: 11:00 a.m. &#x2013; 1:00 &#x2013; 3:00 &#x2013; 5:00 &#x2013; 7:00 &#x2013; 9:00 p.m.</div>\"\n          },\n          {\n            \"name\": \"Alhambra vip\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 3 (3D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><i>Lunes a Mi&#xE9;rcoles</i></div><div class=\\\"horarios\\\">Horarios: 2:40 p.m. &#x2013; 4:30 &#x2013; 6:20 &#x2013; 8:10 &#x2013; 10:00 p.m.</div><div class=\\\"dias\\\"><i>Jueves a Viernes</i></div><div class=\\\"horarios\\\">Horarios: 12:50 m.d. &#x2013; 2:40 &#x2013; 4:30 &#x2013; 6:20 &#x2013; 8:10 &#x2013; 10:00 p.m.</div><div class=\\\"dias\\\"><em>S&#xE1;bado y Domingo</em></div><div class=\\\"horarios\\\">Horarios: 11:00 a.m. &#x2013; 12:50 &#x2013; 2:40 &#x2013; 4:30 &#x2013; 6:20 &#x2013; 8:10 &#x2013; 10:00 p.m.</div>\"\n          },\n          {\n            \"name\": \"Alhambra bh\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 1 (2D &#x2013; DOBLADA)</div><div class=\\\"dias\\\"><i>Lunes a Mi&#xE9;rcoles</i></div><div class=\\\"horarios\\\">Horarios: 2:00 p.m. &#x2013; 4:00 &#x2013; 6:00 &#x2013; 8:00 p.m.</div><div class=\\\"dias\\\"><i>S&#xE1;bado a Domingo</i></div><div class=\\\"horarios\\\">Horarios: 12:00 m.d. &#x2013; 2:00 &#x2013; 4:00 &#x2013; 6:00 &#x2013; 8:00 p.m.</div><div class=\\\"dias\\\"><em>Todos los D&#xED;as</em></div><div class=\\\"horarios\\\">Horarios: 1:00 p.m. &#x2013; 3:00 &#x2013; 5:00 &#x2013; 7:00 &#x2013; 9:00 p.m.</div><div class=\\\"sala\\\">SALA 5 (DOBLADA)</div><div class=\\\"dias\\\"><em>Todos los D&#xED;as</em></div><div class=\\\"horarios\\\">Horarios: 7:40 p.m.</div>\"\n          },\n          {\n            \"name\": \"Cinemark\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 1 (2D &#x2013; DOBLADA)</div><div class=\\\"dias\\\"><i>Lunes a Viernes</i></div><div class=\\\"horarios\\\">Horarios: 12:00 m.d. &#x2013; 2:10 &#x2013; 4:20 &#x2013; 6:30 &#x2013; 8:40 p.m.</div><div class=\\\"dias\\\"><i>S&#xE1;bado y Domingo</i></div><div class=\\\"horarios\\\">Horarios: 11:10 a.m. &#x2013; 1:30 &#x2013; 3:50 &#x2013; 6:10 &#x2013; 8:35 p.m.</div><div class=\\\"sala\\\">SALA 2 (2D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><em>Lunes a Viernes</em></div><div class=\\\"horarios\\\">Horarios: 7:00 p.m.</div><div class=\\\"dias\\\"><i>S&#xE1;bado y Domingo</i></div><div class=\\\"horarios\\\">Horarios: 6:45 p.m.</div><div class=\\\"sala\\\">SALA 2 (3D &#x2013; DOBLADA )</div><div class=\\\"dias\\\"><em>Lunes a Viernes</em></div><div class=\\\"horarios\\\">Horarios: 12:30 m.d. &#x2013; 2:40 &#x2013; 4:50 &#x2013; 9:10 p.m.</div><div class=\\\"dias\\\"><em>S&#xE1;bado y Domingo</em></div><div class=\\\"horarios\\\">Horarios: 12:30 m.d. &#x2013; 2:15 &#x2013; 4:30 &#x2013; 9:00 p.m.</div>\"\n          }\n        ],\n        \"poster\": \"http://revistacinematografica.com.ni/wp-content/uploads/2014/05/poster-malefica.jpg\",\n        \"duration\": \"1 Hora 37 minutos\",\n        \"genres\": \"Acci&#xF3;n y Aventura\",\n        \"clasification\": \" PG\",\n        \"director\": \"Robert Stromberg\",\n        \"summary\": \"MalÃ©fica, una hermosa joven de gran corazÃ³n, crece idÃ­licamente en el pacÃ­fico reino del bosque, hasta que un dÃ­a un ejÃ©rcito invasor de seres humanos amenaza la armonÃ­a del lugar. MalÃ©fica se convierte en una feroz protectora de su tierra pero, al sufrir una despiadada traiciÃ³n, su noble corazÃ³n de a poco se vuelve de piedra. Decidida a vengarse, MalÃ©fica se enfrenta en una batalla Ã©pica con el rey de los humanos y, como resultado, lanza una maldiciÃ³n sobre su hija, Aurora. A medida que la niÃ±a crece, MalÃ©fica descubre que Aurora es la clave para lograr la paz en el reino y su felicidad.\",\n        \"title\": \"MalÃ©fica\",\n        \"trailer\": \"http://youtu.be/nUyeS5aM8Mk\"\n      },\n      {\n        \"cines\": [\n          {\n            \"name\": \"GalerÃ­as\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 7 (2D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><i>Todos los D&#xED;as</i></div><div class=\\\"horarios\\\">Horarios: 2:45 p.m. &#x2013; 9:45 p.m.</div>\"\n          },\n          {\n            \"name\": \"Cinemark\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 3 (2D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><i>Lunes a Viernes</i></div><div class=\\\"horarios\\\">Horarios: 6:35 p.m. &#x2013; 9:00 p.m.</div><div class=\\\"dias\\\"><i>S&#xE1;bado y Domingo</i></div><div class=\\\"horarios\\\">Horarios: 2:30 p.m. &#x2013; 7:05 &#x2013; 9:15 p.m.</div>\"\n          }\n        ],\n        \"poster\": \"http://revistacinematografica.com.ni/wp-content/uploads/2014/05/poster-blue-jasmine.jpg\",\n        \"duration\": \"1 Hora 38 minutos\",\n        \"genres\": \"Comedia y Drama\",\n        \"clasification\": \" PG-13\",\n        \"director\": \"Woody Allen\",\n        \"summary\": \"Jasmine (Cate Blanchett) era un mujer rica y glamorosa de la alta sociedad de Nueva York, por la crisis econÃ³mica se ve obligada a desprenderse de lujos y comodidades de su hogar, debe mudarse a San Francisco a vivir con su hermana Ginger (Sally Hawkins), una mujer de clase trabajadora que vive en un pequeÃ±o apartamento con su novio Chili (Bobby Cannavale). Jasmine atraviesa la etapa mÃ¡s crucial de una grave crisis existencial, tomando antidepresivos y recordando su antigua vida en Manhattan y los Hamptons con su marido Hal (Alec Baldwin).\",\n        \"title\": \"Blue jasmine\",\n        \"trailer\": \"http://youtu.be/nNZ-Lv1uRLU\"\n      },\n      {\n        \"cines\": [\n          {\n            \"name\": \"GalerÃ­as\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 4 (2D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><i>Lunes a Mi&#xE9;rcoles</i></div><div class=\\\"horarios\\\">Horarios: 2:00 p.m. &#x2013; 5:00 &#x2013; 8:00 p.m.</div><div class=\\\"dias\\\"><i>Jueves a Domingo</i></div><div class=\\\"horarios\\\">Horarios: 11:00 a.m. &#x2013; 2:00 &#x2013; 5:00 &#x2013; 8:00 p.m.</div><div class=\\\"sala\\\">SALA 5 (SUBTITULADA)</div><div class=\\\"dias\\\"><i>Lunes a Mi&#xE9;rcoles</i></div><div class=\\\"horarios\\\">Horarios: 1:00 p.m. &#x2013; 4:00 &#x2013; 7:15 p.m.</div><div class=\\\"dias\\\"><i>Jueves a Domingo</i></div><div class=\\\"horarios\\\">Horarios: 1:00 p.m. &#x2013; 4:00 &#x2013; 7:15 &#x2013; 10:00 p.m.</div><div class=\\\"sala\\\">SALA 6 (3D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><i>Todos los D&#xED;as</i></div><div class=\\\"horarios\\\">Horarios: 12:00 m.d. &#x2013; 3:00 &#x2013; 6:00 &#x2013; 9:00 p.m.</div>\"\n          },\n          {\n            \"name\": \"Plaza inter\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 2 (3D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><i>Todos los D&#xED;as</i></div><div class=\\\"horarios\\\">Horarios: 12:20 m.d. &#x2013; 3:20 &#x2013; 6:20 &#x2013; 9:15 p.m.</div><div class=\\\"sala\\\">SALA 4 (2D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><em>Todos los D&#xED;as</em></div><div class=\\\"horarios\\\">Horarios: 11:20 a.m. &#x2013; 2:20 &#x2013; 5:20 &#x2013; 8:20 p.m.</div><div class=\\\"sala\\\">SALA 6 (SUBTITULADA)</div><div class=\\\"dias\\\"><em>Todos los D&#xED;as</em></div><div class=\\\"horarios\\\">Horarios: 1:45 p.m. &#x2013; 4:45 &#x2013; 7:45 p.m.</div>\"\n          },\n          {\n            \"name\": \"Alhambra vip\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 1 (SUBTITULADA)</div><div class=\\\"dias\\\"><i>Lunes a Mi&#xE9;rcoles</i></div><div class=\\\"horarios\\\">Horarios: 3:40 p.m. &#x2013; 6:10 &#x2013; 8:40 p.m.</div><div class=\\\"dias\\\"><i>Jueves a Domingo</i></div><div class=\\\"horarios\\\">Horarios: 1:10 p.m. &#x2013; 3:40 &#x2013; 6:10 &#x2013; 8:40 p.m.</div><div class=\\\"sala\\\">SALA 2 (SUBTITULADA)</div><div class=\\\"dias\\\"><em>Lunes a Viernes</em></div><div class=\\\"horarios\\\">Horarios: 2:00 p.m. &#x2013; 4:30 &#x2013; 7:00 &#x2013; 9:30 p.m.</div><div class=\\\"dias\\\"><i>S&#xE1;bado a Domingo</i></div><div class=\\\"horarios\\\">Horarios: 11:30 a.m. &#x2013; 2:00 &#x2013; 4:30 &#x2013; 7:00 &#x2013; 9:30 p.m.</div>\"\n          },\n          {\n            \"name\": \"Alhambra bh\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 2 (DOBLADA)</div><div class=\\\"dias\\\"><i>Lunes a Mi&#xE9;rcoles</i></div><div class=\\\"horarios\\\">Horarios: 2:30 p.m. &#x2013; 5:00 &#x2013; 7:30 p.m.</div><div class=\\\"dias\\\"><i>Jueves a Domingo</i></div><div class=\\\"horarios\\\">Horarios: 12:00 m.d. &#x2013; 2:30 &#x2013; 5:00 &#x2013; 7:30 p.m.</div><div class=\\\"sala\\\">SALA 3 (3D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><em>Lunes a Mi&#xE9;rcoles</em></div><div class=\\\"horarios\\\">Horarios: 3:00 p.m. &#x2013; 5:30 &#x2013; 8:00 p.m.</div><div class=\\\"dias\\\"><em>Jueves a Domingo</em></div><div class=\\\"horarios\\\">Horarios: 12:30 m.d. &#x2013; 3:00 &#x2013; 5:30 &#x2013; 8:00 p.m.</div>\"\n          },\n          {\n            \"name\": \"Cinemark\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 5 (2D &#x2013; DOBLADA)</div><div class=\\\"dias\\\"><em>Lunes a Viernes</em></div><div class=\\\"horarios\\\">Horarios: 12:15 m.d. &#x2013; 3:00 &#x2013; 5:45 p.m.</div><div class=\\\"dias\\\"><em>S&#xE1;bado y Domingo</em></div><div class=\\\"horarios\\\">Horarios: 11:45 a.m. &#x2013; 2:45 &#x2013; 5:35 p.m.</div><div class=\\\"sala\\\">SALA 5 (3D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><em>Todos los D&#xED;as</em></div><div class=\\\"horarios\\\">Horarios: 8:30 p.m.</div><div class=\\\"sala\\\">SALA 6 (3D &#x2013; DOBLADA)</div><div class=\\\"dias\\\"><em>Lunes a Viernes</em></div><div class=\\\"horarios\\\">Horarios: 3:30 p.m. &#x2013; 6:15 p.m.</div><div class=\\\"dias\\\"><em>S&#xE1;bado y Domingo</em></div><div class=\\\"horarios\\\">Horarios: 1:05 p.m. &#x2013; 6:15 p.m.</div><div class=\\\"sala\\\">SALA 6 (2D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><em>Lunes a Viernes</em></div><div class=\\\"horarios\\\">Horarios: 9:00 p.m.</div><div class=\\\"dias\\\"><em>S&#xE1;bado y Domingo</em></div><div class=\\\"horarios\\\">Horarios: 9:05 p.m.</div>\"\n          }\n        ],\n        \"poster\": \"http://revistacinematografica.com.ni/wp-content/uploads/2014/05/poster-xmen.jpg\",\n        \"duration\": \"2 Horas 11 minutos\",\n        \"genres\": \"Acci&#xF3;n y Aventura\",\n        \"clasification\": \" PG-13\",\n        \"director\": \"Bryan Singer\",\n        \"summary\": \"Los X-Men envÃ­an a Wolverine al pasado en un desesperado esfuerzo de cambiar el curso de la historia y prevenir un evento que podrÃ­a ser la perdiciÃ³n para ambas especies, la humana y la mutante.\",\n        \"title\": \"X-men: dÃ­as del futuro pasado\",\n        \"trailer\": \"https://www.youtube.com/watch?v=B2dyk4YE7qs\"\n      },\n      {\n        \"cines\": [\n          {\n            \"name\": \"GalerÃ­as\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 9 (SUBTITULADA)</div><div class=\\\"dias\\\"><em>Todos los D&#xED;as</em></div><div class=\\\"horarios\\\">Horarios: 5:15 p.m. &#x2013; 7:45 p.m.</div><div class=\\\"sala\\\">SALA 10 (2D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><em>Todos los D&#xED;as</em></div><div class=\\\"horarios\\\">Horarios: 12:30 m.d. &#x2013; 3:30 &#x2013; 6:15 &#x2013; 8:45 p.m.</div>\"\n          },\n          {\n            \"name\": \"Plaza inter\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 7 (SUBTITULADA)</div><div class=\\\"dias\\\"><em>Todos los D&#xED;as</em></div><div class=\\\"horarios\\\">Horarios: 11:40 a.m. &#x2013; 2:30 &#x2013; 5:10 &#x2013; 8:10 p.m.</div><div class=\\\"sala\\\">SALA 8 (SUBTITULADA)</div><div class=\\\"dias\\\"><em>Todos los D&#xED;as</em></div><div class=\\\"horarios\\\">Horarios: 5:40 p.m. &#x2013; 8:45 p.m.</div>\"\n          },\n          {\n            \"name\": \"Alhambra bh\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 6 (DOBLADA)</div><div class=\\\"dias\\\"><i>Todos los D&#xED;as</i></div><div class=\\\"horarios\\\">Horarios: 1:00 p.m. &#x2013; 3:30 &#x2013; 6:10 &#x2013; 8:40 p.m.</div>\"\n          },\n          {\n            \"name\": \"Cinemark\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 4 (2D &#x2013; DOBLADA)</div><div class=\\\"dias\\\"><i>Lunes a Viernes</i></div><div class=\\\"horarios\\\">Horarios: 12:45 m.d. &#x2013; 3:30 &#x2013; 8:50 p.m.</div><div class=\\\"dias\\\"><i>S&#xE1;bado y Domingo</i></div><div class=\\\"horarios\\\">Horarios: 11:10 a.m. &#x2013; 1:55 &#x2013; 4:25 &#x2013; 9:25 p.m.</div>\"\n          }\n        ],\n        \"poster\": \"http://revistacinematografica.com.ni/wp-content/uploads/2014/05/poster-godzilla.jpg\",\n        \"duration\": \"2 Horas 3 minutos\",\n        \"genres\": \"Acci&#xF3;n/Aventura, Ciencia Ficci&#xF3;n/Fantas&#xED;a\",\n        \"clasification\": \" PG-13\",\n        \"director\": \"Gareth Edwards\",\n        \"summary\": \"En el verano de 2014, el monstruo mÃ¡s famoso del mundo renace de la mano de Warner Bros. Pictures y Legendary Pictures, con la Ã©pica aventura de acciÃ³n âGodzillaâ. Del nuevo y visionario director Gareth Edwards (âMonstersâ), llega una poderosa historia de valor humano y reconciliaciÃ³n con las grandes fuerzas de la naturaleza, cuando el increÃ­ble Godzilla resurge para restaurar el equilibrio cuando la humanidad se encuentra indefensa.\",\n        \"title\": \"Godzilla\",\n        \"trailer\": \"http://youtu.be/h9y-zO5f3Z0\"\n      },\n      {\n        \"cines\": [\n          {\n            \"name\": \"GalerÃ­as\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 7 (2D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><i>Todos los D&#xED;as</i></div><div class=\\\"horarios\\\">Horarios: 12:15 m.d. &#x2013; 5:20 &#x2013; 7:30 p.m.</div>\"\n          },\n          {\n            \"name\": \"Cinemark\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 3 (2D &#x2013; SUBTITULADA)</div><div class=\\\"dias\\\"><i>Lunes a Viernes</i></div><div class=\\\"horarios\\\">Horarios: 4:10 p.m.</div><div class=\\\"dias\\\"><i>S&#xE1;bado y Domingo</i></div><div class=\\\"horarios\\\">Horarios: 4:45 p.m.</div>\"\n          }\n        ],\n        \"poster\": \"http://revistacinematografica.com.ni/wp-content/uploads/2014/05/poster-woman.jpg\",\n        \"duration\": \"1 Hora 49 minutos\",\n        \"genres\": \"Comedia\",\n        \"clasification\": \" PG-13\",\n        \"director\": \"Nick Cassavetes\",\n        \"summary\": \"DespuÃ©s de darse cuenta que no es la Ãºnica amante de su novio, una mujer se une con su esposa y otra amante para vengarse y poner sus vidas arruinadas de nuevo en marcha.Â Una divertida comedia sobre el despecho y ajuste de cuentas femenino donde tratarÃ¡n de ponÃ©rselo difÃ­cil al hombre que ha originado esta disparatada y complicada situaciÃ³n.\",\n        \"title\": \"Mujeres al ataque\",\n        \"trailer\": \"http://youtu.be/xzYRLa6k6Ig\"\n      },\n      {\n        \"cines\": [\n          {\n            \"name\": \"Cinemark\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 3 (2D &#x2013; DOBLADA)</div><div class=\\\"dias\\\"><i>Lunes a Viernes</i></div><div class=\\\"horarios\\\">Horarios: 1:05 p.m.</div><div class=\\\"dias\\\"><i>S&#xE1;bado y Domingo</i></div><div class=\\\"horarios\\\">Horarios: 11:30 a.m.</div>\"\n          }\n        ],\n        \"poster\": \"http://revistacinematografica.com.ni/wp-content/uploads/2014/05/poster-spiderman.jpg\",\n        \"duration\": \"2 Horas 22 minutos\",\n        \"genres\": \"Acci&#xF3;n, Aventura y Fantas&#xED;a\",\n        \"clasification\": \" PG-13\",\n        \"director\": \"Marc Webb\",\n        \"summary\": \"Peter Parker lleva una vida muy ocupada, compaginando su tiempo entre su papel como Spider-Man, acabando con los malos, y en el instituto con la persona a la que quiere, Gwen. Peter no ve el momento de graduarse. No ha olvidado la promesa que le hizo al padre de Gwen de protegerla, manteniÃ©ndose lejos de ella, pero es una promesa que simplemente no puede cumplir. Las cosas cambiarÃ¡n para Peter cuando aparece un nuevo villano, Electro, y un viejo amigo, Harry Osborn, regresa, al tiempo que descubre nuevas pistas sobre su pasado.\",\n        \"title\": \"El sorprendente hombre araÃ±a 2\",\n        \"trailer\": \"https://www.youtube.com/watch?v=PKD0zFC5WZU\"\n      },\n      {\n        \"cines\": [\n          {\n            \"name\": \"GalerÃ­as\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 9 (DOBLADA)</div><div class=\\\"dias\\\"><i>Lunes a Viernes</i></div><div class=\\\"horarios\\\">Horarios: 1:20 p.m. &#x2013; 3:20 p.m.</div><div class=\\\"dias\\\"><i>Jueves a Domingo</i></div><div class=\\\"horarios\\\">Horarios: 11:20 a.m. &#x2013; 1:20 &#x2013; 3:20 p.m.</div>\"\n          },\n          {\n            \"name\": \"Plaza inter\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 8 (DOBLADA)</div><div class=\\\"dias\\\"><i>Todos los D&#xED;as</i></div><div class=\\\"horarios\\\">Horarios: 11:30 a.m. &#x2013; 1:30 &#x2013; 3:30 p.m.</div>\"\n          },\n          {\n            \"name\": \"Alhambra bh\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 5 (DOBLADA)</div><div class=\\\"dias\\\"><i>Lunes a Mi&#xE9;rcoles</i></div><div class=\\\"horarios\\\">Horarios: 1:30 p.m. &#x2013; 3:30 &#x2013; 5:30 p.m.</div><div class=\\\"dias\\\"><i>Jueves a Domingo</i></div><div class=\\\"horarios\\\">Horarios: 11:30 a.m. &#x2013; 1:30 &#x2013; 3:30 &#x2013; 5:30 p.m.</div>\"\n          },\n          {\n            \"name\": \"Cinemark\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 6 (2D &#x2013; DOBLADA)</div><div class=\\\"dias\\\"><i>Lunes a Viernes</i></div><div class=\\\"horarios\\\">Horarios: 1:05 p.m.</div><div class=\\\"dias\\\"><i>S&#xE1;bado y Domingo</i></div><div class=\\\"horarios\\\">Horarios: 10:45 a.m. &#x2013; 3:50 p.m.</div>\"\n          }\n        ],\n        \"poster\": \"http://revistacinematografica.com.ni/wp-content/uploads/2014/05/poster-rio2.jpg\",\n        \"duration\": \"1 Hora 41 minutos\",\n        \"genres\": \"Animaci&#xF3;n, Aventura y Comedia\",\n        \"clasification\": \" G\",\n        \"director\": \"Carlos Saldanha\",\n        \"summary\": \"Blu, Perla y sus tres hijos llevan una vida perfecta. Cuando Perla decide que los niÃ±os tienen que aprender a vivir como autÃ©nticas aves, insiste en que la familia se aventure a viajar al Amazonas. Mientras Blu trata de encajar con sus nuevos vecinos, le preocupa la posibilidad de perder a Perla y a los chicos ante la llamada de la selva.\",\n        \"title\": \"Rio 2\",\n        \"trailer\": \"http://youtu.be/KEdMxJUQK9Y\"\n      },\n      {\n        \"cines\": [\n          {\n            \"name\": \"Cinemark\",\n            \"html\": \"<div class=\\\"sala\\\">SALA 4 (2D &#x2013; DOBLADA)</div><div class=\\\"dias\\\"><i>Lunes a Viernes</i></div><div class=\\\"horarios\\\">Horarios: 6:15 p.m.</div><div class=\\\"dias\\\"><i>S&#xE1;bado y Domingo</i></div><div class=\\\"horarios\\\">Horarios: 7:00 p.m.</div>\"\n          }\n        ],\n        \"poster\": \"http://revistacinematografica.com.ni/wp-content/uploads/2014/05/poster-dnem.jpg\",\n        \"duration\": \"1 Hora 24 minutos\",\n        \"genres\": \"Documental\",\n        \"clasification\": \" PG-13\",\n        \"director\": \"Bahar Kilic\",\n        \"summary\": \"Un documental que va mÃ¡s allÃ¡ de los reinos de la mÃºsica, la polÃ­tica y el diÃ¡logo intercultural.\",\n        \"title\": \"Dios no esta muerto\",\n        \"trailer\": \"https://www.youtube.com/watch?v=wTHSLCQTNes\"\n      }\n    ]\n\nSource from [http://revistacinematografica.com.ni/cartelera-cinematografica/](http://revistacinematografica.com.ni/cartelera-cinematografica/)\n","react-best-input":"# react-best-input\nA simple and best input component for react.\n\n[ä¸­æç-README](https://github.com/luffyZh/react-best-input/blob/master/README-ZHCN.md)\n### Version\nv1.0.4\n - extends onBlur, onKeyUp and onKeyDown from normal input.\n### Example\n```\ngit clone https://github.com/luffyZh/react-best-input.git\ncd demo\nyarn install\nyarn start\n```\n### Usage\n```\nyarn add react-best-input || npm install react-best-input --save\n// in the components\nimport BestInput from 'react-best-input'\n...\n<BestInput />\n```\n### Props\n  - value: [string], The BestInput value.\n  - placeholder: [string].\n  - label: [string]. Automatically add prefixes label.\n  - timer: [number]. Add the debounce function for BestInput.\n  - error: [boolean]. Automatically add error status.\n  - errMsg: [string]. Automatically add errMsg under the input.\n  - addons: [string]. Automatically add hint info under the input.\n  - charBase: [object]. You can custom the char base length, default `{ 'zh-cn': 1, 'eng': 1 }`\n  - onChange(e, value): [Function]. BestInput onChange function.\n  - getLength(length): [Function]. Get the BestInput's custom value length.\n  - ...Others. Follow-up development. \n","react-connex":"# react-connex\n\nSimple higher-order component (HOC) providing a Connex context to React app.\n\nDetects whether the user is using Sync or a Comet wallet-enabled browser.\n\n## Installation\n```sh\n$ yarn add react-connex\n```\n\n## Basic Usage\nAdd the `ConnexProvider to your root React Component;\n```js\nimport ConnexProvider from 'react-connex';\n\n<ConnexProvider\n  loading=\"Loading...\"\n  error={err => `Connection error: ${err}`}>\n  <App />\n</ConnexProvider>\n```\n\nThen in the component where you want to use Connex:\n```js\nimport { withConnex } from 'react-connex';\n\nclass MyComponent {\n  render() {\n    const { connex } = this.props;\n    const status = connex.thor.status;\n\n    return status.progress;\n  }\n}\n\nexport default withConnex(MyComponent);\n```\n\nYou can use the injected `getNetwork` property to get network details:\n```js\nimport { withConnex } from 'react-connex';\n\nclass MyComponent {\n  render() {\n    const { getNetwork } = this.props;\n    getNetwork().then(network => {\n      return `${network.id} and ${network.name}`\n    });\n  }\n}\n\nexport default withConnex(MyComponent);\n```\n","react-google-map-image":"# react-google-map-image\nThis is a simple react component that displays the image of a google map location.\n\n\n## Demo & Examples\n\nLive demo: [bodunadebiyi.github.io/react-google-map-image](http://bodunadebiyi.github.io/react-google-map-image/)\n\nTo build the examples locally, run:\n\n```\nnpm install\nnpm start\n```\n\nThen open [`localhost:8000`](http://localhost:8000) in a browser.\n\n\n## Installation\n\nThe easiest way to use react-google-map-image is to install it from NPM and include it in your own React build process (using [Browserify](http://browserify.org), [Webpack](http://webpack.github.io/), etc).\n\nYou can also use the standalone build by including `dist/react-google-map-image.js` in your page. If you use this, make sure you have already included React, and it is available as a global variable.\n\n```\nnpm install react-google-map-image --save\n```\n\n\n## Usage\nThis component is super easy to you\n\n```js\n// Using ES5\nvar ReactGoogleMapImage = require('react-google-map-image'); \n\n// Using ES6\nimport ReactGoogleMapImage from 'react-google-map-image';\n\n// Example Usage\nconst googleMapApiConfig = { \n\tcenter: '32 wulemotu ajoke street akoka', \n\tsize: '500x240', \n\tzoom: '15',\n\tkey: {{ google-api-key }}, \n\tmaptype: 'roadmap'\n}\n<ReactGoogleMapImage \n    config={googleMapApiConfig}\n    wrapperStyle={{ width: '100%' }}\n    style={{ width: '100px', height: 'auto', border: '1px solid #ccc'}}\n/>\n```\n\n### Properties\n###### config\nThis component makes use of google's Static Map API, this prop object contains the parameters used to configure this component. The full list of parameters can be found [here](https://developers.google.com/maps/documentation/static-maps/intro) on the google's static map page.\n\n###### wrapperStyle\nThis prop is a style object used to customize the wrapper-div covering the image.\n\n###### style\nThis prop is a style object used to customize the map image.\n\n## Development (`src`, `lib` and the build process)\n\n**NOTE:** The source code for the component is in `src`. A transpiled CommonJS version (generated with Babel) is available in `lib` for use with node.js, browserify and webpack. A UMD bundle is also built to `dist`, which can be included without the need for any build system.\n\nTo build, watch and serve the examples (which will also watch the component source), run `npm start`. If you just want to watch changes to `src` and rebuild `lib`, run `npm run watch` (this is useful if you are working with `npm link`).\n\nCopyright (c) 2017 Adebiyi Bodunde.\n\n","react-native-document-scanner":"![Demo gif](https://raw.githubusercontent.com/Michaelvilleneuve/react-native-document-scanner/master/images/demo.gif)\n\n# React Native Document Scanner (iOS only)\n\nLive document detection library. Returns either a URI or a base64 encoded string of the captured image, allowing you to easily store it or use it as you wish !\n\nFeatures :\n - Live detection\n - Perspective correction and crop of the image\n - Live camera filters (brightness, saturation, contrast)\n - Flash\n - Easy to use base64 image\n\n #### Can be easily plugged with [react-native-perspective-image-cropper](https://github.com/Michaelvilleneuve/react-native-perspective-image-cropper)\n\n\n ![Demo crop gif](https://camo.githubusercontent.com/0ac887deaa7263172a5fd2759dba3d692e98585a/68747470733a2f2f73332d65752d776573742d312e616d617a6f6e6177732e636f6d2f6d69636861656c76696c6c656e657576652f64656d6f2d63726f702e676966)\n\n## Getting started\n\nUse version >=1.4.1 if you are using react-native 0.48+\n\n`$ npm install react-native-document-scanner --save`\n\n`$ react-native link react-native-document-scanner`\n\nEdit the `info.plist` file in XCode and add the following permission : `NSCameraUsageDescription`\n\nRemember, this library uses your device camera, you can't run it on a simulator.\n\n### With Cocoapods\n\nIf you want to use Cocoapods insteads of `react-native link`, add the following to your Podfile\n\n```\n  pod 'RNPdfScanner', :path => '../node_modules/react-native-document-scanner/ios'\n```\n\n\n## Usage\n```javascript\nimport React,{ Component } from 'react';\nimport { View, Image } from 'react-native';\n\nimport DocumentScanner from 'react-native-document-scanner';\n\nclass YourComponent extends Component {\n  render() {\n    return (\n      <View>\n        <DocumentScanner\n          useBase64\n          onPictureTaken={data => this.setState({\n            image: data.croppedImage,\n            initialImage: data.initialImage,\n            rectangleCoordinates: data.rectangleCoordinates,\n          })}\n          overlayColor=\"rgba(255,130,0, 0.7)\"\n          enableTorch={false}\n          brightness={0.3}\n          saturation={1}\n          contrast={1.1}\n          quality={0.5}\n          onRectangleDetect={({ stableCounter, lastDetectionType }) => this.setState({ stableCounter, lastDetectionType })}\n          detectionCountBeforeCapture={5}\n          detectionRefreshRateInMS={50}\n        />\n        <Image source={{ uri: `data:image/jpeg;base64,${this.state.image}`}} resizeMode=\"contain\" />\n      </View>\n    );\n  }\n}\n\n```\n\n## Properties\n\n| Prop  | Default  | Type | Description |\n| :-------- |:----:| :--------:| :----------|\n| overlayColor |Â `none` |Â `string` |Â Color of the detected rectangle : rgba recommended |\n| detectionCountBeforeCapture |Â `5` |Â `integer` |Â Number of correct rectangle to detect before capture |\n| detectionRefreshRateInMS |Â `50` |Â `integer` |Â Time between two rectangle detection attempt |\n| enableTorch |Â `false` | `bool` |Â Allows to active or deactivate flash during document detection |\n| useFrontCam |Â `false` | `bool` |Â Allows you to switch between front and back camera |\n| brightness |Â `0` |Â `float` | Increase or decrease camera brightness. Normal as default. |\n| saturation |Â `1`Â | `float` |Â Increase or decrease camera saturation. Set `0` for black & white |\n| contrast |Â `1` |Â `float` |Â Increase or decrease camera contrast. Normal as default |\n| quality |Â `0.8` |Â `float` |Â Image compression. Reduces both image size and quality |\n| useBase64 |Â `false` |Â `bool` |Â If base64 representation should be passed instead of image uri's |\n| captureMultiple |Â `false` |Â `bool` |Â Keeps the scanner on after a successful capture |\n\n## Manual capture\n\n- First get component ref\n```javascript\n<DocumentScanner ref={(ref) => this.scanner = ref} />\n```\n\n- Then call :\n```javascript\nthis.scanner.capture();\n```\n\n## Each rectangle detection\n| Props             | Params                                 | Type     | Description |\n|-------------------|----------------------------------------|----------|-------------|\n| onRectangleDetect | `{ stableCounter, lastDetectionType }` | `object` | See below   |\n\nThe returned object includes the following keys :\n\n- `stableCounter`\n\nNumber of correctly formated rectangle found (this number triggers capture once it goes above `detectionCountBeforeCapture`)\n\n- `lastDetectionType`\n\nEnum (0, 1 or 2) corresponding to the type of rectangle found\n0. Correctly formated rectangle\n1. Wrong perspective, bad angle\n2. Too far\n\n\n## Returned image\n\n| Prop | Params |Â Type | Description |\n| :----------- |:-------:| :--------:| :----------|\n| onPictureTaken |Â `data` | `object`Â | Returns the captured image in an object `{ croppedImage: ('URI or BASE64 string'), initialImage: 'URI or BASE64 string', rectangleCoordinates: 'object of coordinates' }` |\n\n\n\n### If you prefer manual installation\n\n1. In XCode, in the project navigator, right click `Libraries` â `Add Files to [your project's name]`\n2. Go to `node_modules` â `react-native-pdf-scanner` and add `RNPdfScanner.xcodeproj`\n3. In XCode, in the project navigator, select your project. Add `libRNPdfScanner.a` to your project's `Build Phases` â `Link Binary With Libraries`\n4. Run your project (`Cmd+R`)<\n\n## Credits\n\nThis repo is a React Native implementation of the following native library : https://github.com/mmackh/IPDFCameraViewController\nSpecial thank to Mark Peysale :)\n","react-native-security-keyboard":"# react-native-security-keyboard\n\nA security keyboard, Re - realized TextInput, and more powerful.\n\n<p align=\"center\">\n<img src=\"http://img-steward-online.goodaa.com.cn/d924715db5be4e9ebea58d161e16270c.gif\" alt=\"Scroll demo\" width=\"400\">\n</p>\n\n## Installation\nInstallation can be done through ``npm`` or `yarn`:\n\n```shell\nnpm i react-native-security-keyboard --save\n```\n\n```shell\nyarn add react-native-security-keyboard\n```\n\n## Usage\n\nImport ``react-native-security-keyboard`` and wrap your content inside\nit:\n\n```js\nimport SecurityKeyboard from 'react-native-security-keyboard'\n```\n\n```jsx\n<SecurityKeyboard\n    placeholder={\"æå¨è¾å¥éé¢\"}\n    placeholderTextColor={'#E0E0E0'}\n    onChangeText={this.XXXX.bind(this)}\n    onFocus={this.XXXX.bind(this)}\n    style={styles.XXX}\n    valueStyle={styles.XXXX}\n    ref={$moneyInput=>{\n        this.$moneyInput = $moneyInput;\n    }}\n    regs={this.XXX.bind(this)}\n/>\n```\n\n\n## API\n### Props\n\n| **Prop** | **Type** | **Description** |\n|----------|----------|-----------------|\n| `disabled` | `String` | prohibit input, The default is false. |\n| `caretHidden` | `String` | hide cursor, The default is false. |\n| `secureTextEntry` | `String` |password modal, The default is false.. |\n| `placeholderTextColor` | `String` | The color of the text displayed by the placeholder string. |\n| `style` | `Object` | custom TextInput external style Style, does not support font Style. |\n| `valueStyle` | `Object` | Text content style.|\n| `keyboardHeader` | `element` | Customizing the top of the keyboard.|\n| `regs` | `Func(value)` | value check, need to return the check after the value out. |\n| `onChangeText` | `Func(value)` | Value modified callback. |\n| `onFocus` | `Func` | The callback function of the focus. |\n| `onBlur` | `Func` | A callback function that loses focus |\n\n### Methods\n\n| **Method** | **Parameter** | **Description** |\n|------------|---------------|-----------------|\n| `clear` | none | Clear all the content |\n| `isFocused` | none |The return value indicates whether the current input box has got the focus. |\n| `blur` | none | Lose focus. |\n| `focus` | none | Get the focus. |\n\n\n## Contact\nMore methods are needed. Please contact me amaze_y@163.com\n\n## Author\nYan","react-native-sms-x":"## react-native-sms-x\n***\n**SendSMS**\n\n> ##### A react-native api to send SMS messages. It works only for android. This component used android native api to send sms and response a callback to react-native. This react-native component doesn't link to the mobile default messenger view. It will programmatically send the message to a phone number which is provided as a parameter and will response a callback with a string indicating message was sent or failure or no service.\n\n*usage*\n```js\nimport SendSMS from 'react-native-sms-x';\n// you can put any number as Id to identify which message being process\nSendSMS.send(123, \"+959254687254\", \"Hey.., this is me!\\nGood to see you. Have a nice day.\", (msg)=>{ alert(msg) });\n```\n\nResponse msg string will be one of the following:\n\n+ \"SMS sent\"        - for successful message\n+ \"Generic failure\" - for general failure\n+ \"No service\"      - for no mobile operator service\n+ \"Radio off\"       - for no mobile signal\n+ \"Null PDU\"        - for no PDU\n\n###### *Note:*\n\n###### Minimum android version is `4.1` and supported `RN >= v0.29`.\n---\n#### Installation\n```\nnpm install react-native-sms-x --save\n```\n---\n##### **Android Setup**\n\n1.In your `android/settings.gradle` file, make the following additions:\n\n```\ninclude ':react-native-sms-x'\nproject(':react-native-sms-x').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-sms-x/android/app')\n```\n\n2.In your `android/app/build.gradle` file, add the ':react-native-sms-x' project as a compile-time dependency:\n\n```\n...\ndependencies {\n    ...\n    compile project(':react-native-sms-x')\n}\n```\n\n3.Update the `MainApplication.java` file as follow:\n\n```java\nimport com.facebook.react.ReactApplication;\n...\nimport com.someone.sendsms.SendSMSPackage; // <--- add here!\n\n\npublic class MainApplication extends Application implements ReactApplication {\n\n  private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {\n    @Override\n    protected boolean getUseDeveloperSupport() {\n      return BuildConfig.DEBUG;\n    }\n\n    @Override\n    protected List<ReactPackage> getPackages() {\n      return Arrays.<ReactPackage>asList(\n          new MainReactPackage(),\n          new SendSMSPackage()     // <--- add here!\n      );\n    }\n  };\n\n  @Override\n  public ReactNativeHost getReactNativeHost() {\n      return mReactNativeHost;\n  }\n}\n```\n\n4.In your `AndroidManifest.xml` file, add a user permission for sending SMS.\n\n```\n<uses-permission android:name=\"android.permission.SEND_SMS\" />\n```\n---\n**Example**\n\n```js\nimport React, { Component } from 'react';\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  ToastAndroid\n} from 'react-native';\nimport SendSMS from 'react-native-sms-x';\n\nexport default class RNSMS extends Component {\n  sendSMSFunction() {\n    SendSMS.send(123, \"+95912345678\", \"Hey.., this is me!\\nGood to see you. Have a nice day.\",\n      (msg)=>{\n        ToastAndroid.show(msg, ToastAndroid.SHORT);\n      }\n    );\n  }\n  render() {\n    return (\n      <View style={styles.container}>        \n        <TouchableOpacity style={styles.button} onPress={this.sendSMSFunction.bind(this)}>\n          <Text>Send SMS</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },  \n  button: {\n    padding: 10,\n    borderWidth: .5,\n    borderColor: '#bbb',\n    margin: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nAppRegistry.registerComponent('RNSMS', () => RNSMS);\n```\n\n## Support on Beerpay\nHey dude! Help me out for a couple of :beers:!\n\n[![Beerpay](https://beerpay.io/yeyintkoko/react-native-sms-x/badge.svg?style=beer-square)](https://beerpay.io/yeyintkoko/react-native-sms-x)  [![Beerpay](https://beerpay.io/yeyintkoko/react-native-sms-x/make-wish.svg?style=flat-square)](https://beerpay.io/yeyintkoko/react-native-sms-x?focus=wish)\n","react-native-update-avocados":"\n# react-native-update-avocados\n\nAppæ´æ°å¤ç \n\n`TODO å®åè£ååè°`\n\n## Getting started\n\n`$ npm install react-native-update-avocados --save`\n\n### Mostly automatic installation\n\n`$ react-native link react-native-update-avocados`\n\n### Manual installation\n\n\n#### iOS\n\n1. In XCode, in the project navigator, right click `Libraries` â `Add Files to [your project's name]`\n2. Go to `node_modules` â `react-native-update-avocados` and add `RNUpdateAvocados.xcodeproj`\n3. In XCode, in the project navigator, select your project. Add `libRNUpdateAvocados.a` to your project's `Build Phases` â `Link Binary With Libraries`\n4. Run your project (`Cmd+R`)<\n\n#### Android\n\n1. Open up `android/app/src/main/java/[...]/MainActivity.java`\n  - Add `import com.updateavocados.reactnative.RNUpdateAvocadosPackage;` to the imports at the top of the file\n  - Add `new RNUpdateAvocadosPackage()` to the list returned by the `getPackages()` method\n2. Append the following lines to `android/settings.gradle`:\n  \t```\n  \tinclude ':react-native-update-avocados'\n  \tproject(':react-native-update-avocados').projectDir = new File(rootProject.projectDir, \t'../node_modules/react-native-update-avocados/android')\n  \t```\n3. Insert the following lines inside the dependencies block in `android/app/build.gradle`:\n  \t```\n      compile project(':react-native-update-avocados')\n  \t```\n\n\n## Usage\n```javascript\nimport RNUpdateAvocados from 'react-native-update-avocados';\n\n// \nRNUpdateAvocados;\n```\n  ","react-native-viewport":"# react-native-viewport\nUtility to get current size of the viewport.\n\n## Add it to your project\n\n1. Run `npm install react-native-viewport --save`\n2. Open your project in XCode, right click on `Libraries` and click `Add Files to \"Your Project Name\"`.\n3. Navigate to `node_modules/react-native-viewport`\n4. Select `Viewport.xcodeproj`\n5. Add `libViewport.a` to `Build Phases -> Link Binary With Libraries`.\n6. Click on `Viewport.xcodeproj` in `Libraries` and go the `Build Phases` tab. Double click the text to the right of `Header Search Paths` and verify that it has `$(SRCROOT)../react-native/React` - if it isn't, then add it. This is so XCode is able to find the headers that the `Viewport` source files are referring to by pointing to the header files installed within the `react-native` `node_modules` directory.\n7. Whenever you want to use it within React code now you can: `var Viewport = require('react-native-viewport');`\n\n## Methods\n***\nNote that any time you receive dimensions you will be given an object formatted like so:\n\n```\n{\n\twidth: 120,\n\theight: 120\n}\n```\n***\n\n`addEventListener(eventName, callback)`\n\n>Adds an event listener to the backing viewport manager. Will call the provided callback whenever the event is fired.\n\n>Currently the only supported event is `dimensionsDidChange`. As a convenience, you can reference this event via `Viewport.events.DEVICE_DIMENSIONS_EVENT`. This event fires whenever the dimensions of the screen change (e.g. a screen rotation).\n\n`removeEventListener(eventName, callback)`\n\n>Removes an event listener from the backing viewport manager. Will only remove listeners with the exact name and callback specified.\n\n`getDimensions(callback)`\n\n>Gets the current dimensions and passes them to the specified callback. This is useful if you ever want to get dimensions in an adhoc way, such as when the app first boots up and before you have the chance to attach a listener.\n\n  ","react-sceneview":"# react-sceneview\n\nA simple Esri [SceneView](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html) react component that builds on the [ArcGIS API for JavaScript](https://developers.arcgis.com/javascript/index.html).\n\n## Table of Contents\n\n- [Installing](#installing)\n- [Examples](#examples)\n- [Props](#props)\n- [Issues](#issues)\n- [Contributing](#contributing)\n- [Licensing](#licensing)\n\n## Installing\n\n```\n$ npm install --save react-sceneview\n```\n\nThen, just import to your React component:\n\n```jsx\nimport { SceneView, Scene } from 'react-sceneview';\n```\n\n## Examples\n\n```jsx\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { SceneView, Scene, Webscene } from 'react-sceneview';\n\nrender(\n  <SceneView id=\"sceneview\">\n    <Scene>\n      <Webscene  portalItem={{ id: '34859cee6739438d93262a5aa91bf834' }} />\n    </Scene>\n  </SceneView>,\n  document.getElementById('root'),\n);\n```\n\nAdd a [WebScene](https://developers.arcgis.com/javascript/latest/api-reference/esri-WebScene.html) and/or individual layers:\n\n```jsx\n<SceneView id=\"sceneview\">\n  <Scene>\n    <Layer id=\"buildings\" layerType=\"scene\" url={SCENE_LAYER_URL} />\n    <Layer id=\"districts\" layerType=\"feature\" url={FEATURE_LAYER_URL} />\n  </Scene>\n</SceneView>\n```\n\nSupports various features such as UI widgets, custom basemaps, selection, highlights, definitionExpression, etc...\n\n```jsx\n<SceneView id=\"sceneview\" onClick={handleSelect}>\n  <UI.Zoom position=\"top-left\" />\n  <Scene>\n    <CustomBasemap portalItem={{ id: 'ae53cf192181425ab999e8a19e41a6dc' }} />\n    <Layer id=\"1\" url={URL1} layerType=\"scene\" selectable highlight={selection} />\n    <Layer id=\"2\" url={URL2} layerType=\"feature\" definitionExpression=\"Scenario IN (1,2)\" />\n    <Layer id=\"3\" url={URL3} layerType=\"feature\" visible={false} />\n  </Scene>\n</SceneView>\n```\n\nDynamically add and remove layers:\n\n```jsx\n  <SceneView\n    id=\"sceneview\"\n  >\n    <Scene>\n      {layers.map(({ layerId, ...layerSettings }) => (\n        <Layer\n          key={layerId}\n          id={layerId}\n          {...layerSettings}\n        />\n      ))}\n    </Scene>\n  </SceneView>\n```\n\nSupports client-side graphics: dynamically add and remove graphics from feature layer.\n\n```jsx\n<SceneView id=\"sceneview\">\n  <Scene>\n    <Layer\n      id=\"points\"\n      layerType=\"feature\"\n      geometryType=\"polygon\"\n      fields={fields}\n      objectIdField=\"OID\"\n    >\n      {graphics.map(graphic => (\n        <Graphic geometry={graphic.geometry} attributes={graphic.attributes} symbol={graphic.symbol} />\n      )}\n    </Layer>\n  </Scene>\n  <DrawingTool onDraw={handleDrawUpdate} />\n</SceneView>\n```\n\n## Props\n\n### SceneView\n\n| Name          | Type           | Default | Description |\n| :------------ | :------------- | :------ | :---------- |\n| id            | string         |         | Unique id of this sceneview. This id is used to handle hot module reloading and other component refreshes. |\n| environment   | object         |         | Environment parameters of the sceneview. |\n| goTo   Â  Â  Â   | object |  | Sets the view to a given target `camera` or `geometry`.  |\n| onClick       | function |   | Callback fired after a click in the SceneView. Returns hit test results. |\n| onMouseMove   | function |   | Callback fired after a mouse move (hover) in the SceneView. Returns hit test results. |\n| onCameraChange | function |  | A callback fired after the camera has been changed. Returns the new `camera` object. |\n\n### Scene\n\n| Name          | Type           | Default | Description |\n| :------------ | :------------- | :------ | :---------- |\n| basemap       | string | `gray-vector` | Specifies a basemap for the map. One of `['streets', 'satellite', 'hybrid', 'topo', 'gray', 'dark-gray', 'oceans', 'national-geographic', 'terrain', 'osm', 'dark-gray-vector', 'gray-vector', 'streets-vector', 'topo-vector', 'streets-night-vector', 'streets-relief-vector', 'streets-navigation-vector']`. |\n| ground        | string | `world-elevation` | Specifies the surface properties for the map. |\n| initialViewProperties | object |  | This object contains properties such as `viewpoint`, `spatialReference`, `viewingMode`, and `environment` that should be applied to the SceneView when the scene loads. |\n\n### Layer\n\n| Name          | Type           | Default | Description |\n| :------------ | :------------- | :------ | :---------- |\n| id            | string         |         | Unique id used to reference the layer. |\n| url          | string         |  | URL of scene or feature layer. If omitted, a layer `source` is required. |\n| visible Â  Â  Â   | bool | `true` | Indicates if the layer is visible in the SceneView. |\n| selectable     | bool | `false` | Indicates if features on this layer are returned in `onClick` and `onMouseMove` events, as well as from the selection tools. |\n| highlight | array | `[]` | Feature object ids to be highlighted (usually selection). |\n| definitionExpression | string |  | The SQL where clause used to filter features on the client. |\n| renderer | object | | The renderer assigned to the layer, supplied as an [Auto-casting object](https://developers.arcgis.com/javascript/latest/guide/autocasting/index.html). |\n| rendererJson | object | | The renderer assigned to the layer, supplied as a JSON object generated from a product in the ArcGIS platform. |\n| labelingInfo | object | | The label definition for this layer, specified as an array of [LabelClass](https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-LabelClass.html). |\n| labelsVisible | bool | `false` | Indicates whether to display labels for this layer. |\n| refresh | number |  | Change value to refresh the layer. |\n| outFields | array | | Attribute fields which will be exposed (_e.g._, through selection callbacks). |\n\nIf using client-side graphics, the following props are required:\n\n| Name          | Type           | Default | Description |\n| :------------ | :------------- | :------ | :---------- |\n| geometryType | string | | Geometry type when using client-side graphics. |\n| fields | array | | Attribute fields when using client-side graphics. |\n| objectIdField | string | | Object id field when using client-side graphics.|\n\n### Graphic\n\n| Name          | Type           | Default | Description |\n| :------------ | :------------- | :------ | :---------- |\n| geometry      | object         |  | The geometry that defines the graphic's location. |\n| attributes    | array          |  | Name-value pairs of fields and field values associated with the graphic. |\n| symbol        | object         |  | The Symbol for the graphic. |\n\n### CustomBasemap\n\n| Name          | Type           | Default | Description |\n| :------------ | :------------- | :------ | :---------- |\n| portalItem    | object         |  | The portal item (WebMap or [WebScene](https://developers.arcgis.com/javascript/latest/api-reference/esri-WebScene.html)) containing the custom base map. |\n\n### CustomElevationLayer\n\n| Name          | Type           | Default | Description |\n| :------------ | :------------- | :------ | :---------- |\n| url    | string         |  | URL pointing to the Elevation layer resource on an ArcGIS Image Server. |\n\n### UI.Zoom, UI.Compass, UI.NavigationToggle\n\n| Name          | Type           | Default | Description |\n| :------------ | :------------- | :------ | :---------- |\n| position            | string         |         | Position of the UI widget. One of `['top-left', 'top-right', 'bottom-right', 'bottom-left']`. Default is `'top-left'`. |\n\n## Issues\n\nFind a bug or want to request a new feature?  Please let us know by submitting an issue.\n\n## Contributing\n\nEsri welcomes contributions from anyone and everyone. Please see our [guidelines for contributing](https://github.com/esri/contributing).\n\n## Licensing\nCopyright 2019 Esri\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nA copy of the license is available in the repository's [license.txt](/license.txt) file.\n","react-slick-cong":"# circumstance of fork\nfork from ryota-murakami as the same issuse\n\n# circumstance of fork\nfollowing my PR is ignored, because i started personaly maintenance.\nhttps://github.com/akiran/react-slick/pull/758\n\n# react-slick\n\nCarousel component built with React. It is a react port of [slick carousel](http://kenwheeler.github.io/slick/)\n\n### Installation\n\n```bash\nnpm install react-slick\n```\n\nAlso install slick-carousel for css and font\n\n```bash\nnpm install slick-carousel\n@import \"~slick-carousel/slick/slick.css\";\n@import \"~slick-carousel/slick/slick-theme.css\";\n```\n\nor add cdn link in your html\n\n```html\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\" />\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\" />\n```\n\n### [Demos](http://neostack.com/opensource/react-slick)\n\n### [PlayGround](https://jsfiddle.net/kirana/20bumb4g/)\nUse [jsfiddle template](https://jsfiddle.net/kirana/20bumb4g/) to try react-slick with different settings.\n\n### Filing issues\nPlease replicate your issue with [jsfiddle template](https://jsfiddle.net/kirana/20bumb4g/) and post it along with issue to make it easy for me to debug.\n\n\n### Starter Kit\nCheckout [yeoman generator](https://github.com/akiran/generator-react-slick) to quickly\nget started with react-slick.\n\n### Example\n\n```js\nvar React = require('react');\nvar Slider = require('react-slick');\n\nclass SimpleSlider extends React.Component {\n  render: function () {\n    var settings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1\n    };\n    return (\n      <Slider {...settings}>\n        <div><h3>1</h3></div>\n        <div><h3>2</h3></div>\n        <div><h3>3</h3></div>\n        <div><h3>4</h3></div>\n        <div><h3>5</h3></div>\n        <div><h3>6</h3></div>\n      </Slider>\n    );\n  }\n}\n```\n\n|    Property    | Type |          Description          | Working |\n| -------------  | ---- |          -----------          | ------- |\n| accessibility  | bool | Enables tabbing and arrow key navigation | Yes |\n| className      | String |Additional class name for the inner slider div | Yes |\n| adaptiveHeight | bool | Adjust the slide's height automatically | Yes |\n| arrows         | bool | Should we show Left and right nav arrows | Yes |\n| nextArrow      | React Element | Use this element for the next arrow button | Yes |\n| prevArrow      | React Element | Use this element for the prev arrow button | Yes |\n| autoplay       | bool | Should the scroller auto scroll? | Yes |\n| autoplaySpeed  |  int | delay between each auto scoll. in ms | Yes |\n| centerMode     | bool | Should we centre to a single item? | Yes |\n| centerPadding  | | | |\n| cssEase        | | | |\n| customPaging   | func | Custom paging templates. [Example](https://github.com/akiran/react-slick/blob/master/examples/CustomPaging.js)| Yes |\n| dots           | bool | Should we show the dots at the bottom of the gallery | Yes |\n| dotsClass      | string | Class applied to the dots if they are enabled | Yes |\n| draggable      | bool | Is the gallery scrollable via dragging on desktop? | Yes |\n| easing         | string | | |\n| fade           | bool | Slides use fade for transition  | Yes |\n| focusOnSelect  | bool | Go to slide on click | Yes |\n| infinite       | bool | should the gallery wrap around it's contents | Yes |\n| initialSlide   | int | which item should be the first to be displayed | Yes |\n| lazyLoad       | bool | Loads images or renders components on demands | Yes |\n| pauseOnHover   | bool | prevents autoplay while hovering | Yes |\n| responsive     | array | Array of objects in the form of `{ breakpoint: int, settings: { ... } }` The breakpoint _int_ is the `maxWidth` so the settings will be applied when resolution is below this value. Breakpoints in the array should be ordered from smalles to greatest. Use 'unslick' in place of the settings object to disable rendering the carousel at that breakpoint. Example: `[ { breakpoint: 768, settings: { slidesToShow: 3 } }, { breakpoint: 1024, settings: { slidesToShow: 5 } }, { breakpoint: 100000, settings: 'unslick' } ]`| Yes |\n| rtl            | bool | Reverses the slide order | Yes |\n| slide         | string |||\n| slidesToShow | int | Number of slides to be visible at a time | Yes |\n| slidesToScroll | int | Number of slides to scroll for each navigation item\n| speed | int |||\n| swipe | bool |||\n| swipeToSlide | bool | Allow users to drag or swipe directly to a slide irrespective of slidesToScroll | Yes |\n| touchMove | bool |||\n| touchThreshold | int |||\n| variableWidth | bool |||\n| useCSS | bool | Enable/Disable CSS Transitions | Yes |\n| vertical | bool | Vertical slide mode | Yes |\n| afterChange | function | callback function called after the current index changes | Yes |\n| beforeChange | function | callback function called before the current index changes | Yes |\n| slickGoTo | int | go to the specified slide number | |\n\n\n### Methods\n* `slickNext()`   - function called to change current slide on next slide ([Example](https://github.com/akiran/react-slick/blob/master/examples/PreviousNextMethods.js))\n* `slickPrev()`   - function called to change current slide on previous slide ([Example](https://github.com/akiran/react-slick/blob/master/examples/PreviousNextMethods.js))\n* `slickGoTo(slideNumber)` - function called to change current slide to given slide number ([Example](https://github.com/akiran/react-slick/blob/master/examples/SlickGoTo.js))\n\n### Custom next/prev arrows\n\nTo customize the next/prev arrow elements, simply create new React components and set them\nas the values of nextArrow and prevArrow.\n\n```js\nclass LeftNavButton extends React.Component {\n  render() {\n    return <button {...this.props}>Next</button>\n  }\n}\n```\n\nImportant: be sure that you pass your component's props to your clickable element\nlike the example above. If you don't, your custom component won't trigger the click handler.\n\nYou can also set `onClick={this.props.onClick}` if you only want to set the click handler.\n\n### Flexbox support\nIf you have flex property on container div of slider, add below css\n```css\n* {\n  min-height: 0;\n  min-width: 0;\n}\n```\n\n### Test Setup\nIf you try to run tests with jest in a project that uses react-slick, you my run into this error\n```\nmatchMedia not present, legacy browsers require a polyfill\n```\n\nTo fix this issue add below snippet in test-setup.js\n```js\nwindow.matchMedia = window.matchMedia || function() {\n    return {\n        matches : false,\n        addListener : function() {},\n        removeListener: function() {}\n    };\n};\n\n```\nand add below jest config in package.json\n```json\n\"jest\": {\n    \"setupFiles\": [\"test-setup.js\"]\n}\n```\n\n\n### Development\nWant to run demos locally\n\n```bash\ngit clone https://github.com/akiran/react-slick\nnpm install\nnpm start\nopen http://localhost:8080\n```\n\n### Polyfills for old IE support\n`matchMedia` support from [media-match](https://github.com/weblinc/media-match)\n","react-tab-factory":"# ReactTabFactory\nSimple tab component with React.  \n\n- **Mount with a delay**  \nThe content panel is mounted, when the tab is clicked for the first time.\n\n- **Reuse mounted component**  \nIf you switch the tab,  \nthe content panel those made previously is displayed in the state at that time.  \n\n- **No styles**  \nThis doesn't have design theme.  \nYou can freely mark up css.\n\n- **Structure DOM freely**  \nThe tab and the panel does not need to be the same hierarchy.  \nYou will be able to structure the tab or panel freely.\n\n## Demo\nhttp://oreshinya.github.io/react-tab-factory/example/\n\n## Installation\n\n```\n$ npm install --save react-tab-factory\n```\n\n## Usage\n\n```coffee\n\nReactTabFactory = require \"react-tab-factory\"\nTabFactory = ReactTabFactory.TabFactory\n\ntabMixin =\n  _getStyle: ->\n    fontWeight = \"normal\"\n    fontWeight = \"bold\" if @props.selected\n    {fontWeight: fontWeight}\n\nFirstTab = React.createClass\n  mixins: [tabMixin]\n  render: ->\n    <span style={@_getStyle()}>Tab 1</span>\n\nSecondTab = React.createClass\n  mixins: [tabMixin]\n  render: ->\n    <span style={@_getStyle()}>Tab 2</span>\n\nFirstPanel = React.createClass\n  render: ->\n    <div className=\"panel-content\">Panel 1</div>\n\nSecondPanel = React.createClass\n  render: ->\n    <div className=\"panel-content\">Panel 2</div>\n\nApp = React.createClass\n  getInitialState: ->\n    factory = new TabFactory()\n    factory.tabClassNames =\n      normal: \"tab\"\n      active: \"tab active\"\n\n    factory.panelClassName = \"panel\"\n    {factory: factory}\n\n  render: ->\n    <div id=\"app\">\n      <div className=\"tab-container\">\n        {@state.factory.createTab FirstTab}\n        {@state.factory.createTab SecondTab}\n      </div>\n      <div className=\"panel-container\">\n        {@state.factory.createPanel FirstPanel}\n        {@state.factory.createPanel SecondPanel}\n      </div>\n    </div>\n```\n\n## Performant option\nIf a panel has too many elements, switching tab will be very slow.  \nIn case of it, you can set performant option to factory,  \nand create `PanelContainer` as panels parent.  \n\n```coffee\nReactTabFactory = require \"react-tab-factory\"\nTabFactory = ReactTabFactory.TabFactory\nPanelContainer = ReactTabFactory.PanelContainer\n\nApp = React.createClass\n  getInitialState: ->\n    factory = new TabFactory()\n    factory.tabClassNames =\n      normal: \"tab\"\n      active: \"tab active\"\n\n    factory.panelClassName = \"panel\"\n    factory.performant = true\n    {factory: factory}\n\n  render: ->\n    <div id=\"app\">\n      <div className=\"tab-container\">\n        {@state.factory.createTab FirstTab}\n        {@state.factory.createTab SecondTab}\n      </div>\n      <PanelContainer className=\"panel-container\">\n        {@state.factory.createPanel FirstPanel}\n        {@state.factory.createPanel SecondPanel}\n      </PanelContainer>\n    </div>\n```\n\n**But use performant option carefully.**  \nIf performant option is false, the factory switches tab with css `display` property.  \nIf performant option is true, to reduce rendering and painting,  \nthe factory switches tab with css `position: absolute` and `z-index`.  \nThese may lead to side effects.\n\n## API\n### Property\n```coffee\nReactTabFactory = require \"react-tab-factory\"\nTabFactory = ReactTabFactory.TabFactory\nPanelContainer = ReactTabFactory.PanelContainer\n```\n\n### Instantiate\n```coffee\nfactory = new TabFactory()\n```\n\n### Configuration\n- **factory.tabClassNames:**  \nConfigure tab class name.\n```coffee\nfactory.tabClassNames =\n  normal: \"tab\"\n  active: \"tab active\"\n```\n\n- **factory.panelClassName:**  \nConfigure panel class name.\n```coffee\nfactory.panelClassName = \"panel\"\n```\n\n- **factory.performant**  \nConfigure to switch tab faster.\n```coffee\nfactory.performant = true # default is false\n```\n\n### Create Element\n- **factory.createTab(handler, props, options):**  \nCreate tab. `handler` is ReactClass.  \nThe handler's props is passed `selected` and `opts` that has passed props.  \nIf `options.selected` is true, it will be default tab.  \nThe default selected tab is first tab.\n```coffee\nfactory.createTab FirstTab\n```\n\n- **factory.createPanel(handler, props, options):**  \nCreate content panel. `handler` is ReactClass.  \nThe handler's props is passed `selected` and `opts` that has passed props.  \nIf `options.preMount` is true, it will be rendered before selecting tab.\n```coffee\nfactory.createPanel FirstPanel\n```\n\n## Example\nGo to https://github.com/oreshinya/react-tab-factory/tree/master/example !\n\n## LICENSE\nMIT\n","react-touch-zoom-pan-canvas":"# react-touch-zoom-pan-canvas\n\nThis is a set of two React higher order components, for hooking mouse and touch events panning/zooming functionality into your application.\n\nThe project doesn't have dependencies to any other libraries than React (and TypeScript types for React).\n\nProject home page: [https://jussikinnula.github.io/react-touch-zoom-pan-canvas](https://jussikinnula.github.io/react-touch-zoom-pan-canvas)\n\nSee the project on GitHub: [https://github.com/jussikinnula/react-touch-zoom-pan-canvas](https://github.com/jussikinnula/react-touch-zoom-pan-canvas)\n\n## Installation\n\n```bash\n$ npm install --save react-touch-zoom-pan-canvas\n```\n\n## Usage\n\n### Example\n\nYou can check an example application, which sets canvas full screen and also updates the canvas size on resize, and other fancy things:\n\nLive version: [https://jussikinnula.github.io/react-touch-zoom-pan-canvas/example](https://jussikinnula.github.io/react-touch-zoom-pan-canvas/example)\n\nSource: [https://github.com/jussikinnula/react-touch-zoom-pan-canvas/tree/master/example/src](https://github.com/jussikinnula/react-touch-zoom-pan-canvas/tree/master/example/src)\n\n### Minimal example\n\nHere's a very minimal version, which writes the seconds after animation started to the canvas.\n\n```tsx\nimport * as React from 'react'\nimport { Touch, Canvas } from 'react-touch-zoom-pan-canvas'\n\nconst style = { width: '800px', border: '1px solid red' }\n\nexport default const App = () => (\n  <div style={style}>\n    <Touch>\n      <Canvas\n        width={800}\n        height={600}\n        onAnimationFrame={(ctx, time) => {\n          ctx.font = '30px Arial'\n          ctx.fillText(`time: ${Math.round(time)}`, 25, 50)\n        }}\n      />\n    </Touch>\n  </div>\n)\n```\n\n### Touch -component\n\nAll parameters are optional.\n\nParameters `wheelMax` and `touchSensitivity` are device and operating system specific. So you need to test with real devices. If you want, you could share good values with this project so we could have good defaults in future.\n\nIf you are hooking to an external Canvas, you want to set context based on `onTranslate` and `onScale` values (the coordinates are relative). The `onReset` is called on resize, when matrix is reset.\n\nPanning and pinching raw events are untouched (can be either `React.MouseEvent<HTMLDivElement>` or `React.TouchEvent<HTMLDivElement>`).\n\n```tsx\n<Touch\n  scaleFactor={1.1} // set the scale factor (default 1.1) for zooming\n  wheelMax={5} // maximum wheel zoom amount (default 5)\n  touchSensitivity={5} // touch sensitivity (default 5)\n  onPanStart={(event) => { ... }} // raw events, when panning starts\n  onPan={(event) => { ... }} // raw events, when panning is active (e.g. touch or mouse moves)\n  onPanEnd={(event) => { ... }} // raw events, when panning ends\n  onPinchStart={(event) => { ... }} // raw events, when pinch zoom starts\n  onPinch={(event) => { ... }} // raw events, when pinch zooming is active (e.g. pinch gesture between two touch points is happening)\n  onPinchEnd={(event) => { ... }} // raw events, when pinch zoom ends\n  onTranslate={(x: number, y: number) => { ... }) // raw coordinates, when matrix is translated\n  onScale={(x: number, y: number) => { ... }) // raw coordinates, when matrix is scaled\n  onReset={() => { ... }} // called when matrix is reset\n>\n  ...\n</Touch>\n```\n\n### Canvas -component\n\nThe `ctx` in `onAnimationFrame` and `getContext` callbacks is `CanvasRenderingContext2D`, and time is a number (starting where the animation started).\n\n```tsx\n<Canvas\n  width={800} // Set width for the canvas\n  height={600} // Set height for the canvas\n  onAnimationFrame={(ctx, time) => { ... }} // draw anything to Canvas 2D context here (uses requestAnimationFrame to trigger redraw)\n  getContext={(ctx) => { ... }} // get Canvas 2D context (this should be linked by Touch -component, to set scale and translate)\n/>\n```\n\n## Development\n\n### Utilities\n\nThe `utils` -library used internally by Touch and Canvas -components is used to do matrix and distance calculations. You can look the inner workings also from the source.\n\n### Remote Logging\n\nIn order to test with real touch -capable devices, you can use remote logging (e.g. get device console.log's into your console), with the following environment variables:\n\n```bash\n$ REMOTE_LOG=ws://x.x.x.x:12345 npm start\n```\n\nNote! Replace `x.x.x.x` with your computer's IP address, accessible from your touch device.\n\nStart remote log in separate shell:\n\n```bash\n$ npm run remote-log\n```\n\n","rebas":"Rebas\n===\n\n[![NPM version](https://img.shields.io/npm/v/rebas.svg?style=flat-square)](https://npmjs.org/package/rebas) [![Build Status](https://img.shields.io/travis/ecomfe/rebas.svg?style=flat-square)](https://travis-ci.org/ecomfe/rebas) [![License](https://img.shields.io/npm/l/rebas.svg?style=flat-square)](./LICENSE) [![EFE Mobile Team](https://img.shields.io/badge/EFE-Mobile_Team-blue.svg?style=flat-square)](http://efe.baidu.com)\n\nNode runtime for [Saber](https://github.com/ecomfe/saber)ï¼base on [Express](http://expressjs.com)\n\n[Saber](https://github.com/ecomfe/saber) ç node è¿è¡ç¯å¢ï¼è®©æ¨å¨äº«å SPA é«å§èãä½è¦åå¼åæ¹å¼çåæ¶æ¥æä¼ç§çé¦å±åç°éåº¦ä¸è¯å¥½ç SEO ã\n\n## How\n\nRebas ä½¿é¦å±æ¸²æç±æå¡å¨ç«¯å®æï¼æå¤§å°éä½äº SPA é¦å±çç½å±æ¶é´å¹¶è§£å³äº SEO é®é¢ãåå©äº node ï¼æå¡å¨ç«¯çæ¸²æé»è¾ä¸ç¨é¢å¤å¼åï¼åªéè¦å¯¹ç°æç Saber åºç¨è¿è¡å°å¹ä¿®æ¹å°±è½è®©å·²æçé»è¾åæ¶è¿è¡å¨å®¢æ·ç«¯ä¸æå¡å¨ç«¯ã\n\nSaber ææçåºç¡ç»ä»¶é½è¿è¡äºåæåçº§ï¼ç¡®ä¿è½åæ¶è¿è¡å¨å®¢æ·ç«¯ä¸æå¡å¨ç«¯ãå¯¹äºä¸å¡å¼ååªéèç¦ä¸å¡é»è¾ï¼ä¸ç¨ç¹å«å³æ³¨è¿è¡å¹³å°ï¼å©ä¸çä¸åå°±äº¤ç» Saber ä¸ Rebas å§ï½\n\n## Usage\n\n```js\n/**\n * @file app.js åºç¨å¯å¨èæ¬\n */\nvar app = require('rebas');\n\n// å è½½è·¯ç±éç½®\napp.load(require('./lib/config'));\n\n// å¯å¨æå¡\napp.start();\n```\n\n```sh\n$ node app.js\n```\n\næ´å¤è¯¦æè¯·åè [Getting start](doc/start.md) ï¼ä»é¶å¼å§å¿«éæå»ºåæåºç¨\n\n## API\n\n* [Methods](#methods)\n* [Config](#config)\n\n### Methods\n\n#### start(port, options)\n\nå¯å¨æå¡\n\n* **port** `{number=}` ç«¯å£å·ï¼é»è®¤ä¸º `8000`\n* **options** `{Object=}` éç½®é¡¹\n    * **template** `{string=}` å¬å±æ¨¡ç\n    * **templateConfig** `{Object=}` æ¨¡çå¼æéç½®ä¿¡æ¯ï¼`rebas` ä½¿ç¨å¼ºå¤ç¨ãçµæ´»ãé«æ§è½ç [etpl](http://ecomfe.github.io/etpl/) æ¨¡çå¼æï¼å·ä½éç½®è¯·åè [etpl éç½®é¡¹](https://github.com/ecomfe/etpl/blob/master/doc/config.md)\n    * **templateData** `{Object=}` å¨å±æ¨¡çæ°æ®\n    * **indexFile** `{string=}` ä¸»é¡µé¢æ¨¡çæä»¶è·¯å¾ï¼é»è®¤ä¸ºæ ¹ç®å½ä¸ç `index.html`\n    * **Presenter** `{Function=}` èªå®ä¹ Presenter åºç±»\n    * **View** `{Function=}` èªå®ä¹ View åºç±»\n    * **Model** `{Function=}` èªå®ä¹ Model åºç±»\n\n`rebas` ç± [saber-mm](https://github.com/ecomfe/saber-mm) æä¾ `MVP` çå®ç°ï¼`Presenter`ã`View`ã`Model` ç¸å³çéç½®ä¸ API è¯·åè [saber-mm çè¯´æææ¡£](https://github.com/ecomfe/saber-mm#classes)\n\n#### load(routes)\n\nå è½½è·¯ç±éç½®\n\n* **routes** `{Object|Array.<Object>}` è·¯ç±éç½®ä¿¡æ¯ï¼å¿é¡»åå«ä»¥ä¸ä¸¤ä¸ªå¿å¡«å­æ®µï¼\n    * **path** `{string|RegExp}` è·¯å¾ï¼å¿é¡»æ¯ä»¥ `/` å¼å¤´çææè·¯å¾å­ç¬¦ä¸²æèæ­£åè¡¨è¾¾å¼ï¼å­ç¬¦ä¸²å¯ä»¥åå«ä»¥`:`å¼å¤´çåæ°åè·¯å¾ï¼ä¾å¦ï¼`/detail/:id`\n    * **action** `{string|Object}` Presenter éç½®ä¿¡æ¯ï¼å¦ææ¯å­ç¬¦ä¸²åè¡¨ç¤ºå¯¹åºæä»¶çè·¯å¾ï¼ä¸ºå¥å«`action`èä¸æ¯`presenter`ï¼å¯... åå²åå ...ï¼\n\n#### get(name)\n\nè·åå­å¨å¨ `éç½®æä»¶å¤¹` ä¸ç `JSON` éç½®ä¿¡æ¯ï¼`éç½®æä»¶å¤¹` çé»è®¤è·¯å¾ä¸º `config`\n\n* **name** `{string}` éç½®æä»¶åç§°ï¼ä¸åå« `.json` åç¼å\n* _return_ `{*}` éç½®ä¿¡æ¯\n\nä¾å¦éè¦è·å `config/app.json` æä»¶ä¸­çéç½®ä¿¡æ¯å¯ä»¥éè¿å¦ä¸æ¹å¼è·å¾ï¼\n\n```js\nvar app = require('rebas');\n\n// è·å `config/app.json` ä¸­çéç½®ä¿¡æ¯\napp.get('app');\n```\n\nå¯ä»¥éè¿æ·»å åºç¨å¯å¨çåæ°æ¥ä¿®æ¹é»è®¤ç `éç½®æä»¶å¤¹` è·¯å¾ï¼ä¾å¦ï¼\n\n```sh\n$ node app.js config-dev\n```\n\næ­¤æ¶éè¿ `get` è·åçéç½®ä¿¡æ¯å°±æ¥æºäº `config-dev` æä»¶å¤¹ï¼å¯ä»¥éè¿æ­¤ç§æ¹å¼å¨å¤ç§ä¸åç¯å¢ãä¸åéç½®ä¸èªç±åæ¢\n\n#### before(middleware)\n\næ·»å å¨æ§è¡é¡µé¢é»è¾åæ§è¡çä¸­é´ä»¶\n\n* **middleware** `{Function}` ä¸­é´ä»¶ï¼`rebas` åºäº [express](http://expressjs.com/) æä¾ Web æå¡ï¼å¼å®¹ [express middleware](http://expressjs.com/guide/using-middleware.html)ï¼å·ä½è¯·åè [express API](http://expressjs.com/4x/api.html#app.use)\n\n#### after(middleware)\n\næ·»å å¨é¡µé¢é»è¾æ§è¡å®æåæ§è¡çä¸­é´ä»¶\n\n* **middleware** `{Function}` ä¸­é´ä»¶\n\n#### use(plugin)\n\nä½¿ç¨æä»¶\n\n* **plugin** `{Object}` æä»¶å¯¹è±¡ï¼æä»¶å¿é¡»åå« `rebas` æ¹æ³ç¨äºåå§åï¼å·ä½çæ¹æ³è¯´æå¦ä¸ï¼\n    * **rebas** `{function(app, ...*)}` æä»¶åå§åæ¹æ³ï¼ç¬¬ä¸ä¸ªåæ°ä¸º `rebas` å®ä¾ï¼å¶ä½åæ°ä¸ºè°ç¨ `use` æ¹æ³æ¶ä¼ å¥çå©ä½åæ°\n\n#### setSyncData(name, value)\n\nè®¾ç½®éè¦ååç«¯åæ­¥çæ°æ®ï¼è®¾ç½®ååç«¯çè¿è¡æ¡æ¶ [saber-firework](https://github.com/ecomfe/saber-firework) å¯ä»¥éè¿å¶ API è·åå°å¯¹åºçæ°æ®\n\n* **name** `{string}` æ°æ®åç§°\n* **value** `{*}` æ°æ®å¼ï¼å»ºè®®ä¸º `number`ã`string` ç±»åï¼æèå¶å®ä»»ä½å¯ä»¥è¢« `JSON.stringify` æ¹æ³åºååçæ°æ®ç±»å\n\n### Config\n\nä»¥ä¸ææçéç½®ä¿¡æ¯é½æ¯ä»¥ `JSON` æä»¶çå½¢å¼å­å¨å¨ `éç½®æä»¶å¤¹` ä¸ï¼`éç½®æä»¶å¤¹` çé»è®¤è·¯å¾ä¸º `config`\n\n#### log\n\næ¥å¿éç½®æä»¶ `log.json` ï¼`rebas` ä½¿ç¨ [log4js-node](https://github.com/nomiddlename/log4js-node) æä¾æ¥å¿æå¡ï¼ç¸å³éç½®ä¿¡æ¯æ´è¯¦ç»çè¯´æè¯·åè [log4js-node çéç½®è¯´æ](https://github.com/nomiddlename/log4js-node/wiki/Appenders)ï¼é»è®¤çéç½®ä¿¡æ¯å¦ä¸ï¼\n\n```js\n{\n    // æ¯å¦å°æ¥å¿è¾åºå°æ åè¾åº(stdout)\n    console: false,\n    // æ¥å¿ç­çº§\n    level: 'INFO',\n    // æ¥å¿ç±»åï¼é»è®¤ä¸ºææ¶é´åå²çæ¥å¿æä»¶\n    type: 'dateFile',\n    // æ¥å¿é»è®¤å­å¨å¨ `log` ç®å½ä¸ï¼åä¸º `rebas.log`\n    filename: 'log/rebas.log',\n    // æ¥å¿ä»¥å°æ¶çº§å«åå\n    patter: '-MM-dd-hh',\n    alwaysIncludePattern: false,\n    // æ¥å¿è¾åºæ ¼å¼\n    layout: {\n        type: 'pattern',\n        pattern: '[%d] [%x{pid}] [%p] - %m',\n        tokens: {\n            pid: process.pid\n        }\n    }\n}\n```\n","regexp-clone":"#regexp-clone\n==============\n\nClones RegExps with flag and `lastIndex` preservation.\n\n```js\nconst regexpClone = require('regexp-clone');\n\nconst a = /somethin/misguy;\nconsole.log(a.global); // true\nconsole.log(a.ignoreCase); // true\nconsole.log(a.multiline); // true\nconsole.log(a.dotAll); // true\nconsole.log(a.unicode); // true\nconsole.log(a.sticky); // true\n\nconst b = regexpClone(a);\nconsole.log(b.global); // true\nconsole.log(b.ignoreCase); // true\nconsole.log(b.multiline); // true\nconsole.log(b.dotAll); // true\nconsole.log(b.unicode); // true\nconsole.log(b.sticky); // true\n\nconst c = /hi/g;\nc.test('this string hi there');\nassert.strictEqual(c.lastIndex, 3);\n\nconst d = regexpClone(c);\nassert.strictEqual(d.lastIndex, 3);\nd.test('this string hi there');\nassert.strictEqual(d.lastIndex, 14);\nassert.strictEqual(c.lastIndex, 3);\n```\n\n```\nnpm install regexp-clone\n```\n\n## License\n\n[MIT](https://github.com/aheckmann/regexp-clone/blob/master/LICENSE)\n","reiconify-cli":"# reiconify\n\nConvert SVG icons to React components.\n\n## Features\n\n- Custom component templates, includes base class.\n- Export both ES modules and CommonJS modules.\n- Provide `center` prop for aligning icon with textï¼see [how it works](http://ambar.li/reiconify/md.icons/#/Align).\n- Provide dev tool for generating static icon site.\n- Generate uniqute IDs for svg elements if needed.\n\n## Install\n\n```\nnpm install reiconify-cli --save-dev\n```\n\n## CLI Options\n\n```\nreiconify [options] [files]\n\nOptions:\n  --version  Show version number                                       [boolean]\n  --src      Build JSX source files                   [boolean] [default: false]\n  --src-dir  JSX output directory                      [string] [default: \"src\"]\n  --es       Build ES module files                    [boolean] [default: false]\n  --es-dir   ES output directory                        [string] [default: \"es\"]\n  --cjs      Build CommonJS files                     [boolean] [default: false]\n  --cjs-dir  CommonJS output directory                 [string] [default: \"cjs\"]\n  --serve    Serve source icons                       [boolean] [default: false]\n  --static   Build static site                        [boolean] [default: false]\n  -h         Show help                                                 [boolean]\n```\n\n## Configuration File\n\nAdd `reiconify.config.js`(optional) to your project:\n\n```js\nmodule.exports = {\n  template: Function,\n  baseTemplate: Function,\n  filenameTemplate: Function,\n  defaultProps: {},\n  baseClassName: 'Icon',\n  baseDefaultProps: {\n    viewBox: '0 0 24 24',\n  },\n  svgoPlugins: [\n    {\n      removeAttrs: {attrs: ['fill', 'svg:(viewBox)']},\n    },\n  ],\n}\n```\n\n## CLI Usage\n\nAdd npm scripts:\n\n```json\n{\n  \"name\": \"my-icons\",\n  \"main\": \"cjs/index.js\",\n  \"module\": \"es/index.js\",\n  \"files\": [\"src\", \"es\", \"cjs\"],\n  \"scripts\": {\n    \"start\": \"reiconify --serve\",\n    \"build\": \"reiconify --src --es --cjs icons/*.svg\"\n  }\n}\n```\n\nStructure SVG files:\n\n```\nicons\nâââ check.svg\nâââ thumb-up.svg\nâââ ...\n```\n\nBuild icons:\n\n```\nnpm run build\n```\n\nImport icons:\n\n```js\nimport * as Icons from 'my-icons'\n\n<Icons.Check />\n<Icons.ThumbUp size={20} fill={'#rgb'} />\n```\n\n## API Usage\n\n```js\nimport {transform} from 'reiconify'\n\nconst code = transform(svg)\n```\n","replace-constructor":"# replace-constructor\r\n\r\n**Replace/wrap a class constructor, while keeping the prototype, name and properties of the original class. Like extending a class, but suitable for use in decorators and such. Babel compatible. Adapted from [autocreate](https://github.com/pjeby/autocreate) - all credits to [@pjeby](https://github.com/pjeby).**\r\n\r\n[![npm status](http://img.shields.io/npm/v/replace-constructor.svg?style=flat-square)](https://www.npmjs.org/package/replace-constructor) [![Dependency status](https://img.shields.io/david/vweevers/replace-constructor.svg?style=flat-square)](https://david-dm.org/vweevers/replace-constructor)\r\n\r\n## example\r\n\r\n`npm i replace-constructor`\r\n\r\n```js\r\nconst replace = require('replace-constructor')\r\n\r\nclass Original {\r\n  constructor(x, y) {\r\n    // ..\r\n  }\r\n}\r\n\r\nconst Wrapped = replace(Original, function(x, y){\r\n  Original.call(this, x, y)\r\n})\r\n```\r\n\r\n## install\r\n\r\nWith [npm](https://npmjs.org) do:\r\n\r\n```\r\nnpm install replace-constructor\r\n```\r\n\r\n## license\r\n\r\n[MIT](http://opensource.org/licenses/MIT) (permission pending) Â© Vincent Weevers,\r\n[ISC](http://opensource.org/licenses/ISC) Â© PJ Eby\r\n","replace-in":"[![NPM](https://nodei.co/npm/replace-in.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/replace-in/)\r\n\r\n[![Travis](https://img.shields.io/travis/rust-lang/rust.svg)](https://travis-ci.org/Jimmy02020/replace-in)\r\n[![Codecov](https://img.shields.io/codecov/c/github/codecov/example-python.svg)](https://codecov.io/gh/Jimmy02020/replace-in)\r\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg)](https://github.com/Jimmy02020/replace-in/blob/master/LICENSE)\r\n\r\nOverview\r\n--------\r\n``replace-in`` is file text-replacement for [node](https://nodejs.org/en/).\r\n\r\nHow it works?\r\n--------\r\n\r\n``replace`` Creates read [stream](https://nodejs.org/api/stream.html) to read from the target file in chunks, do the replacement in new file holding the updated chunk using write stream.\r\nReturn array of objects contains the final results in callback function.\r\n\r\nOriginal file won't be modified instead ``replace`` will create new file which have new data and delete the old one.\r\n\r\nGetting Started\r\n---------------\r\n\r\nclone the repo:\r\n```sh\r\ngit clone git@github.com:jimmy02020/replace-in.git\r\ncd replace-in\r\n```\r\n\r\nUsing npm:\r\n```sh\r\n$ npm install replace-in\r\n```\r\n\r\nSyntax\r\n-------\r\n\r\n### replace(path, objects[], callback)\r\n\r\n``path`` String.\r\n\r\n``objects[]`` array of objects. Each object must have two properties ``regex`` for RegExp/String to matching and ``replace`` the string that will replaced.\r\n\r\nThe callback gets two arguments ``(err, report)``.\r\n\r\nUsing replace\r\n----------\r\n\r\n```javascript\r\nconst replace = require('replace-in')\r\n\r\n// let's create some phrases to replace it in our file.\r\nconst phrase1 = {\r\n  // regex\r\n  regex:/old/ig,\r\n  // replace\r\n  replace:'new'\r\n}\r\n\r\n// and we have to replace more.\r\nconst phrase1 = {\r\n  // regex\r\n  regex:'second',\r\n  // replace\r\n  replace:'third'\r\n}\r\n\r\nreplace('/path1/path2/fileName', [phrase1, phrase1], (err, report) => {\r\n  //\r\n  [\r\n    {\r\n      isChanged: true,\r\n      regex:/old/ig,\r\n      replace:'new'\r\n    },\r\n    {\r\n      isChanged: false, // not found so it wasn't changed\r\n      regex:'second',\r\n      replace:'third'\r\n    },\r\n   ]\r\n  //\r\n});\r\n```\r\nOr you can check specific phrase result.\r\n\r\n```javascript\r\nreplace('/path1/path2/fileName', [ph0, ph1, p2, ph3], (err, report) => {\r\n  if(report[2].isChanged){\r\n    console.log('p2 was found and changed');\r\n  } else {\r\n    console.log('not found');\r\n  }\r\n});\r\n```\r\n\r\n\r\nTests\r\n-----\r\n\r\n```sh\r\n$ npm test\r\n```\r\n\r\nDISCLAIMER :disappointed:\r\n------------------------\r\nThis package was in version 0.0.1 under `fmod` - shortcut for file modifier name and has changed to `replace` in next version.\r\nIt turns out that FMOD is a registered trademark :open_mouth: and I don't want troubles :relaxed: :sweat_smile:\r\n\r\nLicense\r\n-------\r\n\r\nThis project is licensed under the [MIT License](https://github.com/Jimmy02020/replace-in/blob/master/LICENSE)\r\n","resolve-bin":"# resolve-bin [![build status](https://secure.travis-ci.org/thlorenz/resolve-bin.png)](http://travis-ci.org/thlorenz/resolve-bin)\n\nResolves the full path to the bin file of a given package by inspecting the `\"bin\"` field in its package.json.\n\n```js\nvar resolveBin = require('resolve-bin');\n\n// package.json: \"bin\": \"bin/tap.js\"\nresolveBin('tap', function (err, bin) {\n  if (err) return console.error(err);\n  console.log(bin);  \n});\n\n// => [..]/resolve-bin/node_modules/tap/bin/tap.js\n```\n\n## Installation\n\n    npm install resolve-bin\n\n## API\n\n\n<!-- START docme generated API please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN docme TO UPDATE -->\n\n<div>\n<div class=\"jsdoc-githubify\">\n<section>\n<article>\n<div class=\"container-overview\">\n<dl class=\"details\">\n</dl>\n</div>\n<dl>\n<dt>\n<h4 class=\"name\" id=\"resolveBin\"><span class=\"type-signature\"></span>resolveBin<span class=\"signature\">(name, <span class=\"optional\">opts</span>, cb)</span><span class=\"type-signature\"></span></h4>\n</dt>\n<dd>\n<div class=\"description\">\n<p>Resolves the full path to the bin file of a given package by inspecting the &quot;bin&quot; field in its package.json.</p>\n</div>\n<h5>Parameters:</h5>\n<table class=\"params\">\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Argument</th>\n<th class=\"last\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"name\"><code>name</code></td>\n<td class=\"type\">\n<span class=\"param-type\">string</span>\n</td>\n<td class=\"attributes\">\n</td>\n<td class=\"description last\"><p>module name, i.e. 'tap'</p></td>\n</tr>\n<tr>\n<td class=\"name\"><code>opts</code></td>\n<td class=\"type\">\n<span class=\"param-type\">Object</span>\n</td>\n<td class=\"attributes\">\n&lt;optional><br>\n</td>\n<td class=\"description last\"><p>options</p>\n<h6>Properties</h6>\n<table class=\"params\">\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th class=\"last\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"name\"><code>executable</code></td>\n<td class=\"type\">\n<span class=\"param-type\">string</span>\n</td>\n<td class=\"description last\"><p>(default: @name) executable name (e.g. 'buster-test')</p></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr>\n<td class=\"name\"><code>cb</code></td>\n<td class=\"type\">\n<span class=\"param-type\">function</span>\n</td>\n<td class=\"attributes\">\n</td>\n<td class=\"description last\"><p>called back with the full path to the bin file of the module or an error if it couldn't be resolved</p></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"details\">\n<dt class=\"tag-source\">Source:</dt>\n<dd class=\"tag-source\"><ul class=\"dummy\">\n<li>\n<a href=\"https://github.com/thlorenz/resolve-bin/blob/master/index.js\">index.js</a>\n<span>, </span>\n<a href=\"https://github.com/thlorenz/resolve-bin/blob/master/index.js#L6\">lineno 6</a>\n</li>\n</ul></dd>\n</dl>\n</dd>\n\n<dt>\n<h4 class=\"name\" id=\"resolveBin::sync\"><span class=\"type-signature\"></span>resolveBin::sync<span class=\"signature\">(name, <span class=\"optional\">opts</span>)</span><span class=\"type-signature\"> &rarr; {string}</span></h4>\n</dt>\n<dd>\n<div class=\"description\">\n<p>Synchronous version of resolveBin</p>\n</div>\n<h5>Parameters:</h5>\n<table class=\"params\">\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Argument</th>\n<th class=\"last\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"name\"><code>name</code></td>\n<td class=\"type\">\n<span class=\"param-type\">string</span>\n</td>\n<td class=\"attributes\">\n</td>\n<td class=\"description last\"><p>module name, i.e. 'tap'</p></td>\n</tr>\n<tr>\n<td class=\"name\"><code>opts</code></td>\n<td class=\"type\">\n<span class=\"param-type\">Object</span>\n</td>\n<td class=\"attributes\">\n&lt;optional><br>\n</td>\n<td class=\"description last\"><p>options</p>\n<h6>Properties</h6>\n<table class=\"params\">\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th class=\"last\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"name\"><code>executable</code></td>\n<td class=\"type\">\n<span class=\"param-type\">string</span>\n</td>\n<td class=\"description last\"><p>(default: @name) executable name (e.g. 'buster-test')</p></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"details\">\n<dt class=\"tag-source\">Source:</dt>\n<dd class=\"tag-source\"><ul class=\"dummy\">\n<li>\n<a href=\"https://github.com/thlorenz/resolve-bin/blob/master/index.js\">index.js</a>\n<span>, </span>\n<a href=\"https://github.com/thlorenz/resolve-bin/blob/master/index.js#L55\">lineno 55</a>\n</li>\n</ul></dd>\n</dl>\n</dd>\n\n</dl>\n</article>\n</section>\n</div>\n\n*generated with [docme](https://github.com/thlorenz/docme)*\n</div>\n<!-- END docme generated API please keep comment here to allow auto update -->\n\n## License\n\nMIT\n","resolve-subscribe-mqtt":"# **resolve-subscribe-mqtt**\n[![npm version](https://badge.fury.io/js/resolve-subscribe-mqtt.svg)](https://badge.fury.io/js/resolve-subscribe-mqtt)\n\nThis package is a `resolve-redux` adapter used to subscribe to events via an [MQTT](https://github.com/mqttjs/MQTT.js) protocol.\n\n\n#### Client Side\n```js\nimport createClientAdapter from 'resolve-subscribe-mqtt';\n\n(async () => {\n  const adapter = createClientAdapter({ origin, rootPath, url, appId, onEvent })\n  \n  await adapter.init()\n})() \n```\n\n#### Server Side\n```js\nimport createServerAdapter from 'resolve-subscribe-mqtt';\n\n(async () => {\n  const adapter = createServerAdapter({ server, getRootBasedUrl, pubsubManager, appId })\n  \n  await adapter.init()\n})() \n```\n\n![Analytics](https://ga-beacon.appspot.com/UA-118635726-1/packages-resolve-subscribe-mqtt-readme?pixel)\n","rocketz-cdn-wantu":"# RocketZ\n\nç¨äº [Node.js](https://nodejs.org/) çå°æä»¶ååå°å¤ä¸ª CDN çä¸ä¼ å·¥å·ã\n\nè¿æ¯ä¸ä¸ªå­æ¾å¤ä¸ª npm åçã[åä»åº](https://github.com/babel/babel/blob/master/doc/design/monorepo.md)ãï¼æºç é½å­æ¾å¨ [`packages`](packages) ç®å½ä¸ã\n\n## å®è£\n\nåæ¥çé API åå½ä»¤è¡å·¥å·äºä¸ä½ç [rocketz](https://www.npmjs.com/package/rocketz) å·²ç»åºå¼ä¸åç»´æ¤ï¼è¯·æ ¹æ®éè¦è¿è¡ä¸è½½å®è£ã\n\n### æ ¸å¿ API\n\næä¾äºé¢è§ãä¸ä¼ æä»¶ç­ APIï¼å¯ä¾å¶ä»åºæå·¥å·è¿è¡äºæ¬¡å°è£ã\n\n```\nnpm install rocketz-core --save\n```\n\n### å½ä»¤è¡å·¥å·\n\néè¿å½ä»¤è¡ä¸ä¼ æå®ç®å½ä¸çæä»¶å°ç®æ  CDNã\n\n```\nnpm install -g rocketz-cli\n```","rs.js":"# rs\nRule Schema based object transform class\n","rtpengine-client":"# rtpengine-client [![Build Status](https://travis-ci.org/davehorton/rtpengine-client.svg?branch=master)](http://travis-ci.org/davehorton/rtpengine-client) [![NPM version](https://badge.fury.io/js/rtpengine-client.svg)](http://badge.fury.io/js/rtpengine-client) [![Coverage Status](https://coveralls.io/repos/github/davehorton/rtpengine-client/badge.svg?branch=master)](https://coveralls.io/github/davehorton/rtpengine-client?branch=master)\n\nA Promises-based nodejs client for accessing rtpengine via ng protocol\n\n## Usage\n\n```js\nconst Client = require('rtpengine-client').Client ;\nconst client = new Client() ;\n\nclient.ping(22222, '39.194.250.246')\n  .then((res) => {\n    console.log(`received ${JSON.stringify(res)}`); // {result: 'pong'}\n  })\n  .catch((err) => {\n    console.log(`Error: ${err}`);\n  }\n}\n```  \n\n## Constructing a client \n```js\nclient = new Client() ;  // listen on any port and default address\n// or..\nclient = new Client(9055);    // listen on a specific port\n// or..\nclient = new Client(9055, '192.168.1.10'); // listen on a specific port and address\n// or..\nclient = new Client({port: 9055, host: '192.168.1.10'}); // listen on a specific port and address\n// or..\nclient = new Client({timeout: 1500}); // wait a max of 1500 ms for each command reply, throw error on timeout\n// or..\nclient = new Client({rejectOnFailure: true}); \n// reject promise on any command if response from rtpengine has error \n// default behavior is to resolve with any response from rtpengine, even errors\n```\n\n## Making requests\nThe ng request verbs (`ping`, `offer`, `answer`, `delete`, `query`, `start recording`, `stop recording`, `block DTMF`, `unblock DTMF`, `block media`, `unblock media`) are available as methods on the `client` object.  The sytax for each is the same:\n+ the destination of the request comes first, either as `port, host` or `{port, host}`\n+ following that, if any options are required for the request, those come next in an object.\n\nThe function call returns a promise that is resolved when the response is received.\n\nFunction names are as follows:\n\n| ng verb         | function name |\n|----------------|----------------|\n|ping            | ping           |\n|offer           | offer          |\n|answer          | answer         |\n|delete          | delete         |\n|query           | query          |\n|start recording | startRecording |\n|stop recording  | stopRecording  |\n|block DTMF      | blockDTMF      |\n|unblock DTMF    | unblockDTMF    |\n|block media     | blockMedia     |\n|unblock media   | unblockMedia   |\n\nFor instance\n```\nclient.offer(22222, '35.195.250.243', {\n  'sdp': ..\n  'call-id': ..\n  'from-tag': ..\n})\n  .then((res) => {\n    console.log(res); // { \"result\": \"ok\", \"sdp\": \"v=0\\r\\no=...\" }\n  })\n  .catch((err) => {\n\n  });\n\n// or..\nclient.offer({port: 22222, host: '35.195.250.243}, {\n  'sdp': ..\n  'call-id': ..\n  'from-tag': ..\n}) // ...etc\n```","rx.observable.combine-template":"# Rx.Observable.combineTemplate\n\nGenerate values  based on the Observable and object template. Similar to [`Bacon.combineTemplate`](https://github.com/baconjs/bacon.js#observable-combine).\n\n## Usage\n\n### Install\n\n```bash\nnpm install --save rx.observable.combine-template\n```\n\n### Basics\n\n```javascript\nimport combineTemplate from 'rx.observable.combine-template';\nimport * as Rx from 'rx';\n\nlet subject1 = new Rx.Subject();\nlet subject2 = new Rx.Subject();\n\ncombineTemplate({\n  foo : 'bar',\n  baz : {\n    foo : ['bar', subject1 'qux']\n  },\n  qux : {\n    foo : {\n     foo : 'bar'\n     baz : subject2\n    }\n  }\n}).subscribe((value)=> {\n  console.log(value);\n  /* === output ===\n  {\n    foo : 'bar',\n    baz : {\n      foo : ['bar', 'BAZ' 'qux']\n    },\n    qux : {\n      foo : {\n       foo : 'bar'\n       baz : 'QUX'\n      }\n    }\n  }\n  */\n});\n\nsubject1.onNext('BAZ');\nsubject2.onNext('QUX');\n```\n\n### with React\n\nState is updated automatically receives a value from the observables.\n\n```javascript\ncomponentWillMount() {\n  combineTemplate({\n    items : store.itemsObservable$,\n    count : store.itemsObservable$.map((items) => items.length)\n  }).subscribe(this.setState.bind(this));\n}\n```\n\n## Tests\n\n```\nnpm test\n```\n\n## Contributing\n\n1. Fork it!\n2. Create your feature branch: `git checkout -b my-new-feature`\n3. Commit your changes: `git commit -am 'Add some feature'`\n4. Push to the branch: `git push origin my-new-feature`\n5. Submit a pull request :D\n\n## License\n\nMIT\n","rx-lite":"# RxJS Lite Module #\n\nThe Reactive Extensions for JavaScript Lite version is a lightweight version of the Reactive Extensions for JavaScript which covers most of the day to day operators you might use all in a single library.  Functionality such as bridging to events, promises, callbacks, Node.js-style callbacks, time-based operations and more are built right in.  This comes with `rx.lite.js` which is for use in modern development environments such as > IE9 and server-side environments such as Node.js.\n\n## Getting Started\n\nThere are a number of ways to get started with RxJS.\n\n### Installing with [NPM](https://npmjs.org/)\n\n```bash`\n$ npm install rx-lite\n$ npm install -g rx-lite\n```\n\n### Using with Node.js and Ringo.js\n\n```js\nvar Rx = require('rx-lite');\n```\n\n### In a Browser:\n\n```html\n<!-- Just the core RxJS -->\n<script src=\"path/to/rx.lite.js\"></script>\n```\n\n## Included Observable Operators ##\n\n### `Observable Methods`\n- [`catch | catchException`](../../doc/api/core/operators/catch.md)\n- [`concat`](../../doc/api/core/operators/concat.md)\n- [`create | createWithDisposable`](../../doc/api/core/operators/create.md)\n- [`defer`](../../doc/api/core/operators/defer.md)\n- [`empty`](../../doc/api/core/operators/empty.md)\n- [`from`](../../doc/api/core/operators/from.md)\n- [`fromArray`](../../doc/api/core/operators/fromarray.md)\n- [`fromCallback`](../../doc/api/core/operators/fromcallback.md)\n- [`fromEvent`](../../doc/api/core/operators/fromevent.md)\n- [`fromEventPattern`](../../doc/api/core/operators/fromeventpattern.md)\n- [`fromNodeCallback`](../../doc/api/core/operators/fromnodecallback.md)\n- [`fromPromise`](../../doc/api/core/operators/frompromise.md)\n- [`interval`](../../doc/api/core/operators/interval.md)\n- [`just`](../../doc/api/core/operators/return.md)\n- [`merge`](../../doc/api/core/operators/merge.md)\n- [`mergeDelayError`](../../doc/api/core/operators/mergedelayerror.md)\n- [`never`](../../doc/api/core/operators/never.md)\n- [`of`](../../doc/api/core/operators/of.md)\n- [`ofWithScheduler`](../../doc/api/core/operators/ofwithscheduler.md)\n- [`range`](../../doc/api/core/operators/range.md)\n- [`repeat`](../../doc/api/core/operators/repeat.md)\n- [`return | returnValue`](../../doc/api/core/operators/return.md)\n- [`throw | throwError | throwException`](../../doc/api/core/operators/throw.md)\n- [`timer`](../../doc/api/core/operators/timer.md)\n- [`zip`](../../doc/api/core/operators/zip.md)\n- [`zipArray`](../../doc/api/core/operators/ziparray.md)\n\n### `Observable Instance Methods`\n- [`asObservable`](../../doc/api/core/operators/asobservable.md)\n- [`catch | catchException`](../../doc/api/core/operators/catchproto.md)\n- [`combineLatest`](../../doc/api/core/operators/combinelatest.md)\n- [`concat`](../../doc/api/core/operators/concatproto.md)\n- [`concatMap`](../../doc/api/core/operators/concatmap.md)\n- [`connect`](../../doc/api/core/operators/connect.md)\n- [`debounce`](../../doc/api/core/operators/debounce.md)  \n- [`defaultIfEmpty`](../../doc/api/core/operators/defaultifempty.md)\n- [`delay`](../../doc/api/core/operators/delay.md)\n- [`dematerialize`](../../doc/api/core/operators/dematerialize.md)\n- [`distinctUntilChanged`](../../doc/api/core/operators/distinctuntilchanged.md)\n- [`do | doAction`](../../doc/api/core/operators/do.md)\n- [`doOnNext`](../../doc/api/core/operators/doonnext.md)\n- [`doOnError`](../../doc/api/core/operators/doonerror.md)\n- [`doOnCompleted`](../../doc/api/core/operators/dooncompleted.md)\n- [`filter`](../../doc/api/core/operators/where.md)\n- [`finally | finallyAction`](../../doc/api/core/operators/finally.md)\n- [`flatMap`](../../doc/api/core/operators/selectmany.md)\n- [`flatMapLatest`](../../doc/api/core/operators/flatmaplatest.md)\n- [`ignoreElements`](../../doc/api/core/operators/ignoreelements.md)\n- [`map`](../../doc/api/core/operators/select.md)\n- [`merge`](../../doc/api/core/operators/mergeproto.md)\n- [`mergeObservable | mergeAll`](../../doc/api/core/operators/mergeall.md)\n- [`multicast`](../../doc/api/core/operators/multicast.md)\n- [`publish`](../../doc/api/core/operators/publish.md)\n- [`publishLast`](../../doc/api/core/operators/publishlast.md)\n- [`publishValue`](../../doc/api/core/operators/publishvalue.md)\n- [`refCount`](../../doc/api/core/operators/refcount.md)\n- [`repeat`](../../doc/api/core/operators/repeat.md)\n- [`replay`](../../doc/api/core/operators/replay.md)\n- [`retry`](../../doc/api/core/operators/retry.md)\n- [`retryWhen`](../../doc/api/core/operators/retrywhen.md)\n- [`sample`](../../doc/api/core/operators/sample.md)\n- [`scan`](../../doc/api/core/operators/scan.md)\n- [`select`](../../doc/api/core/operators/select.md)\n- [`selectConcat`](../../doc/api/core/operators/concatmap.md)\n- [`selectMany`](../../doc/api/core/operators/selectmany.md)\n- [`selectSwitch`](../../doc/api/core/operators/flatmaplatest.md)\n- [`singleInstance`](../../doc/api/core/operators/singleinstance.md)\n- [`skip`](../../doc/api/core/operators/skip.md)\n- [`skipLast`](../../doc/api/core/operators/skiplast.md)\n- [`skipUntil`](../../doc/api/core/operators/skipuntil.md)\n- [`skipWhile`](../../doc/api/core/operators/skipwhile.md)\n- [`startWith`](../../doc/api/core/operators/startwith.md)\n- [`subscribe | forEach`](../../doc/api/core/operators/subscribe.md)\n- [`subscribeOnNext`](../../doc/api/core/operators/subscribeonnext.md)\n- [`subscribeOnError`](../../doc/api/core/operators/subscribeonerror.md)\n- [`subscribeOnCompleted`](../../doc/api/core/operators/subscribeoncompleted.md)\n- [`switch | switchLatest`](../../doc/api/core/operators/switch.md)\n- [`take`](../../doc/api/core/operators/take.md)\n- [`takeLast`](../../doc/api/core/operators/takelast.md)\n- [`takeUntil`](../../doc/api/core/operators/takeuntil.md)\n- [`takeWhile`](../../doc/api/core/operators/takewhile.md)\n- [`tap`](../../doc/api/core/operators/do.md)\n- [`tapOnNext`](../../doc/api/core/operators/doonnext.md)\n- [`tapOnError`](../../doc/api/core/operators/doonerror.md)\n- [`tapOnCompleted`](../../doc/api/core/operators/dooncompleted.md)\n- [`throttle`](../../doc/api/core/operators/throttle.md)\n- [`timeout`](../../doc/api/core/operators/timeout.md)\n- [`timestamp`](../../doc/api/core/operators/timestamp.md)\n- [`toArray`](../../doc/api/core/operators/toarray.md)\n- [`transduce`](../../doc/api/core/operators/transduce.md)\n- [`where`](../../doc/api/core/operators/where.md)\n- [`withLatestFrom`](../../doc/api/core/operators/withlatestfrom.md)\n- [`zip`](../../doc/api/core/operators/zipproto.md)\n\n## Included Classes ##\n\n### Core Objects\n- [`Rx.Observer`](../../doc/api/core/observer.md)\n- [`Rx.Notification`](../../doc/api/core/notification.md)\n\n### Subjects\n\n- [`Rx.AsyncSubject`](../../doc/api/subjects/asyncsubject.md)\n- [`Rx.BehaviorSubject`](../../doc/api/subjects/behaviorsubject.md)\n- [`Rx.ReplaySubject`](../../doc/api/subjects/replaysubject.md)\n- [`Rx.Subject`](../../doc/api/subjects/subject.md)\n\n### Schedulers\n\n- [`Rx.Scheduler`](../../doc/api/schedulers/scheduler.md)\n\n### Disposables\n\n- [`Rx.CompositeDisposable`](../../doc/api/disposables/compositedisposable.md)\n- [`Rx.Disposable`](../../doc/api/disposables/disposable.md)\n- [`Rx.RefCountDisposable`](../../doc/api/disposables/refcountdisposable.md)\n- [`Rx.SerialDisposable`](../../doc/api/disposables/serialdisposable.md)\n- [`Rx.SingleAssignmentDisposable`](../../doc/api/disposables/singleassignmentdisposable.md)\n\n## Contributing ##\n\nThere are lots of ways to contribute to the project, and we appreciate our [contributors](https://github.com/Reactive-Extensions/RxJS/wiki/Contributors).  If you wish to contribute, check out our [style guide]((https://github.com/Reactive-Extensions/RxJS/tree/master/doc/contributing)).\n\nYou can contribute by reviewing and sending feedback on code checkins, suggesting and trying out new features as they are implemented, submit bugs and help us verify fixes as they are checked in, as well as submit code fixes or code contributions of your own. Note that all code submissions will be rigorously reviewed and tested by the Rx Team, and only those that meet an extremely high bar for both quality and design/roadmap appropriateness will be merged into the source.\n\n## License ##\n\nCopyright (c) Microsoft Open Technologies, Inc.  All rights reserved.\nMicrosoft Open Technologies would like to thank its contributors, a list\nof whom are at https://github.com/Reactive-Extensions/RxJS/wiki/Contributors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you\nmay not use this file except in compliance with the License. You may\nobtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing permissions\nand limitations under the License.\n","savey-wavey":"# savey-wavey\n\nAn atom plugin for triggering shell scripts on save events. Forked from https://github.com/mvila/on-save\n\n\n## Usage\nCreate an `.on-save.json` file at the root of you project.\n\nFor example, if you want to babelify every `.js` file from `src` to `lib`:\n\n```javascript\n{\n  \"commands\": [\n    {\n      \"files\": \"src/**/*.js\",\n      \"baseDir\": \"src\",\n      \"command\": \"./node_modules/.bin/babel ${filePath} --out-file libs/${fileDirRelativeToBase}/${fileBase}.js\"\n    }\n  ],\n  \"config\": <optional configuration options>\n}\n```\n\n### Interpolated Variables\nExample: `/Users/me/projects/domination/src/stuff/x.js`\n* **filePath**: The path of the file relative to your project. (e.g. `src/stuff/x.js`)\n* **rootPath**: The root path of the project (e.g. `/Users/me/projects/domination`)\n* **fileExt**: The extension of the changed file: (e.g. `.js`)\n* **fileBase**: The filename base of the changed file: (e.g. `x`)\n* **fileDir**: The directory of the file relative to the project root (e.g. `src/stuff`)\n* **fileDirRelativeToBase**: The directory of the file relative to either the baseDir option or the rootPath if no baseDir option is present (e.g. `stuff`)\n\n### Configuration Options\n```javascript\n{\n  commands: [<your command definitions>],\n  config: {\n    showSuccess: true;\n    autohideSuccess: true;\n    autohideSuccessTimeout: 1200;\n  }\n}\n```\n#### Options\n* **showSuccess** (default = true) - If true, shows script success in a nested view\n* **autohideSuccess** (default = true) - If true, autohides successful scripts after a timeout period.\n* **autohideSuccessTimeout** (default = 1200) - The default timeout in ms, after which the success results will be autohidden.\n","scaffold-static":"<p align=\"center\">\n\t<img src=\"/art/logo.png\" width=\"400\" height=\"92\" alt=\"scaffold-static logo\">\n</p>\n\n<br>\n<br>\n\n<p align=\"center\">\n\t<a href=\"https://travis-ci.com/jamesgeorge007/scaffold-static\"><img src=\"https://travis-ci.com/jamesgeorge007/scaffold-static.svg?branch=master\" alt=\"Build Status\"/></a>\n\t<a href=\"https://www.npmjs.com/package/scaffold-static\"><img src=\"https://badgen.net/npm/v/scaffold-static\" alt=\"npm version\"/></a>\n\t<a href=\"https://www.npmjs.com/package/scaffold-static\"><img src=\"https://badgen.net/npm/dm/scaffold-static\" alt=\"Downloads\"/></a>\n\t<a href=\"http://github.com/jamesgeorge007/scaffold-static/pulls\"><img src=\"https://img.shields.io/badge/PRs%20-welcome-brightgreen.svg\" alt=\"PRs Welcome\"/></a>\n\t<a href=\"https://dependabot.com/\"><img src=\"https://api.dependabot.com/badges/status?host=github&identifier=93163073\" alt=\"Dependabot\" ></a>\n</p>\n\n<p align=\"center\">\n\t<a href='https://www.buymeacoffee.com/jamesgeorge007' target='_blank'><img height='36' style='border:0px;height:36px;' src='https://bmc-cdn.nyc3.digitaloceanspaces.com/BMC-button-images/custom_images/orange_img.png' border='0' alt='Buy Me a Coffee' /></a>\n</p>\n\n`scaffold-static` lets you automate the local development environment setup and build static sites (vanilla-JS) with ease.\n\n\n## Installation\n`npm install -g scaffold-static`\n\n\n## Usage\n`scaffold-static new <project_name>`\n\n\n## How it works\n\n* Choose your favourite CSS framework to work with.\n\n> Currently the following CSS frameworks are supported:-\n\n* [Bootstrap-3](https://getbootstrap.com/docs/3.3/)\n* [Bootstrap-4](https://getbootstrap.com/)\n* [Materialize css](https://materializecss.com/)\n* [Foudation css](https://foundation.zurb.com/)\n* [Semantic-UI](https://semantic-ui.com/)\n* [Bulma css](https://bulma.io/)\n\n* `scaffold-static` generates the bare minimum boilerplate template with necessary `webpack` configurations to build the project for production.\n\n  A `webpack.config.js` file is made available which depends on the following packages:-\n  - [html-webpack-plugin](https://github.com/jantimon/html-webpack-plugin): Simplifies creation of HTML files to serve your webpack bundles.\n  - [css-loader](https://github.com/webpack-contrib/css-loader) -  interprets `@import` and `url()` like `import/require()` and will resolve them.\n  - [style-loader](https://github.com/webpack-contrib/style-loader) - Injects CSS into the DOM.\n\n* Leverage the advantages put forward by `webpack-dev-server` such as [Hot Module Replacement](https://webpack.js.org/concepts/hot-module-replacement/) essentially adding it to the DX.\n\n\n## Contributing\n  Please see the [contributing guidelines](Contributing.md)\n\n## License\n> GNU GPL V3\n\n\n## Credits\n- Created by [James George](https://twitter.com/james_madhacks)\n- Logo by [Caneco](https://twitter.com/caneco)\n","scalajs-cli-test4":"# Scala.js CLI demo [![Build Status](https://travis-ci.org/ScalaWilliam/scalajs-cli-demo.svg?branch=master)](https://travis-ci.org/ScalaWilliam/scalajs-cli-demo)\n\n> Publish Scala.js apps through NPM\n\n[![NPM](https://nodei.co/npm/scalajs-cli-demo.png?compact=true)](https://nodei.co/npm/scalajs-cli-demo/)\n\n## Rationale\n \nMost likely, you've never ran a Scala CLI app, let alone a Scala.js CLI app.\n\nBut more likely you have ran Node.js CLI apps. This is because it is super\neasy to publish your own CLI application through the NPM repository.\n\nOn the other hand. publishing Scala apps is not the easiest thing in the world.\nI want to get the best of both worlds: an excellent programming language\nand an excellent lightweight distribution channel.\n\nHere's a demo to show you that it is possible.\n\nIt includes the use of the [Scala.js Node.js strong-typed API](https://github.com/scalajs-io/nodejs)\nby [Lawrence Daniels](https://github.com/ldaniels528).\n\n## Forks\n* https://github.com/actionfps/actionfps-clone-logs - combine ScalaJS & EventSource to synchronise logs from HTTP to file.\n\n## Usage\nUse the pre-built npmjs package.\n\n```\n$ npm install -g scalajs-cli-demo\n$ scalajs-cli-demo\nHello world from Scala!\n----\nTo demonstrate we're in Node, here's some of your environment:\nPATH = /home/...\n```\n\n## Development\nI recommend IntelliJ IDEA. \n\nTo iterate, inside SBT run:\n```\n> ~run\n```\n\nor:\n\n```\n> ~test\n```\n\n## Publishing\nRequires SBT.\n\n```\n$ npm publish\n```\n","scq-input":"\n#  Quick Start\n\n> scq-input for vue\n\n## install Setup\n\n``` bash\n# install dependencies\nnpm install scq-input -S\n```\n###  main.js\n``` bash\nimport scqinput from 'scq-input'\nimport 'scq-input/dist/scq-input.min.css'\ncomponents:{\n    scqinput\n  }\n```\n## Attribute\n| name |  type| default |explain|\n|--|--|--|--|\n| type | String | 'text' | text,password |\n| classname | String |  | fluorescence,moved |\n| re| String |  | email,qq,phone,idcard,zipcode,chinese |\n\n## Event\n| name |  param|explain|\n|--|--|--|\n| onblur | flag,value  | if're'is empty and returns only value\n| oninput| flag,value  | if're'is empty and returns only value\n| onenter| valueï¼event  |\n","search_by_tags":"# Search by tag/s (search_by_tags)\n\n\n## How to use\n\n```javascript\nconst { searchByTags } = require('search_by_tags');\n// Parse your query url to this => ['eq:a|b', 'eq:c', 'not:d']\n// Meaning:\n// - tag must contain `c`\n// - tag must contains `a` or `b`\n// - tag must NOT contains `d`\nconst res = searchByTags(['eq:a|b', 'eq:c', 'not:d']);\n// req.eqAnd = ['c']\n// req.eqOr = ['a', 'b']\n// req.notEqAnd = ['d']\n```\n\n## Example\n- From input url like `https://api.example.com?tags=eq:a&tags=eq:b|c&tags=not:d`\n- To output:\n```js\n{\n  eqAnd: ['a'],\n  eqOr: ['b','c'],\n  notEqAnd: ['d']\n}\n```\n\n## Tests\n- `npm test`\n\n","seneca-perm":"[![Build Status](https://api.travis-ci.org/rjrodger/seneca-perm.png?branch=master)](https://travis-ci.org/rjrodger/seneca-perm)\n\n# seneca-perm\n\n### Node.js Seneca permissions module\n\nThis module is a plugin for the Seneca framework. It provides a\npermissions system for actions. It's also a good example of how you can compose actions by layering plugins onto each other.\n\nThis plugin works by wrapping existing actions with a permission checking action. If the permission test passes, the parent\naction can proceed. If not, a permission error is generated.\n\nThe possible permission checks are:\n\n   * _allow_: simple yes/no\n   * _act_: allow only specific actions to pass\n   * _entity_: allow only specific actions on entities\n   * _own_: allow on specific actions on entities that are 'owned' by given users\n\nThis plugin also understands when it is used in a web server context, and will add a permission specification to\nthe req.seneca object if it exists.\n\nA full example, in the context of the seneca data editor, is provided\nin the [seneca examples repository](https://github.com/rjrodger/seneca-examples). TODO!\n\n\n### Support\n\nIf you're using this module, feel free to contact me on twitter if you\nhave any questions! :) [@rjrodger](http://twitter.com/rjrodger)\n\nCurrent Version: 0.4.0\n\nTested on: Node 0.10.36, Seneca 0.6.1\n\n\n### Quick example\n\nYou use this plugin mainly by adding a _perm_ object to user entities:\n\n```JavaScript\nvar userent = seneca.make('sys','user')\n\nuserent.find({email:'alice@example.com'}, function(err,alice){\n  alice.perm = {\n    act:[\n      {foo:'bar', perm$:true},\n      {qaz:'lol', perm$:false},\n    ]\n  }\n  alice.save$()\n})\n```\n\nThis permission specification allows the user alice to execute _foo:bar_ actions, but not _qaz:lol_ ones.\nThe _perm$_ metadata property specifies the permissions for each action pattern in the list.\n\nHere's another example, this time for entities:\n\n```JavaScript\nvar userent = seneca.make('sys','user')\n\nuserent.find({email:'alice@example.com'}, function(err,alice){\n  alice.perm = {\n    entity:[\n      {base:'shop', name:'cart', perm$:'r'},\n      {base:'qaz', perm$:'crudq'},\n    ]\n  }\n  alice.save$()\n})\n```\n\nIn this case, alice can only read ('r') from -/shop/cart entities, but can do anything to -/qaz/- entities.\nThere are more details on the [seneca data entity model](http://senecajs.org/data-entities.html) here.\n\nOf course, this example code does not actually work, as all of the setup and configuration is missing.\nHere is some working code that provides a minimal example by setting up some of the values manually.\n\n### Working Code\n\nThis code applies a permissions test to the _echo_ plugin. The _echo_\nplugin has one action _role:echo_, that just gives you back the same\narguments you put it. The example code adds a permission check to this\naction, and shows you how to trigger it manually, using the _perm$_ argument.\n\n\n```JavaScript\nvar seneca  = require('seneca')()\nseneca.use('echo')\n\nseneca.use( 'perm', {act:[\n  {role:'echo'},\n]})\n\nseneca.act({role:'perm', cmd:'init'})\n\nseneca.act({role:'echo', foo:'bar', perm$:{allow:true}},function(err,out){\n  console.log('foo='+out.foo)\n})\n\nseneca.act({role:'echo', foo:'bar', perm$:{allow:false}},function(err,out){\n  console.log(err)\n})\n```\n\n\nThe _perm$_ metadata argument is recognised by the _perm_ plugin and contains the permission specification to test against.\nNormally, you won't set this manually, but generate it using the _role:perm, cmd:makeperm_ action. In a web context, this\nplugin also does this for you, based on the perm property of the current user.\n\n\n### Web App Code\n\nHere's an outline of how you would use it in a\n[connect](http://www.senchalabs.org/connect) app, using the _user_ and\n_auth_ plugins to provide user accounts:\n\n```JavaScript\nvar seneca  = require('seneca')()\nvar connect = require('connect')\n\nseneca.use('user')\nseneca.use('auth')\n\nseneca.use('perm',{\n  act:[{role:'echo'}]\n})\n\nseneca.use('echo')\n\nseneca.act({role:'perm', cmd:'init'})\n\nvar app = connect()\napp.use( seneca.service() )\napp.listen(3000)\n```\n\nThe perm plugin does not wrap other actions immediately when it is registered. Rather, you call the _role:perm, cmd:init_ action\nwhen you're ready. First you need to add any other plugins and actions that you want to apply permissions checking to.\n\n\n\n## Install\n\n```sh\nnpm install seneca\nnpm install seneca-perm\n```\n\n\n## Usage\n\nThis plugin has two elements. First, the options define the set of actions that permission checks will apply to. Second, permission\nchecks only occur if there is a _perm$_ metadata argument, containing a permissions specification.\n\n### Permission options\n\n   * _act_: array of action pins (needed for both _allow_ and _act_ checks)\n   * _entity_: array of entity type specifications\n   * _own_: array of entity type specifications\n\nThese specify the actions to wrap. For example:\n\n```JavaScript\nseneca.use( 'perm', {act:[\n  {role:'echo'}\n]})\n```\n\nThis wraps any action with a _role:echo_ argument, which means that it will have a permission check applied.\n\n<b>You need to specify explicitly the actions to which you wish to apply permission checks.</b>\n\nAs a convenience, you can apply permission checks to entities by simply specifying their zone, base and name (all optional):\n\n```JavaScript\nseneca.use( 'perm', {entity:[\n  {base:'sys'},\n  {base:'foo',name:'bar'}\n]})\n```\n\nThe above code specifies that actions on any entity of type -/sys/- or -/foo/bar will have an permission check applied.\n\nThe _entity_ option saves you from having to specify a permission check for all the entity actions, otherwise you would have to do this:\n\n```JavaScript\nseneca.use( 'perm', {act:[\n  {role:'entity',cmd:'save',base:'sys'},\n  {role:'entity',cmd:'load',base:'sys'},\n  {role:'entity',cmd:'list',base:'sys'},\n  ...\n]})\n```\n\nThe allowed entity operations (create, read, update, delete, query)\nare specified in the perm$ metadata argument to the entity actions\n(see below).\n\nThe _own_ option works in much the same way as the _entity_ option,\nexcept that the user must be the owner of the entity in question.\nEntities should have an _owner_ property containing the identifier of the -/sys/user entity for this to work.\n\n```JavaScript\nseneca.use( 'perm', {own:[\n  {base:'foo'}\n]})\n```\n\n\n### Permission specifications\n\nTo trigger a permissions check, an action must contain a perm$ metadata argument. This is an object that contains one or more of the\nfollowing properties:\n\n   * allow: boolean, true if action is permitted.\n   * act: an action router object; only matching actions can be executed\n   * entity: an entity type router object, matching the entity action, and specifying the operations permitted\n   * own: an entity type router object, matching the entity action, and specifying the operations permitted, if also owner of the entity\n\nYou do not normally construct the perm$ object directly, but instead use the _role:perm, cmd:makeperm_ action to create one from a\nliteral definition (you can store this in the -/sys/user entity, for example). If you store the definition in a _perm_ property on\n-/sys/user, and use the perm plugin in a web context, then this is done for you automatically.\n\n\n#### allow\n\nTo store as a literal, use this structure in the _perm_ property:\n\n```JavaScript\n{allow:true|false}\n```\n\nThis will converted to the perm$ metadata argument, by the _role:perm, cmd:makeperm_ action:\n\n```JavaScript\n{allow:true|false}\n```\n\nIn general, this check is not particularly useful for individual\nusers, serving rather to provide a global block on certain\nactions. You would do this by adding an allow property to any _perm$_\nyou generate.\n\n\n#### act\n\nTo store as a literal, use this structure in the _perm_ property:\n\n```JavaScript\n{act:[\n  { role:'...', cmd:'...', perm$:true },\n  { role:'...', perm$:false },\n  { foo:'bar', perm$:true },\n  ...\n]}\n```\n\nThe _act_ sub property is an array of action pins. Each pin specifies\nthe argument properties to match against. The perm$ value indicates if\nthe action is allowed or not.\n\nThis will converted to the perm$ metadata argument:\n\n```JavaScript\n{act:router}\n```\n\nwhere _router_ is a [seneca router](http://senecajs.org/routing.html) TODO! (the same thing that routes action arguments to plugin functions).\nThe router matches a given set of action arguments to the permission specification.\n\nYou could construct it manually, like so:\n\n```JavaScript\nvar router = seneca.util.router()\nrouter.add( {role:'...',cmd:'...'}, true )\nrouter.add( {role:'...'}, false )\nrouter.add( {foo:'bar'}, true )\n```\n\nNote that as with all routers, the action arguments are matched in alphabetical order.\n\n\n#### entity\n\nTo store as a literal, use this structure in the _perm_ property:\n\n```JavaScript\n{act:[\n  { base:'sys', perm$:'' },\n  { base:'foo', perm$:'rq' },\n  { base:'foo': name:'bar', perm$:'crudq' },\n  ...\n]}\n```\n\nThis specification is similar to the act specification above, except\nthat the entity type is matched against. The permission value encodes the allowed operations. There are:\n\n   * create (r): create new entities\n   * read (r): load an entity by identifier\n   * update (r): modify an entity by identifier\n   * delete (r): remove an entity by identifier\n   * query (r): perform queries to list multiple entites\n\nThe query (q) permission also allows you to perform queries for the\nread, update and delete operations, if you have permission for those\ntoo.\n\nIn the example specification above, the user has no permissions on\n-/sys/- entities, can only read and query -/foo/- entities, and\ncan perform any operations on -/foo/bar entities.\n\nThe perm$ metadata argument form is:\n\n```JavaScript\n{entity:router}\n```\n\nwhere the router is constructed in the same way as the _act_\npermission, except using the entity zone, base and name.\n The data values in the router are the _crudq_ operation\nspecifications.\n\n\n#### entity\n\nTo store as a literal, use this structure in the _perm_ property:\n\n```JavaScript\n{act:[\n  { base:'sys', perm$:'' },\n  { base:'foo', perm$:'rq' },\n  { base:'foo': name:'bar', perm$:'crudq' },\n  ...\n]}\n```\n\nThis is the same as the _entity_ permission. However, the permissions only apply if the entity has an _owner_\nproperty that matches the identifier of the user executing the action.\n\nThe perm plugin handles all the set up for you when used in a web context. See the _test/perm.app.js_ example code.\n\nThe perm$ metadata argument form is:\n\n```JavaScript\n{own:{\n  entity:router\n  owner:'...'\n}}\n```\n\nWhere the entity property is a router on the entity zone, base and\nname, has data values of the form 'crudq', and the owner is the\nidentifier of the user.\n\n\n## Access Controls\n\nAn access control procedure runs a set of ACLs against a given pair of ```entity``` and ```action```\n\nAn ACL is composed of:\n\n- a list of roles which are required for this ACL to authorize\n- a set of actions (save, update, get, list)\n- on a given entity (the type as well as specific attributes values)\n- a control type (one of required|requisite|sufficient) that determine what happens should the ACL fail or succeed:\n  - ```required``` â The service result must be successful for authentication to continue. If the test fails at this point, the user is not notified until the results of all service tests that reference that interface are complete.\n  - ```requisite``` â The service result must be successful for authentication to continue. However, if a test fails at this point, the user is notified immediately with a message reflecting the first failed required or requisite service test.\n  - ```sufficient``` â The service result is ignored if it fails. However, if the result of a service flagged sufficient is successful and no previous services flagged required have failed, then no other results are required and the user is authenticated to the service.\n\n> IMPORTANT: The order in which ```required``` ACLs are called is not critical. Only the ```sufficient``` and ```requisite``` control flags cause order to become important.\n\nExamples:\n```\n    si.use( '..', {\n      accessControls: [{\n        name: 'access to foobar entities',\n        roles: ['foobar'],\n        entities: [{\n          zone: undefined,\n          base: undefined,\n          name: 'foobar'\n        }],\n        control: 'required',\n        actions: 'crudq',\n        conditions: []\n      },{\n        name: 'access to foobar EMEA entities',\n        roles: ['EMEA'],\n        entities: [{\n          zone: undefined,\n          base: undefined,\n          name: 'foobar'\n        }],\n        control: 'required',\n        actions: 'crud',\n        conditions: [{\n            attributes: {\n              'region': 'EMEA'\n            }\n          }\n        ]\n      },{\n        name: 'access to foobar EMEA entities',\n        roles: ['private_items'],\n        entities: [{\n          zone: undefined,\n          base: undefined,\n          name: 'item'\n        }],\n        control: 'required',\n        actions: 'r',\n        conditions: [{\n            attributes: {\n              'status': 'private'\n            }\n          }\n        ]\n      }]\n    })\n```\n\n### web\n\nOut of the box, this plugin exports a web filter that looks at the logged-in user and runs the ACLs against the user's ```perm.roles``` profile attribute:\n\n    user = {\n      email: 'user@example.com',\n      perm: {\n        roles: ['foobar', 'private_items']\n      }\n    }\n\n### manual validation\n\nYou can manually invoke the ACLs by setting the ```perm$``` attribute in the arguments:\n\n      var publicAccess = si.delegate({perm$:{roles:[]}})\n      var pf1 = publicAccess.make('item',{number: 1, status: 'public'})\n\n      var privateAccess = si.delegate({perm$:{roles:['private_items']}})\n      var pf2 = privateAccess.make('item',{number: 2, status: 'private'})\n\n### current context\n\nIn some cases, you want to run access controls against the current logged in user.\nFor this, you can reference the current user in an ACL:\n\n\n    si.use( '..', {\n      accessControls: [{\n        name: 'todos: owner only',\n        roles: ['my_todos'],\n        entities: [{\n          zone: undefined,\n          base: undefined,\n          name: 'todo'\n        }],\n        control: 'required',\n        actions: 'crud',\n        conditions: [{\n            attributes: {\n              'owner': '{user.id}'\n            }\n          }\n        ]\n      }]\n    })\n\nThe above will allow users to only create, read, update or delete 'todo' objects where they are the owner.\n\n## Test\n\n```bash\nmocha test/*.test.js --seneca.log.print\n```\n\n## Tracing\n\nIf you need to trace what seneca-perm is doing you can active DEBUG before running your application:\n\n```\nDEBUG=seneca-perm:* node yourapp.js\n```\n\n\n\n","session-rememberme":"# session-rememberme\n\nThis express/connect middleware adds \"remember me\" feature with the best practices as described in [this post](http://stackoverflow.com/questions/549/the-definitive-guide-to-form-based-website-authentication#477579).\n\n\n## Installation \n\nnpm: `npm install session-rememberme`\n\n## Usage\n\nNote: all examples are in [coffeescript](http://coffeescript.org/)\n\n    options =\n        # The name of the cookie used to store the rememberme info. Defaults to 'rememberme'.\n        cookieName : 'rememberme'\n        \n        # How log should the user be remembered. Defaults to 90 days.\n        maxAge: 90 * 24 * 60 * 60 * 1000\n        \n        checkAuthenticated: ( req ) ->\n          # Return true if session is already authenticated\n          return req.session? && req.session?.user?\n        \n        # cookieUser: The user data persisted in cookie. Could be an id or a complex id that will be serialized with JSON.stringify.\n        # cb ( err, userRememberMeTokens[], sessionUser ):\n        #   err: Error loading user. This will end to request but keep the cookie intact. If you want to clear the cookie (because the user is not found for example), pass null in `userTokens` and `sessionUser`.\n        #   userRememberMeTokens: The list of rememberme tokens associated with the user\n        #   sessionUser: The user (typically the user id) to save in session. Will be passed back to setUserInSession\n        loadUser: ( cookieUser, cb ) ->\n          # Should load the session user (from DB) based on user info stored in cookie.\n          return\n        \n        # Will be called with sessionUser passed to loadUser's cb sessionUser when the rememember me token was validated.\n        # req: the express Request object.\n        # sessionUser: the user loaded by loadUser. Typically the user id.\n        setUserInSession: ( req, sessionUser ) ->\n          # Should store user information in session. This can then be used in checkAuthenticated.\n          req.session.user = sessionUser\n          \n        # Called when a token is invalidated\n        # sessionUser: the user loaded by loadUser. Typically the user id.\n        # token: the token to delete\n        # cb (err)\n        deleteToken: ( sessionUser, token, cb ) ->\n          # Should remove the token from persistence store\n          return\n        \n        # Called when an attack is suspected\n        # sessionUser: the user loaded by loadUser. Typically the user id.\n        # cb (err)\n        deleteAllTokens: ( sessionUser, cb ) ->\n          # Should remove all tokens from persistence store\n          return\n      \n        # sessionUser: the user loaded by loadUser. Typically the user id.\n        # newToken: the newly generated token that should be added to persistence store\n        # cb (err)\n        saveNewToken: ( sessionUser, newToken, cb ) ->\n          return\n\n    rememberme = require(\"session-rememberme\")( options )\n    \nTo use as [express middleware](http://expressjs.com/guide/using-middleware.html):\n\n    app = express()\n    app.use( rememberme.middleware )\n    \nWhen a user successfully login and the \"remember me\" option was selected:\n\n    rememberme.login user.id, user.id, res, ( err ) ->\n        # Continue request handling\n        \nWhen a user logout:\n\n    rememberme.logout req, res, user.id, ( err ) ->\n        # Continue request handling\n        \n## Sails example:\n\nCreate `api/services/RememberMeService.coffee`:\n\n    # cookieUser is always User.id\n    \n    options = \n      checkAuthenticated: ( req ) ->\n        return req.session? && req.session?.user?\n      \n      loadUser: ( cookieUser, cb ) ->\n        User.findOneById( cookieUser ).exec ( err, user ) ->\n          cb null, user.rememberMeTokens, user.id\n      \n      # Will be called with sessionUser passed to loadUser's cb sessionUser when the rememember me token was validated.\n      setUserInSession: ( req, sessionUser ) ->\n        req.session.user = sessionUser\n        \n      deleteToken: ( sessionUser, token, cb ) ->\n        User.findOneById( sessionUser ).exec ( err, user ) ->\n          return cb err if err\n          user.rememberMeTokens = _.without sessionUser.rememberMeTokens, token\n          user.save ( err, user ) ->\n            cb err\n      \n      deleteAllTokens: ( sessionUser, cb ) ->\n        User.findOneById( sessionUser ).exec ( err, user ) ->\n          return cb err if err\n          user.rememberMeTokens = []\n          user.save ( err, user ) ->\n            cb err\n    \n      saveNewToken: ( sessionUser, newToken, cb ) ->\n        User.findOneById( sessionUser ).exec ( err, user ) ->\n          return cb err if err\n          user.rememberMeTokens ?= []\n          user.rememberMeTokens.push newToken\n          user.save ( err, user ) ->\n            cb err\n    \n    _.merge exports, require(\"session-rememberme\")( options )\n    \nAssuming `User` defined as:\n\n    module.exports =\n    \n      attributes:\n        ...\n    \n        rememberMeTokens:\n          type: 'array'\n        \n        ...\n        \nEdit `config/http.coffee`:\n\n    order: [\n        ...\n        \"session\"\n        \"rememberme\"\n        ...\n      ]\n    \n      rememberme: (req, res, next) ->\n        RememberMeService.middleware(req, res, next)\n        \nIn your controller, after successful login:\n\n    RememberMeService.login user.id, user.id, res, ( err ) ->\n\nIn your controller, after successful logout:\n        \n    RememberMeService.logout req, res, user.id, ( err ) ->\n    \n","shift-refactor":"# Shift-refactor\n\n`shift-refactor` is a suite a utility functions designed to make quick work of modifying JavaScript source files.\n\nIt started as a tool to aid in reverse engineering but has been generalized to be a quick solution for querying and modifying any JavaScript.\n\n## Status\n\n[Experimental](http://nodejs.org/api/documentation.html#documentation_stability_index).\n\nThe features and methods here are regularly used but are not guaranteed to be stable.\n\n## Installation\n\n```sh\n$ npm install shift-refactor\n```\n\n## Usage\n\nStart by instantiating a RefactorSession with a Shift-format JavaScript AST.\n\n```js\nconst { RefactorSession } = require('shift-refactor');\nconst { parseScript } = require('shift-parser');\n\nconst ast = parseScript(javaScriptSource);\n\nconst refactor = new RefactorSession(ast);\n```\n\nBy default the RefactorSession cleans up after all major tree-modifying actions. This can be a serious\nperformance drain when you are running lots of small changes on a big tree.\n\nYou can pass `{ autoCleanup: false }` to the constructor to turn this off and then manually call `.cleanup()` at a time you choose.\n\n```js\nconst refactor = new RefactorSession(ast, { autoCleanup: false });\n\n// lots of work\n\nrefactor.cleanup();\n```\n\n## Query syntax\n\nQuery syntax comes from shift-query which comes from esquery. It is heavily based on CSS style selectors.\nSee [shift-query](https://github.com/jsoverson/shift-query) for details and use [shift-query-cli](https://github.com/jsoverson/shift-query-cli) to experiment with the query syntax on the command line.\n\n## API methods\n\n### .query(selector)\n\nRun selector on the original AST and return the result.\n\n### .queryFrom(nodes, selector)\n\nRun selector on the passed nodes and return the result.\n\n### .print()\n\nPrint the generated source for the current state of the AST.\n\n### .rename(query | nodes, newName)\n\nRenames nodes to `newName`\n\n```js\nrefactor.rename(`IdentifierExpression[name=\"oldName\"]`, 'newName');\n```\n\nFrom\n\n```js\nfunction oldName(){}\noldName();\n```\n\nTo \n\n```js\nfunction newName(){}\nnewName();\n```\n\n### delete\n\nDeletes nodes\n\n```js\nrefactor.delete(`FunctionDeclaration[name.name=\"newName\"]`);\n```\n\nFrom\n\n```js\nfunction newName(){}\nnewName();\n```\n\nTo \n\n```js\n// To\nnewName();\n```\n\n### .replace(query | nodes, source | nodes | callback(node))\n\nReplaces nodes with the passed program or nodes. If this is passed a callback then the callback will be \nexecuted with the node passed as a parameter and the return value being the replacement value.\n\n```js\nrefactor.replace(`IdentifierExpression[name.name=\"someVar\"]`, `console.log(\"Hi\")`);\n```\n\nFrom\n\n```js\nsomeVar;\n```\n\nTo \n\n```js\nconsole.log(\"Hi\");\n```\n\n### .replaceRecursive(query, source | nodes | callback(node))\n\nSame as .replace() except will be continually called until `query` returns no more nodes. Useful for sweeping refactors of a consistent format.\n\n```js\nthis.replaceRecursive(\n  `ComputedMemberExpression[expression.type=\"LiteralStringExpression\"]`, \n  node => {\n      return new Shift.StaticMemberExpression({\n        object: node.object,\n        property: node.expression.value\n      });\n    }\n);\n```\n\nFrom\n\n```js\nobject[\"property1\"][\"property2\"];\n```\n\nTo \n\n```js\nobject.property1.property2;\n```\n\n### .insertBefore(query | nodes, source | callback(node))\n\nInserts statements before target statement. Callback can return source or Shift nodes.\n\n```js\nrefactor.insertBefore(\n  `ExpressionStatement[expression.type=\"CallExpression\"]`, \n  node => `console.log(\"Calling ${node.expression.callee.name}()\")`\n);\n```\n\nFrom\n\n```js\nfunction someFunc(){}\nsomeFunc();\notherFunc();\n```\n\nTo \n\n```js\nfunction someFunc(){}\nconsole.log(\"Calling someFunc()\");\nsomeFunc();\nconsole.log(\"Calling otherFunc()\");\notherFunc();\n```\n\n### .insertAfter(query | nodes, source | callback(node))\n\nSame as insertBefore except it inserts after the target statements.\n\n```js\nrefactor.insertAfter(\n  `ExpressionStatement[expression.type=\"CallExpression\"]`, \n  node => `console.log(\"Called ${node.expression.callee.name}()\")`\n);\n```\n\nFrom\n\n```js\nfunction someFunc(){}\nsomeFunc();\notherFunc();\n```\n\nTo \n\n```js\nfunction someFunc(){}\nsomeFunc();\nconsole.log(\"Called someFunc()\");\notherFunc();\nconsole.log(\"Called otherFunc()\");\n```\n\n## Utility methods\n\nThese methods are specific implementations of the above included in because they are used so frequently.\n\n### .convertComputedToStatic()\n\nTransforms computed properties and the like to static properties. Meant to be used near the end of a refactor session to clean up the resulting code\n\nFrom\n\n```js\nconst loc = window[\"document\"][\"location\"];\n```\n\nTo \n\n```js\nconst loc = window.document.location;\n```\n\n### .expandBoolean()\n\nTurns !0 and !1 into their respective boolean values;\n\nFrom\n\n```js\nif (!0 || !1) {}\n```\n\nTo \n\n```js\nif (true || false) {}\n```\n\n### .normalizeIdentifiers() \n\nTurns every identifier into a simple identifier unique for the entire program. This greatly simplifies query-ability and \nalso normalizes code that dynamically updates variable names over time.\n\nFrom\n\n```js\nconst arst=1, aryl=2; \nvar aiai; \nfunction foie() {\n  const arst=2;\n  arst++;\n}\nfoie();\n```\n\nTo \n\n```js\nconst c=1, d=2; \nvar a; \nfunction b() {\n  const e=2;\n  e++\n}\nb();\n```\n\n## Example\n\nAssuming an input file named `obfuscated.js` containing this:\n\n```js\nvar a=['\\x74\\x61\\x72\\x67\\x65\\x74','\\x73\\x65\\x74\\x54\\x61\\x72\\x67\\x65\\x74','\\x77\\x6f\\x72\\x6c\\x64','\\x67\\x72\\x65\\x65\\x74','\\x72\\x65\\x61\\x64\\x65\\x72'];var b=function(c,d){c=c-0x0;var e=a[c];return e;};(function(){class c{constructor(d){this[b('0x0')]=d;}['\\x67\\x72\\x65\\x65\\x74'](){console['\\x6c\\x6f\\x67']('\\x48\\x65\\x6c\\x6c\\x6f\\x20'+this[b('0x0')]);}[b('0x1')](e){this['\\x74\\x61\\x72\\x67\\x65\\x74']=e;}}const f=new c(b('0x2'));f[b('0x3')]();f[b('0x1')](b('0x4'));f[b('0x3')]();}());\n```\n\nYou can use the following program to deobfuscate it:\n\n```js\nconst { RefactorSession } = require('shift-refactor');\nconst { parseScript } = require('shift-parser');\nconst Shift = require('shift-ast');\n\nconst fileContents = require('fs').readFileSync('./original-obfuscated.js', 'utf8');\n\nconst tree = parseScript(fileContents);\n\nconst refactor = new RefactorSession(tree);\n\nconst strings = refactor.query(`Script > :first-child ArrayExpression > .elements`);\n\nconst destringifyDeclarator = refactor.query(`VariableDeclarator[binding.name=\"b\"][init.params.items.length=2]`);\n\nrefactor.rename(destringifyDeclarator, 'destringify');\n\nconst destringifyOffset = refactor.queryFrom(destringifyDeclarator, `BinaryExpression > LiteralNumericExpression`);\n\nconst findIndex = (c, d) => c - destringifyOffset[0].value;\n\nrefactor.replace(\n  `CallExpression[callee.name=\"destringify\"]`, \n  node => new Shift.LiteralStringExpression({value: strings[findIndex(node.arguments[0].value)].value})\n)\n\nrefactor.delete(`[binding.name=\"a\"]`)\nrefactor.delete(`[binding.name=\"destringify\"]`)\n\nrefactor.convertComputedToStatic();\n\nconsole.log(refactor.print());\n```\n\nresulting in:\n\n```js\n(function () {\n  class c {\n    constructor(d) {\n      this.target = d;\n    }\n    greet() {\n      console.log(\"Hello \" + this.target);\n    }\n    setTarget(e) {\n      this.target = e;\n    }\n  }\n  const f = new c(\"world\");\n  f.greet();\n  f.setTarget(\"reader\");\n  f.greet();\n}());\n```\n","shim-require":"# shim-require\n\nPre-process javascript files as they get `require`d\n\n```js\nconst shimRequire = require('shim-require');\nshimRequire((content, filename) => {\n  // return modified content\n  return `console.log(\"loading ${filename}\");\\n${content}`;\n});\n\nrequire('foo'); // `loading /path/to/foo`\n```\n\nCan also modify json files\n```js\nshimRequire(content => content.replace(/foo/g, 'bar'), 'json');\nrequire('foo.json'); // { \"a\": \"bar\" }\n```\n","shitpost-generator":"# shitpost-generator\nA Node.JS module to create images with overlays\n\n# Installation\n`npm install shitpost-generator`\n\n# Example\n`npm run example` or `node example`\n\nCheck output in [`./example/out/result.png`](https://github.com/nirewen/shitpost-generator/blob/master/example/out/result.png)\n\n# Points\n\n* The image need points in which it will follow to draw on top of the background\n* Each Box object have a `points` parameter which is an Array of arrays\n\n![points](https://i.imgur.com/m4ruZah.png)\n\nFor example, yellow, you need to provide X and Y of it:\n```javascript\nnew Box([\n    [yellow.x, yellow.y], [red.x, red.y], // here you provide the rest of the points\n    [blue.x, blue.y], [green.x, green.y]              // for each point of the box\n])\n```\n\nYou can provide multiple boxes if your template needs more than one image\n\n# Templates\n\nYou can find templates in the [ShitpostBot 5000's website](https://www.shitpostbot.com/gallery/templates), aswell as overlays.","show-me-the-weather":"# Show me the weather\r\n\r\nShow me the weather is an awesome tool to check the weather of a city in you command line.\r\n\r\nTo obtain the weather of a certain region it uses [OpenWeather](https://openweathermap.org/), so you have to get one api key.\r\n\r\n## Installation\r\n\r\n```\r\nnpm install -g show-me-the-weather\r\n```\r\n\r\n## Configuration\r\n\r\n```\r\nshow-me-the-weather  --apikey=[yourOpenWeatherApiKey]\r\n```\r\n\r\n## Usage\r\n\r\n```\r\nshow-me-the-weather  [city1] [city2] [city3]\r\n```\r\n\r\n## Example\r\n\r\n```\r\nshow-me-the-weather  antequera,es\r\n```\r\n\r\n![Example](/assets/example.png)","showdown-target-blank":"Showdown's Target Blank Extension\n==========================\n\n**Target Blank extension for [showdown](https://github.com/showdownjs/showdown)**\n\nAdds support for:\n\n    [somelink](https://some.url.com/some/path) -> <a target=\"_blank\" href=\"...\" >somelink</a>\n\n## Installation\n\n### With [npm](http://npmjs.org)\n\n    npm install showdown-target-blank\n\n### With [bower](http://bower.io/)\n\n    bower install showdown-target-blank\n\n### Manual\n\nYou can also [download the latest release zip or tarball](https://github.com/cybercase/showdown-target-blank/releases) and include it in your webpage, after showdown:\n\n    <script src=\"showdown.min.js\">\n    <script src=\"showdown-target-blank.min.js\">\n\n### Enabling the extension\n\nAfter including the extension in your application, you just need to enable it in showdown.\n\n    var converter = new showdown.Converter({extensions: ['targetblank']});\n\n## Example\n\n```javascript\nvar converter = new Showdown.converter({extensions: ['targetblank']}),\n    input = 'This is a [link](http://www.example.com)',\n    html = converter.makeHtml(input);\n    console.log(html);\n```\n\nThis should output:\n\n```html\n<p>This is a <a target=\"_blank\" href=\"http://example.com\">link</a></p>\n```\n\n## License\nThese files are distributed under BSD license. For more information, please check the [LICENSE file](https://github.com/cybercase/showdown-target-blank/blob/master/LICENSE) in the source code.\n\n","simple-mailer":"# Simple Mailer for Mailgun\n\nThis is a simple module for sending emails\nusing Mailgun API.\n\n## Installation \n\n```\n$ npm install simple-mailer\n```\n\n## Usage\n\n**Note:** You must have a valid [Mailgun](http://mailgun.com) account.\n\n```\nvar simpleMailer = require('simple-mailer')({\n  domain: [your-domain-here],\n  user: [your-user],\n  key: [your-api-key] \n});\n\nmailer.send({\n  recipient: '[you]@[your_domain].com',\n  subject: 'Test subject',\n  message: 'Test message'  \n}).then(function (data) {\n  // Do something here\n});\n```\n","simple-os-platform":"<!-- TITLE/ -->\r\n\r\n<h1>Simple OS Platform</h1>\r\n\r\n<!-- /TITLE -->\r\n\r\n\r\n<!-- DESCRIPTION/ -->\r\n\r\nA helper that returns the current user's operating system. Eg. \"Windows\", \"Linux\", \"Android\", \"MacOS\", \"iOS\" etc.\r\n\r\n<!-- /DESCRIPTION -->\r\n\r\n\r\n<!-- BADGES/ -->\r\n\r\n<span class=\"badge-nodeico\"><a href=\"https://www.npmjs.com/package/simple-os-platform\" title=\"Nodei.co badge\"><img src=\"https://nodei.co/npm/simple-os-platform.png\" alt=\"Nodei.co badge\" /></a></span>\r\n<br class=\"badge-separator\" />\r\n<span class=\"badge-travisci\"><a href=\"http://travis-ci.org/barrymichaeldoyle/simple-os-platform\" title=\"Check this project's build status on TravisCI\"><img src=\"https://img.shields.io/travis/barrymichaeldoyle/simple-os-platform/master.svg\" alt=\"Travis CI Build Status\" /></a></span>\r\n<span class=\"badge-npmversion\"><a href=\"https://npmjs.org/package/simple-os-platform\" title=\"View this project on NPM\"><img src=\"https://img.shields.io/npm/v/simple-os-platform.svg\" alt=\"NPM version\" /></a></span>\r\n<span class=\"badge-npmdownloads\"><a href=\"https://npmjs.org/package/simple-os-platform\" title=\"View this project on NPM\"><img src=\"https://img.shields.io/npm/dm/simple-os-platform.svg\" alt=\"NPM downloads\" /></a></span>\r\n<span class=\"badge-daviddm\"><a href=\"https://david-dm.org/BarryMichaelDoyle/simple-os-platform\" title=\"View the status of this project's dependencies on DavidDM\"><img src=\"https://img.shields.io/david/BarryMichaelDoyle/simple-os-platform.svg\" alt=\"Dependency Status\" /></a></span>\r\n\r\n<!-- /BADGES -->\r\n\r\n## Installation\r\n\r\n`yarn add simple-os-platform`\r\n\r\nor\r\n\r\n`npm install simple-os-platform`\r\n\r\n## Usage\r\n\r\nHere's an example of a component that renders a shortcut phrase based off the user's operating system:\r\n\r\n```javascript\r\n// ES6/ES7/ESNext\r\nimport { getOS, isMac, isNotMac } from 'simple-os-platform'\r\n\r\ngetOS(); // returns your Operating System Eg. Mac, Windows etc (see list below)\r\nisMac(); // returns true if your operating system is a Mac\r\nisNotMac(); // returns false if your operating system is a Mac\r\n\r\n// CommonJS\r\nvar simpleOSPlatform = require('simple-os-platform');\r\n\r\nsimpleOSPlatform.getOS(); // returns your Operating System Eg. Mac, Windows etc (see list below)\r\nsimpleOSPlatform.isMac(); // returns true if your operating system is a Mac\r\nsimpleOSPlatform.isNotMac(); // returns false if your operating system is a Mac\r\n```\r\n\r\nIf the user's operating system is a `Mac`, the shortcut phrase renders `cmd + click`, otherwise it renders `ctrl + click`.\r\n\r\n## List of Possible Results [helper boolean functions]\r\n\r\n<ul>\r\n  <li>Android [isAndroid, isNotAndroid]</li>\r\n  <li>BlackBerry [isBlackBerry, isNotBlackBerry]</li>\r\n  <li>FirefoxOS [isFirefoxOS, isNotFirefoxOs]</li>\r\n  <li>FreeBSD [isFreeBSD, isNotFreeBSD]</li>\r\n  <li>iOS [isIOS, isNotIOS]</li>\r\n  <li>Linux [isLinux, isNotLinux]</li>\r\n  <li>Mac [isMac, isNotMac]</li>\r\n  <li>Nintendo [isNintendo, isNotNintendo]</li>\r\n  <li>OpenBSD [isOpenBSD, isNotOpenBSD]</li>\r\n  <li>Palm [isPalm, isNotPalm]</li>\r\n  <li>PlayStation [isPlayStation, isNotPlayStation]</li>\r\n  <li>SunOS [isSunOS, isNotSunOS]</li>\r\n  <li>Symbian [isSymbian, isNotSymbian]</li>\r\n  <li>Windows [isWindows, isNotWindows]</li>\r\n</ul>\r\n\r\nIf the user's operating system doesn't fall under the category of any of these list items, then the `window.navigator.platform` result will be returned instead.\r\n\r\n## Testing\r\n\r\nTesting is handled by `Jest` and the packages has the following commands setup\r\n\r\n* `yarn test`\r\n* `yarn test:watch`\r\n\r\n## Contributing\r\n\r\n<strong>TODO:</strong> Write Unit Tests for the isHelpers\r\n\r\nAll contributions are welcome, and can be done by cloning the repo and running `yarn install`.\r\n\r\nEnsure that there are no errors in the tests or linter and ensure that your commit messages comply to the following format:\r\n\r\n* break: COMMIT_MSG - changes in the code that changes the way other users would need to implement it.\r\n* feat: COMMIT_MSG - adding a new feature or capability to the helper.\r\n* fix: COMMIT_MSG - any bugs or minor updates that fixes the existing code without adding or removing any capabilities.\r\n* none: COMMIT_MSG - used for simple updates like documentation, aka NO code has changed.\r\n\r\nThere are git hooks configured to ensure commit message format as well as test and linter compliance.\r\n\r\n<!-- HISTORY/ -->\r\n\r\n<h2>History</h2>\r\n\r\n<a href=\"https://github.com/BarryMichaelDoyle/simple-os-platform/releases\">Discover the release history by heading on over to the releases page.</a>\r\n\r\n<!-- /HISTORY -->\r\n\r\n\r\n<!-- LICENSE/ -->\r\n\r\n<h2>License</h2>\r\n\r\nUnless stated otherwise all works are:\r\n\r\n<ul><li>Copyright &copy; <a href=\"https://www.barrymichaeldoyle.com\">Barry Michael Doyle</a></li></ul>\r\n\r\nand licensed under:\r\n\r\n<ul><li><a href=\"http://spdx.org/licenses/MIT.html\">MIT License</a></li></ul>\r\n\r\n<!-- /LICENSE -->\r\n","simple-toaster":"# Simple toaster\n\nAn elegant and simple notification for javascript, with no dependencies\n\n\nFeatures\n--------\n\n+ Simple CSS-animated customizable toast pop-ups for any design;\n+ No dependencies and `< 1kb` code; \n+ Toasts have different types and apply any style you need;\n+ Toasts appear and disappear by specifying optional timeout.\n\n\nInstallation & Usage\n--------------------\n\nSimpleToaster is primarily ES6 module. See it in action:\n\n```bash\nnpm i simple-toaster\n```\n\n```javascript\nimport SimpleToaster from \"simple-toaster\"\n\nSimpleToaster('success', 'Hello Toaster!')\n```\n\nParameters:\n```javascript\nwindow.toaster = SimpleToaster\n\nwindow.toaster(\n  'error',    // Toaster style type. Pre-defined: error, warning or success\n  'message',  // Message\n  false       // Timeout in ms (default: 5000)\n)\n\n```\n\nImport the style\n\n```javascript\n@import ~simple-toaster/src/simple-toaster // or 'simple-toaster/dist/simple-toaster.min.css'\n```\n","sinantica-app":"This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\n\n## Available Scripts\n\nIn the project directory, you can run:\n\n### `npm start`\n\nRuns the app in the development mode.<br>\nOpen [http://localhost:3000](http://localhost:3000) to view it in the browser.\n\nThe page will reload if you make edits.<br>\nYou will also see any lint errors in the console.\n\n### `npm test`\n\nLaunches the test runner in the interactive watch mode.<br>\nSee the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.\n\n### `npm run build`\n\nBuilds the app for production to the `build` folder.<br>\nIt correctly bundles React in production mode and optimizes the build for the best performance.\n\nThe build is minified and the filenames include the hashes.<br>\nYour app is ready to be deployed!\n\nSee the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\n\n### `npm run eject`\n\n**Note: this is a one-way operation. Once you `eject`, you canât go back!**\n\nIf you arenât satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.\n\nInstead, it will copy all the configuration files and the transitive dependencies (Webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point youâre on your own.\n\nYou donât have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldnât feel obligated to use this feature. However we understand that this tool wouldnât be useful if you couldnât customize it when you are ready for it.\n\n## Learn More\n\nYou can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).\n\nTo learn React, check out the [React documentation](https://reactjs.org/).\n\n### Code Splitting\n\nThis section has moved here: https://facebook.github.io/create-react-app/docs/code-splitting\n\n### Analyzing the Bundle Size\n\nThis section has moved here: https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size\n\n### Making a Progressive Web App\n\nThis section has moved here: https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app\n\n### Advanced Configuration\n\nThis section has moved here: https://facebook.github.io/create-react-app/docs/advanced-configuration\n\n### Deployment\n\nThis section has moved here: https://facebook.github.io/create-react-app/docs/deployment\n\n### `npm run build` fails to minify\n\nThis section has moved here: https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify\n","sj-react-component-module":"## é¡¹ç®çæç¬¬ä¸æ¹åsj-react-component-module\n\n<br />\n\n<dl>\n<dt>ä»£ç åçº¿ä¸æååå¸å°npm</dt>\n<dd>npm publish</dd>\n</dl>\n\n- * 1. npm install\n- * 2. npm start\n\n<dl>\n<dd>build  ä¸ºæååçç»ä»¶æä»¶</dd>\n<dd>bin    ä¸ºæåç»ä»¶ ç¨äºnçæbuildæä»¶</dd>\n<dd>app    ç¨æ·æµè¯ç»ä»¶</dd>\n</dl>\n\n<br />\n\nåºäºreact-boilerplateé¡¹ç®\n\n<dl>\n<dt>package</dt>\n<dd>æ³¨éæäº \"postinstall\": \"npm run build:dll\"ï¼ æ·»å äº\"prepublish\": \"npm run build\",</dd>\n<dd>installä¸æ§è¡buildï¼</dd>\n<dd>publish ä¹åæ§è¡ã</dd>\n<dd>æ·»å äºmainå¥å£ï¼</dd>\n\n\n<dt>webapck</dt>\n<dd>ä¸­ä¿®æ¹äºentry åoutputï¼</dd>\n<dd>æ³¨éæäºhtml-webpack-plugin å offline-plugin</dd>\n<dd>outputä¸­æ·»å äº</dd>\n<dd>library: 'componentLib',   // ç»ä»¶éç¨UMDæ ¼å¼æå</dd>\n<dd>libraryTarget: 'umd',  // ç»ä»¶åç§°</dd>\n</dl>\n\n<br />\n\nåå¸ï¼åå¸åèªå¨æåï¼ä¹åä½¿ç¨æ¹ç»ä»¶ï¼\n<dl>\n<dd>install sj-react-component-module --save</dd>\n<dd>import { InputSearchCom } from 'sj-react-component-module';</dd>\n<br />\nInputSearchCom value={'here'} placeholder=\"ææ\" onSearch={(value) => alert(value)}\n</dl>\n","slush-prototyper":"# [slush](https://github.com/slushjs/slush)-prototyper\n\n> Easily scaffold out a front-end web app with [Gulp](https://github.com/gulpjs/gulp)\n\n## Features\n\n### Includes:\n* HTML5 Boilerplate\n* jQuery\n* Modernizr\n* Bootstrap 4\n\n### What you can do:\n* Watch and compile Sass files automatically\n* Automatically wire-up dependencies installed with Bower\n* Start a server to preview your code with LiveReload\n\n\n## Getting Started\n\n### Installation\n\nInstall `slush-prototyper` globally:\n\n```bash\n$ npm install -g slush-prototyper\n```\n\nRemember to install `slush` globally as well, if you haven't already:\n\n```bash\n$ npm install -g slush\n```\n\n### Usage\n\nCreate a new folder for your project:\n\n```bash\n$ mkdir newproject\n```\n\nRun the generator from within the new folder:\n\n```bash\n$ cd newproject && slush webapp\n```\n\nYou can use Gulp to preview your app by running `gulp serve`. This task will also reload watched files instantly with livereload. .\n\n## Options\n\n- `--skip-install`\n  Skips the automatic execution of `bower` and `npm` after scaffolding has finished.\n\n## Getting To Know Slush\n\nSlush is a tool that uses Gulp for project scaffolding. To find out more about Slush, check out the [documentation](https://github.com/slushjs/slush).\n\n\n## License \n\nThe MIT License\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\n","smaas-swagger-spec":"## SMaaS Swagger API\n\nThis repository provides a Swagger YAML file describing the State Machines as a\nService (SMaaS) protocol. SMaaS is a RESTful HTTP and JSON protocol for\ninteracting with state machines over a network. \n","smart-ads-kiosk":"# Introduction\n\nBootstrap and package your project with Angular 7 and Electron (Typescript + SASS + Hot Reload) for creating Desktop applications.\n\nCurrently runs with:\n\n- Angular v7.0.3\n- Electron v3.0.2\n- Electron Builder v20.28.1\n\nWith this sample, you can :\n\n- Run your app in a local development environment with Electron & Hot reload\n- Run your app in a production environment\n- Package your app into an executable file for Linux, Windows & Mac\n\n\n## To build for development\n\n- **in a terminal window** -> npm start  \n\nVoila! You can use your Angular + Electron app in a local development environment with hot reload !\n\nThe application code is managed by `main.ts`. In this sample, the app runs with a simple Angular App (http://localhost:4200) and an Electron window.  \nThe Angular component contains an example of Electron and NodeJS native lib import.  \nYou can disable \"Developer Tools\" by commenting `win.webContents.openDevTools();` in `main.ts`.\n\n## Included Commands\n\n|Command|Description|\n|--|--|\n|`npm run ng:serve:web`| Execute the app in the browser |\n|`npm run build`| Build the app. Your built files are in the /dist folder. |\n|`npm run build:prod`| Build the app with Angular aot. Your built files are in the /dist folder. |\n|`npm run electron:local`| Builds your application and start electron\n|`npm run electron:linux`| Builds your application and creates an app consumable on linux system |\n|`npm run electron:windows`| On a Windows OS, builds your application and creates an app consumable in windows 32/64 bit systems |\n|`npm run electron:mac`|  On a MAC OS, builds your application and generates a `.app` file of your application that can be run on Mac |\n\n**Your application is optimised. Only /dist folder and node dependencies are included in the executable.**\n\n## You want to use a specific lib (like rxjs) in electron main thread ?\n\nYou can do this! Just by importing your library in npm dependencies (not devDependencies) with `npm install --save`. It will be loaded by electron during build phase and added to the final package. Then use your library by importing it in `main.ts` file. Easy no ?\n\n## Browser mode\n\nMaybe you want to execute the application in the browser with hot reload ? You can do it with `npm run ng:serve:web`.  \nNote that you can't use Electron or NodeJS native libraries in this case. Please check `providers/electron.service.ts` to watch how conditional import of electron/Native libraries is done.\n","soc-core":"# soc-core\n\nv0.1.21\n\n## Description\nThis is a sass framework providing styling for base elements of Soc style. \n\nSoc is an in-house developed front end framework in order to maintain a similar look and feel for all kinds of administrative websites.\n\n\n## Setup\n### Installing prerequisites\n* Download and install [git](http://nodejs.org/download/) for your OS \n* Download [nodeJS](http://nodejs.org/download/) for your OS and install. Check by running 'node -v' in a terminal window.\n* npm should come installed with node, check by running 'npm -v'\n* Because npm is more frequently updated than node, update it by running 'npm install npm@latest -g'\n\n### Quick Look\nWhen all prerequisites are met, having a look at the style is possible using only 3 commands.\n\n* Open up a terminal at a desired empty folder, make sure you have sufficient administrator rights. \n* Run 'git clone https://github.com/svennoreillie/soc-core.git'\n* cd into the soc-core project\n* Run 'demo'\n\nA browser should open containing the contents of the built soc-core project \n\n\n### Documentation\nCurrently, documentation of the various components can be found in the example website which is located in the src/html folder of this project. We hope to extend the docs in a later stage of the project.\n\n\n### Using soc-core in your own project\nSoc-core is built for use with webpack but can be used without it as well. However, without webpack some overhead might exist because of double use of javascript frameworks as we embed them into our bundle files\n\n##### Using it without webpack\n1. Change directory to root of your project in a terminal\n2. Run 'npm install soc-core --save-dev'\n3. Include 'shared.bundle.js', 'vendor.bundle.js' and 'app.bundle.js' as well as 'soc-core.css' in your website\n4. Check documentation to get started\n5. View html examples in the src/html folder\n\n##### Using it with webpack\nA demo project has been set up to show how to use soc-core in your own website. It contains a webpage with a navbar, sidebar and some content copied from the examples page. \n\nBelow is the full explanation of required files to do this \n* TL;DR Try the quick look at https://github.com/svennoreillie/soc-core-sample\n\n##### Create a project.json file\nCreate a new folder and run 'npm init' in a terminal window at the root of the project.\nAnswer the questions asked until created. \n\n##### Install soc-core\nAdd soc-core to the dependencies by running 'npm install soc-core' in a terminal at the root of your project\n\n##### Install webpack\nWebpack is an npm package so install it in your devDependencies by running 'npm install --save-dev webpack'. Do the same for the following webpack loaders and plugins:\n\n* css-loader\n* sass-loader\n* node-sass (required by sass-loader)\n* extract-text-webpack-plugin\n\nIt's also handy to install the dev server by running 'npm install --save-dev webpack-dev-server'.\n\n##### Create your own sass style\nBased upon the soc-core style. To do this create 2 files, a {your project}.scss file and a _templatevariables.scss file containing at least the following:\n\n\n{your project}.scss\n```Sass\n//Set our own variables first, these can override the bootstrap variables\n@import \"templatevariables\";\n\n//import soc-core\n@import \"~soc-core/src/stylesheets/soc.scss\";\n\n//Add custom scss below\n```\n\n_templatevariables.scss\n```Sass\n$soc-base-color:                white;\n$soc-base-text-color:           black;\n$soc-navigation-color:          #eee;\n```\nWarning: The available template variables shown above are not complete and will change over time. check src/stylesheets/_templatevariables.scss in the soc-core project for an actual overview\n\nIf you are following the names given in the rest of this small tutorial, name the main scss file 'test.scss' and place the scss files in the src/stylesheets folder.\n\n##### Add some javascript\nUse the features of webpack to start quickly with your file. The idea is that you import the soc-core javascript files which were also bundled in advance. This is quite simple and only requires the following line\n\n```javascript\nimport soc from 'soc-core';\n```\n\nThis line will import the main file defined in the project json of a package named soc-core. As soc-core also imports toastr, jquery and bootstrap these will be imported automatically as well. \n\nMore scripting can of course be done as well. For this demo this is not required so we keep it at one line. If you are following the tutorial, you should put this line in a test.js file in the src/javascripts folder.\n\n##### Setup webpack\nCreate a webpack.config.js file in the root of your project and paste in the following contents\n```javascript \nvar extractText = require('extract-text-webpack-plugin');\n\nmodule.exports = {\n    entry: {\n        app: './src/javascripts/test',\n        css: './src/stylesheets/test.scss'\n    },\n\n    output: {\n        filename: './dist/[name].bundle.js'\n    },\n    devtool: 'source-map',\n    module: {\n        loaders: [{\n            test: /\\.scss$/,\n            loader: extractText.extract('css-loader!sass-loader?sourceMap')\n        }]\n    },\n\n    plugins: [\n        new extractText({\n            filename: 'dist/test.css',\n            disable: false,\n            allChunks: true\n        }),\n    ]\n};\n```\nThis is a basic setup of webpack, it tells webpack to look at 2 entries (app and css) at their corresponding paths and put them in /dist/app.bundle.js and /dist/css.bundle.js respectively. The modules define loaders and how to process files with the .scss extension. In this case it will first be compiled using the sass-loader, then the css will interpret url(..) and import statements and embed the results into the css.bundle.js file found in the dist folder. Finally this is extracted back out using the extract text plugin to a test.css file (which is setup in the plugins array)\n\nTo start the build simply run 'webpack' in a terminal window on the root of your project (requires webpack to be installed globally and sufficient rights). Another option is to set the scripts of your packages.json file to the following:\n```javascript\n\"scripts\": {\n    \"start\": \"webpack-dev-server --watch --progress --inline --open\",\n    \"build\": \"webpack --progress\"\n},\n``` \nIf these scripts are set, you can also run 'npm run build' in a terminal to do the same.\n\n##### Creating the html\nCreate an index.html at the root of your project linking the bundled files created by webpack like the following:\n```html\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>Title</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n    <link rel=\"stylesheet\" href=\"dist/test.css\">\n    <script src=\"dist/app.bundle.js\"></script>\n</head>\n<body>\n    Content goes here, check docs and examples of soc-core\n</body>\n</html>\n```\n\n##### Try it out\nRun 'webpack-dev-server --watch --inline --open' or 'npm start' (if setup in scripts) to build and start the project.\n\n\n## Contribution guidelines\n* Fork this repo\n* Add or change styles\n* Include example page\n* Update the docs\n* Create a pull request\n\n### Extending the project\nMake sure you have all the prerequisites as mentioned above and run 'npm install' at the root of the project.\n\nSoc-core is created using Visual Studio Code and it is recommended you use this IDE when contributing to the project. When this project is opened in Code, press Ctrl+Shift+B (or run the build command) to run the default build task, the project is configured to pack the project using webpack, start a dev server and opening the default browser to the created website.\n\nWhen Visual Studio code is not an option install npm packages manually and run 'npm start' in a terminal window at the root of the project.\nAfter this you can navigate to 'http://localhost:8080' (or a different port if the default one wasn't available) to view the example website. \n\nThe project is setup to be a live session, meaning changes made in code will automatically trigger a refresh in the browser.\n\n### Guidelines\nThe project contains all of its source files int the src folder split into separate folders based on the type of file. \n\n#### Sass files\nSass files belong in the stylesheets folder. Keep these clean as this is the core of the project. We opted to work with a soc.scss file importing all the partial files which are divided based on the feature or element they style.\n\nThe _variables are imported before the bootstrap variables in order to override the bootstrap ones. \n\n##### Template variables\nTemplate variables are not meant to override the soc-core variables, even though it is possible to do this. This file is meant to define a color scheme, some width and height definitions are given, settings for general animation can be set here as well. \n#### Javascript files\nA soc-core.js file exists to provide scripts for the style. Scripts specific for the examples in the html folder belong in the site-specific.js file as this will not be bundled with the others. When using external frameworks, a require link should be provided in the vendor.js file. \n#### Html files\nThese are only for the example pages and provide samples as well as documentation, when changing styling or features, make sure there are plenty of examples to make clear what your change brings to the updated version.\n\n### Building soc-core\nSoc-core uses webpack to build so you can just run 'webpack' in a terminal at the root of the project which will create a dist folder containing javascript bundles and generated css files. Before a new version is published to npm a build must be ran for all files to be updated correctly. \n\nTesting only using the dev-server will not be enough as this will build its resources in memory and does not update the dist folder.\n\nThe delivery method of this npm packages is not final and might change over time.\n\n## License\nMIT License\n\nCopyright (c) 2017 \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","socketclient-vue":"# Socket Client\n\nWelcome!\n\n## Communication\n\n- If you **need help** or have a **general question**, contact\n\n## Install Socket Client SDK\n\n```shell\nnpm install socketclient-vue\n```\n\n## How to use SocketClient Vue\n\n**SocketClient Vue** must be installed like a plugin.\n\n```\nimport Vue from 'vue';\nimport SocketClientVue from 'socketclient-vue';\nimport App from './App';\n\nVue.use(SocketClientVue, { subscribeKey: 'YOUR SUBSCRIBE KEY HERE', socketDomain: 'YOUR SOCKET DOMAIN HERE' });\n\nnew Vue({\n  el: '#app',\n  template: '<App/>',\n  components: { App },\n});\n```\n\n## Where subscribe\n\nUse the hook mounted to subscribe channels using **$scSubscribe** method\n\n\n```\nexport default {\n  name: 'app',\n  mounted() {\n    this.$scSubscribe({ channels: 'ch1 });\n  },\n};\n```","soft-angular-mask":"# mask to input Angular 2+ \n\n## Description\n\nDirective to masquerade input in angular 2/4 (money and number).\n\n## Demo\n\n<a href=\"http://www.renatodev.com.br/\">DEMO</a>\n\n## Example mask\n\n(087) 8745-9876 - 76888-098 - R$ 1.234,00 - $ 1.00\n\n## Installation\n\nTo install this library, run:\n\n```bash\n$ npm install soft-angular-mask --save\n```\nand then from your Angular `AppModule`:\n\n```typescript\n...\n\n// Import library\nimport { MaskModule } from 'soft-angular-mask';\n\n@NgModule({\n  ...\n  imports: [\n\n    MaskModule\n\n  ],\n  ...\n})\nexport class AppModule { }\n```\n\nUse in your Angular application:\n\n```xml\n<!-- in html -->\n\n<input mask-number [mask]=\"'99999-999'\" name=\"valCode\" [(ngModel)]=\"valCode\">\n\n<input mask-number [mask]=\"'(99) 999999999'\" [reqMin]=\"13\" name=\"valPhone\" [(ngModel)]=\"valPhone\">\n   \n<input mask-money [prefix]=\"'R$'\" name=\"valMoney\" [(ngModel)]=\"valMoney\">\n\n```\n\n## Options - mask-number\n\n```xml\n[mask]=\"'9'\"  <!-- '9' - represents a number -->\n[reqMin]=\"1\"  <!-- minimum size to mask -->\n[maskkOutput]=\"true\"  <!-- output ngModel masked -->\n```\n\n## Options - mask-money\n\n```xml\n[prefix]=\"'R$'\"  <!-- printed before value -->\n```\n\n## Solicitation of improvements\n\nSouUmLucas (10/11/2017) - enable output of ngModel masked / status: implemented\n\n\n## License\n\nMIT Â© [Renato Souza de Oliveira](mailto:renatosistemas.vc@gmail.com)\nemail: mailto:renatosistemas.vc@gmail.com\n","spencer-ui":"# Getting Started\n\n```\nnpm i spencer-ui -S\n```\n\nES6, CommonJS, and UMD builds are available with each distribution. For example:\n\n```\nimport 'spencer-ui/styles.css'\nimport { Button } from 'react-virtualized'\n```\n\nAlternately you can load a global-friendly UMD build:\n```\n<link rel=\"stylesheet\" href=\"path-to-spencer-ui/styles.css\">\n<script src=\"path-to-spencer-ui/dist/umd/spencer-ui.js\"></script>\n```\n\n\n# Doc Generation\nDocs get automatically generated using react-docgen and then placed into a\nwebsite generated with gatsby.\n","speriment":"#Speriment\n\n##Making experiments easier to express\n\n###What is Speriment?\nSperiment is a package, inspired by [SurveyMan](https://github.com/SurveyMan/SurveyMan), to help you write an online experiment for use with\n[PsiTurk](https://psiturk.org/). PsiTurk describes itself as a tape player - it can run any \"tape\",\nthat is, JavaScript program, as an online experiment on Mechanical Turk. But\nyou have to provide the tape. Speriment allows you to write a simple Python\nscript, using only the most basic programming skills, to create that JavaScript\nprogram. Instead of writing your own code to shuffle items, display HTML,\nrecord answers, and so on, you simply describe the structure and contents of\nyour experiment.\n\nIt's currently in beta. It should work on any Unix machine but has only been\ntested on a Mac. Please add an Issue if you find any bugs.\n\n###The structure of a Speriment\n\nSperiment experiments are made by nesting Python objects.\n\nThe outermost object is an `Experiment.`\n\n`Experiment`s contain `Block`s.\n\n`Block`s can contain other `Block`s, or `Page`s, or lists of `Page`s (called groups, but these have no special constructor).\n\n`Page`s that pose questions contain `Option`s, and those that are instructions do not.\n\nThere are a few other objects and a handful of functions that you may also want to use to either process your data or build up your experiment.\n\nJust call `install` on your `Experiment` at the end of your script to write your experiment to a JavaScript file which Speriment and PsiTurk can use to run your experiment online.\n\nCheck out the API at [RawGit](http://rawgit.com/presleyp/Speriment/master/doc/speriment.html).\n\nCheck out an [example script](https://github.com/presleyp/Speriment/blob/master/doc/example.py) to see some of the trickier ideas in action.\n\n###What kinds of experiments can Speriment run?\nHere are a few things Speriment can handle:\n\n- counterbalancing. Say you have questions that belong to treatment A and\n  questions that belong to treatment B, and you want half of your participants\n  to get treatment A first, and half to get treatment B first. Speriment can\n  handle this in a probabilistic way. Put your A questions in one block and\n  your B questions in another block and specify both of them as exchangeable\n  blocks. It can also handle it in a deterministic way --- use `counterbalance` instead of `exchangeable`.\n  You'll also need to set your PsiTurk config file's `num_counters` variable in this case.\n- Latin squares. For each item set (conditions 1 to n of an item), make a group\n  (a list of Pages). Keep the order of the conditions the same in each group.\n  Then set the block containing the groups to `latin_square = True`. This feature\n  uses the `num_conds` variable set by PsiTurk, so remember to set that to your\n  number of conditions.\n- pseudorandomization. Specify the `condition` of each Page in a block, and then\n  set `pseudorandom = True`. The block will not run two items of the same\n  condition in a row.\n- training loops. Give the relevant pages in a block (or their options)\n  `correct` attributes. Then set a criterion for the block, as explained in the\n  Python API. The block will rerun itself until the participant performs as\n  well as you specified in the criterion. You may want to specify `feedback` on\n  each Page or Option to tell participants how they're doing.\n- presentation of items conditioned on previous responses. Create a RunIf\n  object and put it in the block that you want to run only under a certain\n  condition.\n- distribution of text and resources to pages on a per-participant basis. This uses\n  `banks` defined in a block or the experiment, and `SampleFrom` objects in place of\n  the string to be sampled from a bank.\n\n###How do I run an experiment?\nYou'll still need to follow all of the [instructions for using PsiTurk](https://psiturk.readthedocs.org).\n\nBut this is what the workflow will look like in your terminal:\n\n1. Install PsiTurk and the Python component of Speriment. This only has to be done once, whereas future steps are done once per experiment.\nAnother one-time installation you may want to consider is of a database like MySQL, as the database PsiTurk uses by default may lead to corrupt data\nif multiple participants try to submit data at once. See the PsiTurk documentation.\n\n    `sudo pip install psiturk`\n\n    `sudo pip install speriment`\n\n2. Make a project directory for this experiment. In this case I'm calling it `myproject`.\n    \n    `psiturk-setup-example`\n\n    `mv psiturk-example/ myproject/`\n\n3. Edit your [configuration files](http://psiturk.readthedocs.org/en/latest/configuration.html) and the following files in `templates`:\n    - [ad.html](http://psiturk.readthedocs.org/en/latest/file_desc/ad_html.html)\n    - [complete.html](http://psiturk.readthedocs.org/en/latest/file_desc/complete_html.html)\n    - [consent.html](http://psiturk.readthedocs.org/en/latest/file_desc/consent_html.html)\n    - [default.html](http://psiturk.readthedocs.org/en/latest/file_desc/default_html.html)\n    - [error.html](http://psiturk.readthedocs.org/en/latest/file_desc/error_html.html)\n\n    Note that [exp.html](http://psiturk.readthedocs.org/en/latest/file_desc/exp_html.html) is required for PsiTurk, but you should not edit it, because Speriment does so automatically. Speriment also automatically edits `static/task.js`, so do not delete it.\n\n4. Write a Python script to generate a Speriment from a csv of your experimental\nmaterials. Put the csv file and the Python script in `myproject` (or whatever\nyou called the directory).\n\n5. Install the JavaScript component of Speriment.\n    \n    `cd ~/myproject/static/lib`\n   \n    `npm install speriment`\n\n6. Run your Python script. It's important to do this after installing Speriment. If you accidentally do it in the wrong order, you can always rerun the script.\n    \n    `cd ~/myproject`\n    \n    `python myscript`\n\n7. Enter the PsiTurk shell. If you're using a MySQL database, start its server first with `mysql.server start`.\n    \n    `psiturk`\n\n8. In the PsiTurk shell, turn on the server and, if you're using a tunnel, open a tunnel.\n\n    `server on`\n    \n    `tunnel open`\n\n9. Debug your experiment in your browser.\n    \n    `debug`\n\n10. Try out your experiment in the Mechanical Turk Sandbox. This command will ask you questions and then give you two links; follow the Sandbox link.\n    \n    `hit create`\n\n11. When you're ready, switch to live mode and make a HIT to put on the real Mechanical Turk.\n    \n    `mode`\n    \n    `hit create`\n\n    The PsiTurk shell also has other useful commands, so check out its documentation.\n\n12. Check on your experiment as it's running with PsiTurk commands like `hit list` and `worker list.` When the HIT is reviewable, you can run `worker approve` to pay workers.\n\n13. Finally, use Speriment to retrieve and format your data, writing it to a\n    csv in your project directory that you can load into Python or R. Speriment\n    comes with a command-line tool `speriment-output` to make this easy. It\n    takes one required argument and one optional list of arguments. The required argument is\n    the name of a file to write the results to. The optional one is --exclude\n    or -e.  It should be used if you know already that you want to exclude data\n    from certain workers. You can exclude them after looking at the data, so\n    this is just a convenience. Follow the flag with the worker IDs of the\n    workers you want to exclude.\n\n    Here, I'm imagining I want to exclude the data that I generated\n    when I was debugging the experiment and was given worker ID debugALHLUO.\n\n    `speriment-output myproject_results.csv -e debugALHLUO`\n\n\n###What data does Speriment record?\n\nIn terms of PsiTurk, Speriment only records trial data, not unstructured data.\nPsiTurk records event data automatically, but only for a few kinds of events.\n\nSperiment records the following trial data and `speriment-output` gives it these column names:\n\n- PageID: ID given or automatically generated for the page.\n- PageText: Text displayed on the page.\n- PageResources: Resources displayed on the page.\n- BlockIDs: IDs of all blocks that enclose this page\n- StartTime: The time when the page displayed. This is in milliseconds since\n  1/1/1970, which makes it easy to do math on.\n- EndTime: The time when the participant clicked Next.\n- ReactionTime: The difference between StartTime and EndTime.\n- Iteration: The number of times, counting from 1, that this page was\n  displayed. Will always be 1 unless the page is in a block with a criterion.\n- Condition: The experimental condition supplied or sampled for the page.\n- OptionOrder: The option IDs in the order in which they were displayed.\n  Options are shuffled and you may want to look at how they appeared on the\n  page.\n- OptionTexts: The text of each option displayed on this page in the order in which it displayed.\n- OptionResources: Resources displayed with the options on this page, grouped\n  by option in the order in which the options displayed.\n- SelectedID: The IDs of any options that the participant selected.\n- SelectedPosition: The position, left-to-right starting from 0 at the left, of\n  any selected options.\n- SelectedText: The text of any options that the participant selected.\n- Correct: The information you supplied about whether the option is correct or\n  what a correct text answer will match.\n\n\n`speriment-output` also returns the following columns from PsiTurk data:\n- UniqueID: The HIT ID and Worker ID\n- TrialNumber: Starting from 0, the number of this trial. Every page gets a\n  number, including instructions and feedback.\n- Version: If you set the `num_conds` variable in config.txt, this is the\n  version of the experiment that the participant saw. Used in Latin Square\n  designs.\n- Permutation: If you set the `num_counters` variable in config.txt, this\n  determines the ordering of the blocks you counterbalanced.\n- HIT: HIT ID\n- WorkerID: Worker ID of the participant\n\nFinally, it returns the tags you included in your Python script:\n- User-defined columns: There will then be a column for each page tag you\n  supplied and a column for each option tag you supplied. Option tag values\n  will be grouped by option and giving in the order in which the options were\n  displayed.\n\nPsiTurk provides information about the version of the experiment (which they\ncall condition) that was used for the purpose of Latin squares, the worker ID,\nand the trial number. Note that it also supplies, with each trial, a field\ncalled \"datetime\", which is the time the trial was saved. All trials are saved\nat the end of the experiment, so this number is not informative for reaction\ntimes and does not reliably show trial order.\n\n###How do I contribute?\n\nContributions are super welcome. But before you start coding, start an Issue or\ncomment on an existing one. There are lots of new features to add, and we want to\nmake sure they'll play nice together before anyone spends time implementing stuff.\n","split-if-boxed-bug-x":"<a\n  href=\"https://travis-ci.org/Xotic750/split-if-boxed-bug-x\"\n  title=\"Travis status\">\n<img\n  src=\"https://travis-ci.org/Xotic750/split-if-boxed-bug-x.svg?branch=master\"\n  alt=\"Travis status\" height=\"18\">\n</a>\n<a\n  href=\"https://david-dm.org/Xotic750/split-if-boxed-bug-x\"\n  title=\"Dependency status\">\n<img src=\"https://david-dm.org/Xotic750/split-if-boxed-bug-x/status.svg\"\n  alt=\"Dependency status\" height=\"18\"/>\n</a>\n<a\n  href=\"https://david-dm.org/Xotic750/split-if-boxed-bug-x?type=dev\"\n  title=\"devDependency status\">\n<img src=\"https://david-dm.org/Xotic750/split-if-boxed-bug-x/dev-status.svg\"\n  alt=\"devDependency status\" height=\"18\"/>\n</a>\n<a\n  href=\"https://badge.fury.io/js/split-if-boxed-bug-x\"\n  title=\"npm version\">\n<img src=\"https://badge.fury.io/js/split-if-boxed-bug-x.svg\"\n  alt=\"npm version\" height=\"18\">\n</a>\n<a\n  href=\"https://www.jsdelivr.com/package/npm/split-if-boxed-bug-x\"\n  title=\"jsDelivr hits\">\n<img src=\"https://data.jsdelivr.com/v1/package/npm/split-if-boxed-bug-x/badge?style=rounded\"\n  alt=\"jsDelivr hits\" height=\"18\">\n</a>\n<a\n  href=\"https://bettercodehub.com/results/Xotic750/split-if-boxed-bug-x\"\n  title=\"bettercodehub score\">\n<img src=\"https://bettercodehub.com/edge/badge/Xotic750/split-if-boxed-bug-x?branch=master\"\n  alt=\"bettercodehub score\" height=\"18\">\n</a>\n<a\n  href=\"https://coveralls.io/github/Xotic750/split-if-boxed-bug-x?branch=master\"\n  title=\"Coverage Status\">\n<img src=\"https://coveralls.io/repos/github/Xotic750/split-if-boxed-bug-x/badge.svg?branch=master\"\n  alt=\"Coverage Status\" height=\"18\">\n</a>\n\n<a name=\"module_split-if-boxed-bug-x\"></a>\n\n## split-if-boxed-bug-x\n\nTests if a value is a string with the boxed bug; splits to an array.\n\n<a name=\"exp_module_split-if-boxed-bug-x--module.exports\"></a>\n\n### `module.exports(value)` â <code>\\*</code> â\n\nThis method tests if a value is a string with the boxed bug; splits to an\narray for iteration; otherwise returns the original value.\n\n**Kind**: Exported function  \n**Returns**: <code>\\*</code> - An array or characters if value was a string with the boxed bug;\notherwise the value.\n\n| Param | Type            | Description             |\n| ----- | --------------- | ----------------------- |\n| value | <code>\\*</code> | The value to be tested. |\n\n**Example**\n\n```js\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\n\n// No boxed bug\nconsole.log(splitIfBoxedBug('abc')); // 'abc'\n\n// Boxed bug\nconsole.log(splitIfBoxedBug('abc')); // ['a', 'b', 'c']\n```\n","stats-filelist":"# statsFilelist\n\n[![npm](https://img.shields.io/npm/v/stats-filelist.svg)](https://www.npmjs.com/package/stats-filelist) [![GitHub issues](https://img.shields.io/github/issues/anseki/stats-filelist.svg)](https://github.com/anseki/stats-filelist/issues) [![dependencies](https://img.shields.io/badge/dependencies-No%20dependency-brightgreen.svg)](package.json) [![license](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE-MIT)\n\nGet a list of files and directories with `Stats` of each item. And filter the list with evaluating path, path pattern, type, size, modified time, and more.\n\nBy default, statsFilelist gets all files and directories under specific directories recursively, and it returns an Array that includes the expanded [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats) objects of each item.  \nThat expanded `fs.Stats` object has additional properties such as `fullPath`, `extension`, etc.. (See [`Stats` object](#stats-object).)  \nThe got `Stats` objects will be useful more than the path list because you are supposed to do something with those files or directories after getting those.\n\nIt returns the filtered list if you want. That filter evaluates that `Stats` object by using flexible ways such as RegExp, callback, etc..  \nAnd also, the filter can control the behavior of statsFilelist. For example, it make statsFilelist stop getting files any more when the file you want was found out.\n\n```js\nvar filelist = require('stats-filelist');\n\n// Asynchronous method:\nfilelist.get(['dir-1', 'dir-2'], function(list) {\n  console.log(list);\n}, /\\.js$/i); // Get JavaScript files.\n// `extension` property also can be used.\n\n// Synchronous method:\nvar list = filelist.getSync(['dir-1', 'dir-2'],\n  function(stats) { return stats.size > 1024; }); // Get 1KB+ files.\nconsole.log(list);\n```\n\n## Methods\n\n### `get`, `getSync`\n\n```js\nfilelist.get(path, callback[, options])\n```\n\n```js\nfilelist.get(path, callback[, filter[, recursive]])\n```\n\n```js\nlist = filelist.getSync(path[, options])\n```\n\n```js\nlist = filelist.getSync(path[, filter[, recursive]])\n```\n\n`get` is asynchronous method, and `getSync` is synchronous method.\n\n`path` argument is a string as the path of target directory, or an Array that includes those of multiple target directories. The default value of `path` argument is `.` (i.e. current working directory).\n\n`callback` argument that is specified to `get` method is a function that is called with `list` Array when processing finished. That is same as `list` Array that is returned by `getSync` method.\n\nBy default, the `list` Array includes [`Stats` object](#stats-object)s. Also, what it includes can be specified via [`listOf`](#listof) option.\n\nFor example:\n\n```js\nconsole.log('File name: ' + list[3].name + ' Updated: ' + list[3].mtime);\n```\n\n`options` argument is an Object that has `filter` property, and more. (See [Options](#options).)  \n`filter` and `recursive` arguments are same as [`filter`](#filter) and [`recursive`](#options-recursive) option.  \nFor example, the following 2 codes work same:\n\n```js\nfilelist.get(path, callback, wanted);\n```\n\n```js\nfilelist.get(path, callback, { filter: wanted });\n```\n\n## Options\n\n`options` Object that is passed to the methods can have following properties:\n\n### `filter`\n\n*Type:* RegExp, string or function  \n*Default:* `undefined`\n\nBy default, the list statsFilelist returns includes all items under specific directories. This option decides whether the list includes each item.  \nThis can be one of following types:\n\n#### RegExp\n\nIf the full path of the current item matches this RegExp, that item is included to the list.\n\nFor example, the PNG files are listed ([`extension`](#extension) property of [`Stats` object](#stats-object) also can be used.):\n\n```js\nlist = filelist.getSync('./media', /\\.png$/i);\n```\n\nFor example, the files and directories except `debug.log` and `package.json` are listed:\n\n```js\nlist = filelist.getSync('./repo',\n  /^(?!.*[\\/\\\\](?:debug\\.log|package\\.json)$).+$/);\n```\n\nFor example, the files and directories except files starting with a dot are listed:\n\n```js\nlist = filelist.getSync('./project', /^(?!.*[\\/\\\\]\\.[^\\/\\\\]*$).+$/);\n```\n\nFor example, the files and directories under `css` directories are listed:\n\n```js\nlist = filelist.getSync('./websites', /[\\/\\\\]css[\\/\\\\]/i);\n```\n\n#### string\n\nIf the full path of the current item includes this string, that item is included to the list.  \n`/` and `\\` are replaced to the platform-specific file separator before this is used. In Windows, the string comparisons are case-insensitive (e.g. it  considers that `file.txt` is included in `FooFile.TXT`).\n\nFor example, the files and directories under `node_modules` directories are listed:\n\n```js\nlist = filelist.getSync('./dev', '/node_modules/');\n```\n\nFor example, the files and directories starting with a dot are listed:\n\n```js\nlist = filelist.getSync('./project', '/.');\n```\n\n#### function\n\nThis function decides whether the current item is included to the list, and also, it can control the behavior of statsFilelist.  \nIt is called with the [`Stats` object](#stats-object) of the current item.\n\n##### When it returns a boolean\n\n```js\ninclude = filter(stats)\n```\n\nIf this function returns a `true`, the current item is included to the list. If it returns a `false`, the current item is not included to the list.\n\nFor example, the directories are listed:\n\n```js\nlist = filelist.getSync(null, function(stats) {\n  return stats.isDirectory(); // Use `stats.isFile()` if you want files.\n});\n```\n\nFor example, the files and directories that were modified recently are listed:\n\n```js\nlist = filelist.getSync('./docs', function(stats) {\n  return stats.mtime > yesterday;\n});\n```\n\nFor example, the `index.html` files are listed:\n\n```js\nlist = filelist.getSync('./public_html', function(stats) {\n  return stats.name === 'index.html';\n});\n```\n\n##### When it returns an Object\n\n```js\nobject = filter(stats)\n```\n\nIf this function returns an Object, the following properties of this Object decide whether the current item is included to the list, and it controls the behavior of statsFilelist:\n\n###### `include`\n\nIf `true` is specified to this property, the current item is included to the list. If `false` is specified to it, the current item is not included to the list.\n\nFor example, the files are listed:\n\n```js\nlist = filelist.getSync(null, function(stats) {\n  return {\n    include: stats.isFile()\n  };\n});\n```\n\n*If this Object has only `include` property, [that boolean can be returned](#when-it-returns-a-boolean) instead of this Object.*\n\n###### `exit`\n\nIf `true` is specified to this property, statsFilelist exits from current directory after processing of current item, and the remaining items in current directory are not processed.  \n*Note that the \"current directory\" means the parent directory of current item, it is not the directory current item points.*  \nThis is used to finish the method fast.\n\nFor example, it does not have to look for the file any more in that directory if it found out `public_html`, because any more `public_html` are clearly not existing under that directory tree:\n\n```js\nlist = filelist.getSync('./websites', function(stats) {\n  return stats.name === 'public_html' ? {\n      include: true,\n      exit: true\n    } : false; // Others are not listed.\n});\n```\n\n###### `stop`\n\nIf `true` is specified to this property, statsFilelist stops getting the items after processing of current item, and it returns the list that includes the items that were added until now, and the all remaining items are not processed.  \nThis is used to finish the method fast when you want to find out an only one file in the target path.\n\nFor example, it does not have to look for the file any more if it found out `foo.py`, because any more `foo.py` are clearly not existing under that project directory tree:\n\n```js\nlist = filelist.getSync('./project', function(stats) {\n  return stats.name === 'foo.py' ? {\n      include: true,\n      stop: true\n    } : false; // Others are not listed.\n});\n```\n\n###### <a name=\"filter-recursive\"></a>`recursive`\n\n*This is not [`recursive`](#options-recursive) option.*\n\nThis property overrides [`recursive`](#options-recursive) option temporarily.  \nWhen the current item is directory, if `true` is specified to this property, statsFilelist gets the items in that directory even if `false` is specified to `recursive` option. If `false` is specified to it, statsFilelist does not get the items in that directory even if `true` is specified to `recursive` option.  \nThis is used to finish the method fast.\n\nFor example, it does not have to list the files and directories in `node_modules` directory:\n\n```js\nlist = filelist.getSync('./websites', function(stats) {\n  return stats.name === 'node_modules' ? {\n      include: false,\n      recursive: false\n    } : true; // Others are listed.\n});\n```\n\n### <a name=\"options-recursive\"></a>`recursive`\n\n*Type:* boolean  \n*Default:* `true`\n\n*This is not [`recursive`](#filter-recursive) property of [`filter`](#filter) option.*\n\nBy default, statsFilelist gets all items under specific directories recursively. If `false` is specified to this property, statsFilelist does not get the items in the sub directories.  \nThis can be controlled on demand by [`recursive`](#filter-recursive) property of [`filter`](#filter) option.\n\n### `clearCache`\n\n*Type:* boolean  \n*Default:* `false`\n\nEver since it is loaded, statsFilelist caches the got [`Stats` object](#stats-object)s to finish the processing fast.  \nIf you want to clear the cache data to get the newest information such as modified time of the updated files, specify `true` to this option.\n\n### `listOf`\n\n*Type:* string  \n*Default:* `undefined`\n\nBy default, statsFilelist returns the list of [`Stats` object](#stats-object)s. If the name of property or method of `Stats` object is specified to this option, it returns the list of those values. That is value that was returned by specific method if the name of method is specified.\n\nFor example, the list of full paths of each file and directory is returned:\n\n```js\nlist = filelist.getSync(null, { listOf: 'fullPath' });\n```\n\n`list`:\n\n```js\n[\n  '/path/to/file-1',\n  '/path/to/file-2',\n  '/path/to/dir-1',\n  '/path/to/file-3'\n]\n```\n\nFor example, the list of names of each file and directory is returned:\n\n```js\nlist = filelist.getSync(null, { listOf: 'name' });\n```\n\n`list`:\n\n```js\n[\n  'file-1',\n  'file-2',\n  'dir-1',\n  'file-3'\n]\n```\n\nFor example, the list of booleans to indicate whether it is file (return value of `isFile` method) of each item is returned:\n\n```js\nlist = filelist.getSync(null, { listOf: 'isFile' });\n```\n\n`list`:\n\n```js\n[\n  true,\n  true,\n  false,\n  true\n]\n```\n\n## `Stats` object\n\nThe `Stats` object that is evaluated in filter and included to the list that is returned by statsFilelist by default is the expanded [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats) object.  \nThis has native methods such as `isFile`, `isDirectory`, etc. and native properties such as `mode`, `size`, `mtime`, etc. and following additional properties:\n\n### `path`\n\nThe path of the item that was joined to specific target path.\n\n### `fullPath`\n\nThe full path of the item.\n\n### `dirPath`\n\nThe full path of the parent directory of the item.\n\n### `name`\n\nThe name of the item.\n\n### `extension`\n\nThe file extension of the item. This does not include `.` as separator.\n","string-length-cli":"# string-length-cli [![](https://travis-ci.org/LitoMore/string-length-cli.svg?branch=master)](https://travis-ci.org/LitoMore/string-length-cli)\n\n> Get the real length of a string - by correctly counting astral symbols and ignoring ansi escape codes\n\n`String#length` errornously counts [astral symbols](https://web.archive.org/web/20150721114550/http://www.tlg.uci.edu/~opoudjis/unicode/unicode_astral.html) as two characters.\n\n## Install\n\n```bash\n$ npm i -g string-length-cli\n```\n\n## Usage\n\n```bash\n$ string-length --help\n\n  Usage\n    $ string-length <text> [more...]\n\n  Example\n    $ string-length Jiongå§\n    6\n```\n\n## Related\n\n- [string-length](https://github.com/sindresorhus/string-length) - API for this module\n\n## License\n\nMIT Â© [LitoMore](https://github.com/LitoMore)\n","stuwebfk":"stuwebfk\n========\n\nstudent web framework\n","swordjs":"sword.js\n=======\n\n```sword.js``` is a pure Javascript library to read the bible modules from [Crosswire](http://crosswire.org/sword). It currently supports only compressed (zText) bible modules. [BibleZ NG](https://github.com/zefanja/biblez-ng) is based on this library.\n\nBuild\n-----\n\nInstall ```webpack``` an run ```npm run build```. For development use ```npm start``` and open ```http://localhost:8080/webpack-dev-server/``` in your browser.\n\nUsage\n-----\n\n```npm install swordjs``` then you can ```require``` it.\n\nAPI\n---\n\n```sword.js``` is currently in a alpha version, so the API will likely change in the future.\n\nMost API calls take a callback as the last argument. The callback will return ```null``` or an ```error``` as first argument. The second, third, ... argument is the reponse from the API.\n\n### installMgr ###\n\n#### installMgr.getRepositories(inCallback) ####\nGet a list of all available repositories and takes a callback funtion as argument. The callback will return an array of the repositories as second argument (first will be ```null``` or an ```error```). Currently only the following CrossWire repos are supported:\n* main\n* beta\n* av11n\n* attic\n* Wycliffe\n* av11n attic\n\n#### installMgr.getRemoteModules(inRepo, inUrl, inCallback) ####\nGet a list of all modules in a repository. ```inRepo``` is an object containing the repository url and the repository type. ```inUrl``` is optional. The callback will return an array with all modules.\n\n#### installMgr.installModule(inUrl, inCallback, inProgressCallback) ####\nThis will install a module from ```inUrl```. You can also pass a file blob from a zipped module file for offline installation as first argument. The callback will return ```null``` or an ```error``` as the first argument. The second callback is optional. It will report the progress of the module download.\n\n#### installMgr.removeModule(iModuleKey, inCallback) ####\nThis will remove the module with the ```inModuleKey```. The callback will return ```null``` or an ```error``` as the first argument.\n\n### moduleMgr ###\n\n####moduleMgr.getModules(inCallback) ####\nThis will return a list of all installed modules.\n\n### Module ###\nEach module has the following properties and API:\n\n#### config ####\nThis property contains the all the module information that is normally found in a modules *.conf file.\n\n#### renderText(inPassage, inOptions, inCallback) ####\n```inPassage``` is a passage in a bible like ```Gen 1``` or ```Romans 3```. ```inOptions``` is an Object and optional. It can contain the following porperties (default values):\n\n```javascript\n{\n    oneVersePerLine: false,\n    footnotes: false,\n    crossReferences: false,\n    headings: false,\n    wordsOfChristInRed: false,\n    intro: false, //show book or chapter introductions\n}\n```\n\nThe callback will return an object as second argument:\n\nExample:\n```javascript\n{\n    text: \"...\", //the rendered text (HTML),\n    footnotes: {\n        \"Gen.1.1\": [{note: \"/*Note text*/\", n: \"1\"}, {...}],\n        \"Gen.1.4\": [{note: \"/*Note text*/\", n: \"2\"}, {...}],\n        ...\n    }\n}\n```\n\n#### getAllBooks(inCallback) ####\nReturns a list of all books in a module.\n\n###verseKey###\n\n#### verseKey.parse(inPassage, inV11n) ####\nTakes a passage (e.g. Matt 1:1) as argument an returns an object like this:\n\n```javascript\n{\n    osisRef: \"Matt.1.1\",\n    book: \"Matt\",\n    bookNum: 39,\n    chapter: 1\n    verse: 1 //this can also be NaN if you pass a passage the has no verse in it like \"Matt 1\".\n}\n```\n\n#### verseKey.next(inPassage, inV11n) ####\nReturns the next chapter that follows ```inPassage```. If you pass \"Matt 1\" you will get an verseKey object for \"Matt 2\".\n\n#### verseKey.previous(inPassage, inV11n) ####\nReturns the previous chapter that comes before ```inPassage```. If you pass \"Mark 1\" you will get an verseKey object for \"Matt 28\".\n\nLicence\n-------\n\n```sword.js``` is licenced under the GNU GPLv3.\n","tamvan-meter":"# tamvan-meter\n\nHow tamvan you are?\nKnow how Tamvan you are right now.\n\nTo install this package simply run `npm i tamvan-meter`.\n\nTo use this package just require this like `const tamvanMeter = require('tamvan-meter')`.\n\nThen simply run it with on your script with `tamvanMeter.tm`.\n","tcomb-react-bootstrap":"% tcomb-react-bootstrap\n\n![tcomb logo](http://gcanti.github.io/resources/tcomb/logo.png)\n\nThis project adds a type checking layer to the components of [react-bootstrap](https://github.com/react-bootstrap/react-bootstrap). \n\nIf you want to **add type checking to your own React components**, see [here](https://github.com/gcanti/tcomb-react).\n\n# Playground\n\nTry the playground [here](https://gcanti.github.io/resources/tcomb-react-bootstrap/playground/playground.html)\n\n# Constraint examples\n\nSome constraints among others enforced by this library:\n\n- `Alert`: `onDismiss` and `dismissAfter` must either or neither passed\n- `ButtonGroup`: can have only `Button` children\n- `Col`: props must be integers between 1 and 12\n- `Glyphicon`: can't have children\n- `Nav`: bsStyle must be one of `pills`, `tabs`\n\nFor now the constraints are quite relaxed in order to allow an easier demo, however they can be tighten up to the point of accepting \nonly whitelisted props.\n\n# Usage\n\n```js\n/** @jsx React.DOM */\n// development\nvar Alert = require('tcomb-react-bootstrap/Alert');\n// production\n// var Alert = require('react-bootstrap/Alert');\n\nvar good = (\n  <Alert bsStyle=\"warning\">\n    <strong>Holy guacamole!</strong>\n  </Alert>\n); // => ok!\n\nvar bad = (\n  <Alert bsStyle=\"warn\"> // <-- should be \"warning\"\n    <strong>Holy guacamole!</strong>\n  </Alert>\n); // => fail! debugger kicks in\n```\n\n# Setup\n\n    npm install tcomb-react-bootstrap\n\n# License (MIT)\n","test_cc11":"ï¿½ï¿½Ê²Ã´?","tfh-api":"## tfh-api@1.1.3\n\n### Building\n\nTo install the required dependencies and to build the typescript sources run:\n```\nnpm install\nnpm run build\n```\n\n### publishing\n\nFirst build the package than run ```npm publish dist``` (don't forget to specify the `dist` folder!)\n\n### consuming\n\nNavigate to the folder of your consuming project and run one of next commands.\n\n_published:_\n\n```\nnpm install tfh-api@1.1.3 --save\n```\n\n_without publishing (not recommended):_\n\n```\nnpm install PATH_TO_GENERATED_PACKAGE/dist --save\n```\n\n_using `npm link`:_\n\nIn PATH_TO_GENERATED_PACKAGE/dist:\n```\nnpm link\n```\n\nIn your project:\n```\nnpm link tfh-api\n```\n\n__Note for Windows users:__ The Angular CLI has troubles to use linked npm packages.\nPlease refer to this issue https://github.com/angular/angular-cli/issues/8284 for a solution / workaround.\nPublished packages are not effected by this issue.\n\n\n#### General usage\n\nIn your Angular project:\n\n\n```\n// without configuring providers\nimport { ApiModule } from 'tfh-api';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n    imports: [\n        ApiModule,\n        // make sure to import the HttpClientModule in the AppModule only,\n        // see https://github.com/angular/angular/issues/20575\n        HttpClientModule\n    ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n```\n// configuring providers\nimport { ApiModule, Configuration, ConfigurationParameters } from 'tfh-api';\n\nexport function apiConfigFactory (): Configuration => {\n  const params: ConfigurationParameters = {\n    // set configuration parameters here.\n  }\n  return new Configuration(params);\n}\n\n@NgModule({\n    imports: [ ApiModule.forRoot(apiConfigFactory) ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n```\nimport { DefaultApi } from 'tfh-api';\n\nexport class AppComponent {\n\t constructor(private apiGateway: DefaultApi) { }\n}\n```\n\nNote: The ApiModule is restricted to being instantiated once app wide.\nThis is to ensure that all services are treated as singletons.\n\n#### Using multiple swagger files / APIs / ApiModules\nIn order to use multiple `ApiModules` generated from different swagger files,\nyou can create an alias name when importing the modules\nin order to avoid naming conflicts:\n```\nimport { ApiModule } from 'my-api-path';\nimport { ApiModule as OtherApiModule } from 'my-other-api-path';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  imports: [\n    ApiModule,\n    OtherApiModule,\n    // make sure to import the HttpClientModule in the AppModule only,\n    // see https://github.com/angular/angular/issues/20575\n    HttpClientModule\n  ]\n})\nexport class AppModule {\n\n}\n```\n\n\n### Set service base path\nIf different than the generated base path, during app bootstrap, you can provide the base path to your service. \n\n```\nimport { BASE_PATH } from 'tfh-api';\n\nbootstrap(AppComponent, [\n    { provide: BASE_PATH, useValue: 'https://your-web-service.com' },\n]);\n```\nor\n\n```\nimport { BASE_PATH } from 'tfh-api';\n\n@NgModule({\n    imports: [],\n    declarations: [ AppComponent ],\n    providers: [ provide: BASE_PATH, useValue: 'https://your-web-service.com' ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n\n#### Using @angular/cli\nFirst extend your `src/environments/*.ts` files by adding the corresponding base path:\n\n```\nexport const environment = {\n  production: false,\n  API_BASE_PATH: 'http://127.0.0.1:8080'\n};\n```\n\nIn the src/app/app.module.ts:\n```\nimport { BASE_PATH } from 'tfh-api';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ ],\n  providers: [{ provide: BASE_PATH, useValue: environment.API_BASE_PATH }],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n```  ","timagic":"# TiMagic  \n[![npm version](https://badge.fury.io/js/timagic.svg)](http://badge.fury.io/js/timagic) [![Join the chat at https://gitter.im/hendrikelsner/timagic](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/hendrikelsner/timagic?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![Titanium](http://www-static.appcelerator.com/badges/titanium-git-badge-sq.png)](http://www.appcelerator.com/titanium/)  \nNodeJS Command-line tool for the Titanium CLI and ADB.  \n\n![*Screenshot here*](screen.png)\n### Features\n* Build and install in parallel to all connected devices and genymotion or run in iOS simulator. (requires [ios-deploy](https://github.com/phonegap/ios-deploy))\n* All build related information is pulled from cli setup and the project's tiapp.xml.\n* Use your favourite IDE for app development without sacrificing easy and fast access to Titanium CLI features.\n* Distribute your app to iOS and Android devices using a generated microsite\n\n### Get TiMagic\n* `npm install timagic`\n\n### Use TiMagic\n* Run `timagic -h` for usage information.\n\n### For iOS Device Install\n* Install ios-deploy via `npm install -g ios-deploy`\n\n### Development install\n1. Clone the repository to a local folder.\n1. Fetch Dependencies with ```npm install```\n1. Link for global access to the CLI\n(Assuming you're on the repository's root folder) run:  \n```npm link```\n\n### General Requirements\n* NodeJS & NPM\n* Currently only tested on MacOS\n* [Appcelerator Titanium CLI](https://github.com/appcelerator/titanium) <= 3.2\n* ADB 1.0.* (As part of Appcelerator Titanium)","timeandreturn":"[![Build Status](https://travis-ci.org/JustinLovinger/timeandreturn.svg?branch=master)](https://travis-ci.org/JustinLovinger/timeandreturn)\n[![Coverage Status](https://coveralls.io/repos/github/JustinLovinger/timeandreturn/badge.svg?branch=master)](https://coveralls.io/github/JustinLovinger/timeandreturn?branch=master)\n[![npm version](https://badge.fury.io/js/timeandreturn.svg)](https://badge.fury.io/js/timeandreturn)\n\n\n# timeandreturn\n\nA simple utility library to get the elapsed time of a block of code.\nDesigned to easily drop into existing code with minimal changes, for easy performance profiling.\n\n## Installation\n\nvia [npm](https://github.com/npm/npm)\n\n```\nnpm install timeandreturn\n```\n\n# Usage\n\nSay you have a section of code\n\n```js\n// ...\nlet a = foo();\nlet b = bar();\nreturn foobar(a, b);\n```\n\nYou want to know how long these three lines of code take to run. You can wrap this block of code with `timeAndReturn`.\n\n```js\nconst timeAndReturn = require('timeandreturn').timeAndReturn;\n\n// ...\nreturn timeAndReturn((elapsedTime) => {\n    // Do something with elapsedTime\n}, () => {\n    let a = foo();\n    let b = bar();\n    return foobar(a, b);\n});\n```\n\nThe return value of `foobar` is returned by `timeAndReturn`, so the logic of the program is unchanged, but `elapsedTime` is captured.\n\nIf you only want to log `elapsedTime`, a `logTimeAndReturn` variant is provided.\n\n```js\nconst logTimeAndReturn = require('timeandreturn').logTimeAndReturn;\n\n// ...\n// Prints: \"() => { let a = foo(); let b = bar(); return f ...\" ran for 0.00014059999999881256 seconds\nreturn logTimeAndReturn(() => {\n    let a = foo();\n    let b = bar();\n    return foobar(a, b);\n});\n```\n\n## Async\n\nIf `block` returns a `Promise`, `callback` is called when that `Promise` resolves.\n\n```js\nconst logTimeAndReturn = require('timeandreturn').logTimeAndReturn;\n\n// ...\n// Prints: \"async () => { let a = foo(); let b = bar(); aw ...\" ran for 1.000469800000079 seconds\nreturn logTimeAndReturn(async () => {\n    let a = foo();\n    let b = bar();\n    await waitFor1Second();\n    return foobar(a, b);\n});\n```\n\n# API\n\n```ts\n/**\n * Call callback with the time taken to run block, and return the result of block\n *\n * If block returns a Promise, call callback after promise resolves.\n *\n * Elapsed time is given in milliseconds.\n */\ntimeAndReturn<T>(callback: (elapsedTime: number) => void, block: () => T): T\n```\n\n```ts\n/**\n * Log the time taken to run block, and return the result of block\n */\nlogTimeAndReturn<T>(block: () => T): T\n```","tinydoc-theme-gitbooks":"# tinydoc-theme-gitbooks\n\nA theme plugin after [gitbooks.io](https://gitbooks.io).\n\nA screenshot:\n\n![a screenshot showing the theme](screenshots/lua_cliargs_netlify.png)\n\nOr a demo, if you're lucky and it's still running: http://lua-cliargs.netlify.com/\n\n## Usage\n\n```bash\nnpm install --save tinydoc-theme-gitbooks\n```\n\nAnd in your `tinydoc.conf.js`:\n\n```javascript\nexports.plugins = [\n  require('tinydoc-theme-gitbooks')()\n];\n\n// you should probably turn on the collapsible sidebar setting:\nexports.collapsibleSidebar = true;\n\n// and restrict the sidebar resizing:\nexports.resizableSidebar = false;\n```\n\nThat's it!\n\n","tlsa":"# tlsa","tonyharkimage":"## React component of Lazyload Image ","tre-videos":"tre-videos\n---\n\nLicense: AGPLv3 - Copyright Jan Boelsche\n","twitch-webhooks":"# Twitch.js\n<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->\n[![All Contributors](https://img.shields.io/badge/all_contributors-14-orange.svg?style=flat-square)](#contributors-)\n<!-- ALL-CONTRIBUTORS-BADGE:END -->\n\nA set of libraries that aims to cover all of the existing Twitch APIs.\n\n- Query the Kraken v5 & Helix APIs\n- Build a chat bot\n- React to custom redemptions, subscriptions, follows and much more using PubSub and WebHooks\n- Do all this without caring about the expiry of your access tokens - **we can refresh them automatically**\n\n## Installation\n\nTo add Twitch.js to your project, just execute:\n\n\tyarn add twitch\n\nor using npm:\n\n\tnpm install --save twitch\n\n## Documentation\n\nA good place to start with this library is the [documentation](https://d-fischer.github.io/twitch)\nwhich also includes a complete reference of all classes and interfaces, as well as changes and deprecations between major versions.\n\n## Additional packages\n\nThis core package only provides API and authentication functionality. All the other things are located in separate packages:\n\n- [twitch-chat-client](https://d-fischer.github.io/twitch-chat-client) - connect to and interact with Twitch Chat\n- [twitch-pubsub-client](https://d-fischer.github.io/twitch-pubsub-client) - listen to events using the Twitch PubSub interface\n- [twitch-webhooks](https://d-fischer.github.io/twitch-webhooks) - listen to events using WebHooks\n\n## If you're getting stuck...\n\nYou can join the [Discord server](https://discord.gg/b9ZqMfz) for support.\n\n## Contributors â¨\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/d-fischer\"><img src=\"https://avatars3.githubusercontent.com/u/5854687?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Daniel Fischer</b></sub></a><br /><a href=\"https://github.com/d-fischer/twitch/commits?author=d-fischer\" title=\"Code\">ð»</a> <a href=\"https://github.com/d-fischer/twitch/commits?author=d-fischer\" title=\"Documentation\">ð</a> <a href=\"#example-d-fischer\" title=\"Examples\">ð¡</a> <a href=\"#infra-d-fischer\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">ð</a> <a href=\"#maintenance-d-fischer\" title=\"Maintenance\">ð§</a> <a href=\"https://github.com/d-fischer/twitch/pulls?q=is%3Apr+reviewed-by%3Ad-fischer\" title=\"Reviewed Pull Requests\">ð</a> <a href=\"#tool-d-fischer\" title=\"Tools\">ð§</a></td>\n    <td align=\"center\"><a href=\"https://humanoids.be\"><img src=\"https://avatars0.githubusercontent.com/u/640949?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Martin Giger</b></sub></a><br /><a href=\"https://github.com/d-fischer/twitch/commits?author=freaktechnik\" title=\"Code\">ð»</a> <a href=\"#question-freaktechnik\" title=\"Answering Questions\">ð¬</a></td>\n    <td align=\"center\"><a href=\"https://github.com/JakubKohout\"><img src=\"https://avatars0.githubusercontent.com/u/339965?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jakub Kohout</b></sub></a><br /><a href=\"https://github.com/d-fischer/twitch/commits?author=JakubKohout\" title=\"Code\">ð»</a></td>\n    <td align=\"center\"><a href=\"https://github.com/lafiosca\"><img src=\"https://avatars2.githubusercontent.com/u/9442662?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Joe Lafiosca</b></sub></a><br /><a href=\"https://github.com/d-fischer/twitch/commits?author=lafiosca\" title=\"Code\">ð»</a></td>\n    <td align=\"center\"><a href=\"https://gu3.st\"><img src=\"https://avatars2.githubusercontent.com/u/375232?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Dustin Dawes</b></sub></a><br /><a href=\"https://github.com/d-fischer/twitch/commits?author=gu3st\" title=\"Code\">ð»</a></td>\n    <td align=\"center\"><a href=\"http://abb.ink\"><img src=\"https://avatars3.githubusercontent.com/u/2461972?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jasper Abbink</b></sub></a><br /><a href=\"https://github.com/d-fischer/twitch/commits?author=jabbink\" title=\"Code\">ð»</a></td>\n    <td align=\"center\"><a href=\"https://github.com/lclc98\"><img src=\"https://avatars2.githubusercontent.com/u/1905336?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>lclc98</b></sub></a><br /><a href=\"https://github.com/d-fischer/twitch/commits?author=lclc98\" title=\"Code\">ð»</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"http://dfdx.us\"><img src=\"https://avatars0.githubusercontent.com/u/3087358?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Haley Hitch</b></sub></a><br /><a href=\"https://github.com/d-fischer/twitch/commits?author=dfoverdx\" title=\"Code\">ð»</a></td>\n    <td align=\"center\"><a href=\"https://streamcord.io/\"><img src=\"https://avatars3.githubusercontent.com/u/19719195?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Akira</b></sub></a><br /><a href=\"https://github.com/d-fischer/twitch/commits?author=devakira\" title=\"Code\">ð»</a></td>\n    <td align=\"center\"><a href=\"https://twitter.com/Robinlemonz\"><img src=\"https://avatars2.githubusercontent.com/u/12851394?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Lewis Gibson</b></sub></a><br /><a href=\"https://github.com/d-fischer/twitch/commits?author=Robinlemon\" title=\"Code\">ð»</a></td>\n    <td align=\"center\"><a href=\"http://ashuvidz.com\"><img src=\"https://avatars3.githubusercontent.com/u/4967868?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>VyrtualSynthese</b></sub></a><br /><a href=\"https://github.com/d-fischer/twitch/commits?author=vyrtualsynthese\" title=\"Code\">ð»</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Spidy88\"><img src=\"https://avatars1.githubusercontent.com/u/1076168?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Nick Ferraro</b></sub></a><br /><a href=\"https://github.com/d-fischer/twitch/commits?author=Spidy88\" title=\"Code\">ð»</a></td>\n    <td align=\"center\"><a href=\"https://alca.tv\"><img src=\"https://avatars2.githubusercontent.com/u/7132646?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jacob Foster</b></sub></a><br /><a href=\"#question-AlcaDesign\" title=\"Answering Questions\">ð¬</a> <a href=\"https://github.com/d-fischer/twitch/commits?author=AlcaDesign\" title=\"Code\">ð»</a></td>\n    <td align=\"center\"><a href=\"http://blerp.com\"><img src=\"https://avatars2.githubusercontent.com/u/10217999?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Aaron Kc Hsu</b></sub></a><br /><a href=\"https://github.com/d-fischer/twitch/commits?author=aaronkchsu\" title=\"Code\">ð»</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-enable -->\n<!-- prettier-ignore-end -->\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n","typeface-baloo-tamma":"\n# typeface-baloo-tamma\n\nThe CSS and web font files to easily self-host âBaloo Tammaâ.\n\n## Install\n\n`npm install --save typeface-baloo-tamma`\n\n## Use\n\nTypefaces assume youâre using webpack to process CSS and files. Each typeface\npackage includes all necessary font files (woff2, woff) and a CSS file with\nfont-face declarations pointing at these files.\n\nYou will need to have webpack setup to load css and font files. Many tools built\nwith Webpack will work out of the box with Typefaces such as [Gatsby](https://github.com/gatsbyjs/gatsby)\nand [Create React App](https://github.com/facebookincubator/create-react-app).\n\nTo use, simply require the package in your projectâs entry file e.g.\n\n```javascript\n// Load Baloo Tamma typeface\nrequire('typeface-baloo-tamma')\n```\n\n## About the Typefaces project.\n\nOur goal is to add all open source fonts to NPM to simplify using great fonts in\nour web projects. Weâre currently maintaining 927 typeface packages\nincluding all typefaces on Google Fonts.\n\nIf your favorite typeface isnât published yet, [let us know](https://github.com/KyleAMathews/typefaces)\nand weâll add it!\n","typeface-diplomata":"\n# typeface-diplomata\n\nThe CSS and web font files to easily self-host âDiplomataâ.\n\n## Install\n\n`npm install --save typeface-diplomata`\n\n## Use\n\nTypefaces assume youâre using webpack to process CSS and files. Each typeface\npackage includes all necessary font files (woff2, woff) and a CSS file with\nfont-face declarations pointing at these files.\n\nYou will need to have webpack setup to load css and font files. Many tools built\nwith Webpack will work out of the box with Typefaces such as [Gatsby](https://github.com/gatsbyjs/gatsby)\nand [Create React App](https://github.com/facebookincubator/create-react-app).\n\nTo use, simply require the package in your projectâs entry file e.g.\n\n```javascript\n// Load Diplomata typeface\nrequire('typeface-diplomata')\n```\n\n## About the Typefaces project.\n\nOur goal is to add all open source fonts to NPM to simplify using great fonts in\nour web projects. Weâre currently maintaining 929 typeface packages\nincluding all typefaces on Google Fonts.\n\nIf your favorite typeface isnât published yet, [let us know](https://github.com/KyleAMathews/typefaces)\nand weâll add it!\n","typeface-love-ya-like-a-sister":"\n# typeface-love-ya-like-a-sister\n\nThe CSS and web font files to easily self-host âLove Ya Like A Sisterâ.\n\n## Install\n\n`npm install --save typeface-love-ya-like-a-sister`\n\n## Use\n\nTypefaces assume youâre using webpack to process CSS and files. Each typeface\npackage includes all necessary font files (woff2, woff) and a CSS file with\nfont-face declarations pointing at these files.\n\nYou will need to have webpack setup to load css and font files. Many tools built\nwith Webpack will work out of the box with Typefaces such as [Gatsby](https://github.com/gatsbyjs/gatsby)\nand [Create React App](https://github.com/facebookincubator/create-react-app).\n\nTo use, simply require the package in your projectâs entry file e.g.\n\n```javascript\n// Load Love Ya Like A Sister typeface\nrequire('typeface-love-ya-like-a-sister')\n```\n\n## About the Typefaces project.\n\nOur goal is to add all open source fonts to NPM to simplify using great fonts in\nour web projects. Weâre currently maintaining 939 typeface packages\nincluding all typefaces on Google Fonts.\n\nIf your favorite typeface isnât published yet, [let us know](https://github.com/KyleAMathews/typefaces)\nand weâll add it!\n","typeface-meddon":"\n# typeface-meddon\n\nThe CSS and web font files to easily self-host âMeddonâ.\n\n## Install\n\n`npm install --save typeface-meddon`\n\n## Use\n\nTypefaces assume youâre using webpack to process CSS and files. Each typeface\npackage includes all necessary font files (woff2, woff) and a CSS file with\nfont-face declarations pointing at these files.\n\nYou will need to have webpack setup to load css and font files. Many tools built\nwith Webpack will work out of the box with Typefaces such as [Gatsby](https://github.com/gatsbyjs/gatsby)\nand [Create React App](https://github.com/facebookincubator/create-react-app).\n\nTo use, simply require the package in your projectâs entry file e.g.\n\n```javascript\n// Load Meddon typeface\nrequire('typeface-meddon')\n```\n\n## About the Typefaces project.\n\nOur goal is to add all open source fonts to NPM to simplify using great fonts in\nour web projects. Weâre currently maintaining 939 typeface packages\nincluding all typefaces on Google Fonts.\n\nIf your favorite typeface isnât published yet, [let us know](https://github.com/KyleAMathews/typefaces)\nand weâll add it!\n","v-namespace":"# v-namespace\r\nAdds custom prefix to all class declarations within v-namespace blocks for your CSS/SCSS files/strings.\r\n\r\n    var doPrefix = require(\"v-namespace\");\r\n    var css = `\r\n        @include v-namespace('some-custom-prefix-') {\r\n            .comp {\r\n                color:black;\r\n                .btn {\r\n                    color:white;\r\n                }\r\n                .a.b { color:red; }\r\n            }\r\n        }\r\n    `;\r\n    css = doPrefix(css);\r\n\r\nMainly used for distributing css-skinnable (but having completely self-contained base css styles) modular components anywhere (with a specific namespace) and providing a way of ensuring it's css class declarations will not be affected by any holding global/parenting css class names you may end up using anywhere else on your site/app.\r\n\r\nJust enclose your SCSS/CSS content some kind of `@include v-namespace(\"prefixNamespaceGoesHere-\") {` block `}` mixin stub directive. Any content within that namespaced block  scope with _`./{some alphabet}/`_  (ie. a dot and then an alphabet) will be assumed to be a class identifier, and will be prepended with the literal string as specified in the namespace directive.\r\n\r\nExample:\r\n\r\n    #my-home-page {\r\n       .splash-container {\r\n           @include v-namespace('some-custom-prefix-') {\r\n              .listitem {\r\n                  background-color:#33141F;\r\n              }\r\n              .col-md-8 {\r\n                  display:flex;\r\n              }\r\n              @include v-namespace('another-custom-prefix-') {\r\n                  .listitem {\r\n                      background-color:#aabbcc;\r\n                  }\r\n              }\r\n              .listitem-k {\r\n                 background-color:orange;\r\n              }\r\n           }\r\n       }\r\n    }\r\n    \r\nwill become this:\r\n\r\n    #my-home-page {\r\n       .splash-container {\r\n         \r\n              some-custom-prefix-listitem {\r\n                  background-color:#33141F;\r\n              }\r\n              .some-custom-prefix-col-md-8 {\r\n                  display:flex;\r\n              }\r\n             \r\n                  .another-custom-prefix-listitem {\r\n                      background-color:#aabbcc;\r\n                  }\r\n              \r\n              .some-custom-prefix-listitem-k {\r\n                 background-color:orange;\r\n              }\r\n           \r\n       }\r\n    }\r\n    \r\nAs you can see, namespacing can be nested as well and will be scoped accordingly.\r\n  \r\nIf you are running under SCSS, you can specify a variable name for the component prefix like `@include v-namespace($varName)`. The namespace prefix will be translated as `#{$varName}` according to SCSS conventions, and will produce something like _`.#{$varName}className {`_. If you use variable references, you can manage all custom skinning component namespaces from a central location.\r\n\r\n## Flags\r\n\r\nCustom flags can be enabled within the 2nd parameter of the `v-namespace()` function. \r\n\r\nEg. `v-namespace('the-prefix-', 'mixed')`.\r\n\r\n### mixed\r\n\r\nSpecifies an explicit 'mixed' scope for  the `v-namespace`. When in this mode, you need to prepend all \"namespacing\" class names with a `-` prefix in from of the `.` dot. This allows you to mix both namespaced and global scopes together without having to re-declare an empty string namespace block for global scope.\r\n\r\nExample:\r\n\r\n    @include v-namespace('some-custom-prefix_', 'mixed') {\r\n         .comp {\r\n             .-class-name {\r\n                  color:red;\r\n              } \r\n             .googlemaps {\r\n                    background-color:black;\r\n              }\r\n          }\r\n    }\r\n  \r\n  becomes\r\n  \r\n        .some-custom-prefix_comp {\r\n             .some-custom-prefix_class-name {\r\n                  color:red;\r\n              } \r\n             .googlemaps {\r\n                    background-color:black;\r\n              }\r\n         }\r\n   \r\n As you can see, only the `.-` pattern is replaced by the prefix.\r\n \r\n# Some Caveats\r\n \r\nFor simplicity of implementation, the code involves naive find and replace. So it might accidentally replace some strings (particularly within css comments) that might end up being mistaken as CSS class names. \r\n\r\nAlso, it won't support namespacing any SCSS `@include` directives or mixins directly within the namespace block and it's only Find+Replace over the current document within namespaced blocks, and doesn't involve an actual AST (Abstract syntax tree) preprocessor that could modify the way the actual file works at compile time itself. However, the advantage is that this will  work over any other language besides SCSS/CSS, ie. over plain CSS and even other style syntaxes that would have no issue with the Find+Replace routine.\r\n\r\nIt's best to leave your CSS code uncommented within namespaced blocks, and/or ensure any `.` dot character has a leading space after it to avoid accidental find+replace prefixing. eg. Use of `content:` CSS property would be particular tricky if you need to have an alphabet directly after a preceding dot, and you might have to resort to SCSS variable names declared outside of any component namespaced block to get around the caveat.\r\n \r\n \r\n# Gulp integration\r\n \r\nGo to the following URL for gulp integration of this library:\r\n \r\nhttps://github.com/Glidias/gulp-v-namespace/\r\n","virtual-webtorrent":"# virtual-webtorrent [![stability][0]][1]\n[![npm version][2]][3] [![build status][4]][5] [![test coverage][6]][7]\n[![downloads][8]][9] [![js-standard-style][10]][11]\n\nWebtorrent video element for virtual-dom.\n\n## Usage\n```js\nconst hyperx = require('hyperx')\nconst vdom = require('virtual-dom')\nconst hx = hyperx(vdom.h)\nconst createWebTorrent = require('virtual-webtorrent')\n\nconst tree = hx`\n  <section>\n    ${createWebTorrent({ torrent: torrent })}\n  </section>\n`\ndocument.body.appendChild(vdom.create(tree))\n```\n\n## API\n### webtorrent(opts)\nCreate a new webtorrent element. Options are:\n- __torrent:__ required, torrent file\n\n## Installation\n```sh\n$ npm install virtual-webtorrent\n```\n\n## License\n[MIT](https://tldrlegal.com/license/mit-license)\n\n[0]: https://img.shields.io/badge/stability-experimental-orange.svg?style=flat-square\n[1]: https://nodejs.org/api/documentation.html#documentation_stability_index\n[2]: https://img.shields.io/npm/v/virtual-webtorrent.svg?style=flat-square\n[3]: https://npmjs.org/package/virtual-webtorrent\n[4]: https://img.shields.io/travis/yoshuawuyts/virtual-webtorrent/master.svg?style=flat-square\n[5]: https://travis-ci.org/yoshuawuyts/virtual-webtorrent\n[6]: https://img.shields.io/codecov/c/github/yoshuawuyts/virtual-webtorrent/master.svg?style=flat-square\n[7]: https://codecov.io/github/yoshuawuyts/virtual-webtorrent\n[8]: http://img.shields.io/npm/dm/virtual-webtorrent.svg?style=flat-square\n[9]: https://npmjs.org/package/virtual-webtorrent\n[10]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\n[11]: https://github.com/feross/standard\n","vndb":"# VNDB Reborn\n\nA simple node.js wrapper for VNDB API. Reference: [https://vndb.org/d11](https://vndb.org/d11).\n\n## Installation\n\n```bash\n$ npm install vndb\n```\n\n## Usage\n\n`VNDB` exposes an object that contains only a single function `.start([host], [port])`. This is an asynchronous function that tries to connect to VNDB API.\n\n```js\nconst VNDB = require('vndb');\n\n(async () => {\n  try {\n    const vndb = await VNDB.start();\n    console.log('Connected!');\n  } catch (e) {\n    console.log('Something happened when connecting to VNDB API');\n  }\n})();\n```\n\nYou can pass in host/port optionally. This is not required 99% of the times, unless VNDB changes host/port.\n\n```js\nconst vndb = await VNDB.start('myvndb.com', 1234);\n```\n\nThe start function itself returns an object that contains the socket and 2 convenient methods to interact with it.\n\n* `vndb.write(message)`\n\nWrite a raw message to VNDB API. Specification should follow [https://vndb.org/d11]([https://vndb.org/d11]). This function will add terminator and queue the message accordingly, as one socket can only send/receive one message at a time.\n\n```js\nconst vndb = await VNDB.start();\nconst res0 = await vndb.write('login {\"protocol\":1,\"client\":\"VNDB-Reborn-Tester\",\"clientver\":\"0.0.1\"}');\nconst res1 = await vndb.write('dbstats');\nconst res2 = await vndb.write('get vn basic,anime (id = 17)');\n```\n\n* `vndb.end()`\n\nEnd the socket connection. Can be await-ed if you want to make sure that it really ends.\n\n```js\nconst vndb = await VNDB.start();\nconst res0 = await vndb.write('login {\"protocol\":1,\"client\":\"VNDB-Reborn-Tester\",\"clientver\":\"0.0.1\"}');\nawait vndb.end();\n```\n\n* `vndb.socket`\n\nThe socket object, an instance of native `tls.TLSSocket`.\n\n## Debugging\n\n[debug module](https://www.npmjs.com/package/debug) is included and used for debugging purpose, under `vndb` namespace.\n\n```bash\nDEBUG=vndb node index.js\n```\n\n","vue-analytics-fb":"# vue-analytics-fb\n\n[![npm](https://img.shields.io/npm/v/vue-analytics-fb.svg)](https://www.npmjs.com/package/vue-analytics-fb)\n\nA small wrapper around fbq. This package integrates Facebook pixel into your `Vue` app.\n\nThis is originally forked from wemake-services/vue-analytics-facebook-pixel, with the plan to expand it further.\n\n## Installation\n\n```bash\nnpm install vue-analytics-fb\n```\n\nAlso, this library requires installing [Facebook Pixel API](https://developers.facebook.com/docs/ads-for-websites/tag-api/).\n\n## Usage\n\n### Preparations\n\n```javascript\nimport Vue from 'Vue'\nimport VueFacebookPixel from 'vue-analytics-fb'\n\nVue.use(VueFacebookPixel)\n```\n\n### Calling API\n\nTo start using this script you will have to call `init(...)` first.\n\n```javascript\n/**\n * Init facebook tracking pixel\n * @param  {String} appId\n * @param  {object} [data={}]\n */\nVue.analytics.fbq.init('YOUR_FACEBOOK_CODE', {\n  em: 'user@mail.com'\n})\n```\n\nMake sure `init(...)` is called only once.\n\nThen you will have full access to the `event(...)` method.\n\n```javascript\n/**\n * Event tracking\n * @param  {String} name\n * @param  {object} [data={}]\n */\nVue.analytics.fbq.event('ViewContent', {\n  content_name: 'Really Fast Running Shoes'\n})\n```\n\n#### Inside component\n\nAll `component` instances can call `this.$analytics.fbq`\n\n## Naming convention\n\nAll `vue-analytics-*` share the same `analytics` object, where all the providers are stored.\n\n## Facebook script\n\n[Facebook Pixel API](https://developers.facebook.com/docs/ads-for-websites/tag-api/) is required to be installed. You can skip the default `window.fbq('init', 'KEY')` part and use `Vue.analytics.fbq.init(...)` which will do the same.\n","vue-for-echarts":"## vue-for-echarts\r\nä¸ä¸ªç¨äºç®åå¨ Vue ä¸­ä½¿ç¨ echarts çåºã\r\n\r\n### å®è£\r\n```js\r\nnpm install -D vue-for-echarts\r\n```\r\n\r\n### ä½¿ç¨\r\n```html\r\n<template>\r\n  <!-- ä¸ç»©èµ°å¿å¾ -->\r\n  <vue-for-echarts\r\n    width='100%'\r\n    height=\"400px\"\r\n    :options=\"options\"\r\n    ref=\"accountPerformanceLine\"\r\n  ></vue-for-echarts>\r\n</template>\r\n\r\n<script>\r\n  import 'echarts/lib/chart/line';\r\n\r\n  export default {\r\n    ...,\r\n    data () {\r\n      return {\r\n        options: {\r\n          ...\r\n        },\r\n      };\r\n    },\r\n    mounted () {\r\n      this.$refs.accountPerformanceLine.render();\r\n    },\r\n  };\r\n</script>\r\n```\r\n\r\n### éç½®\r\n#### props\r\n```js\r\n// å¾è¡¨å®¹å¨å®½åº¦\r\nwidth: {\r\n  type: String,\r\n  required: true,\r\n},\r\n// å¾è¡¨å®¹å¨é«åº¦\r\nheight: {\r\n  type: String,\r\n  required: true,\r\n},\r\n// å¾è¡¨å®¹å¨ IDï¼å¯éï¼\r\nid: {\r\n  type: String,\r\n},\r\n// echarts å¾è¡¨å·ä½éç½®é¡¹åæ°æ®\r\noptions: {\r\n  type: Object,\r\n  required: true,\r\n},\r\n// æ¯å¦å¨ç»ä»¶æè½½æ¶ç«å³æ¸²æ\r\nrenderOnMounted: {\r\n  type: Boolean,\r\n  default: true,\r\n},\r\n// æ¯å¦èªå¨ resize\r\nautoResize: {\r\n  type: Boolean,\r\n  default: true,\r\n},\r\n```\r\n\r\n#### methods\r\n##### render (options)\r\n\r\næ¸²æå½æ°ï¼ç¸å½äºéæ° `setOption`\r\n\r\n`options` å¯éï¼ç¨äºè¦çåæ echarts ç options éç½®é¡¹ã\r\n\r\n\r\n### çæ¬æ´æ°\r\n\r\n- 0.0.1\r\n  ç¬¬ä¸ä¸ªçæ¬åå¸","vue-hash-router":"# vue-hash-router\nSweet tiny Vue hash router\n","vue-headroom":"# vue-headroom [![npm package](https://img.shields.io/npm/v/vue-headroom.svg)](https://www.npmjs.com/package/vue-headroom)\n\n> Headroom for Vuejs.\n\n# Requirements\n\n- [Vue.js](https://github.com/vuejs/vue) `^2.0.0`\n\n# Installation\n\n``` bash\n$ npm install vue-headroom\n```\n\n# Docs & Demo\n\n[https://dalphyx.github.io/vue-headroom/](https://dalphyx.github.io/vue-headroom/)\n\n# Usage\n``` html\n<template>\n  <headroom>\n    <header>\n      Put your head code here...\n    </header>\n  </headroom>\n</template>\n\n<script>\nimport headroom from 'vue-headroom'\n\nVue.use(headroom)\n\n// or\nimport { headroom } from 'vue-headroom'\n\nexport default {\n  components: {\n    headroom\n  }\n}\n</script>\n```\n\n# Props\n\n`speed`\n\nTransition speed, in ms. Default: `350`\n\n`easing`\n\nTransition function. Default: `ease-in-out`\n\n`disabled`\n\nDisable the headroom. Default: false\n\n`upTolerance`\n\nScroll tolerance when scrolling up before component is pinned, in px. Default: `5`\n\n`downTolerance`\n\nScroll tolerance when scrolling down before component is pinned, in px. Default: `0`\n\n`scroller`\n\nElement to listen to scroll events on. Default: () => `window`\n\n`classes`\n\nCss classes to apply. Default:\n```html\n{\n  // when element is initialised\n  initial : \"headroom\",\n  // when scrolling up\n  pinned : \"headroom--pinned\",\n  // when scrolling down\n  unpinned : \"headroom--unpinned\",\n  // when above offset\n  top : \"headroom--top\",\n  // when below offset\n  notTop : \"headroom--not-top\",\n  // when at bottom of scoll area\n  bottom : \"headroom--bottom\",\n  // when not at bottom of scroll area\n  notBottom : \"headroom--not-bottom\"\n}\n```\n\n`offset`\n\nHeight in px where the header should start and stop pinning. Default: `0`\n\n`zIndex`\n\nThe z-index of component. Default: `9999`\n\n`footroom`\n\nSame behaviour but as a footer instead. Default: `false`\n\n# Events\n\n`pin`\n\nCallback when header is pinned.\n\n`unpin`\n\nCallback when header is unpinned.\n\n`unfix`\n\nCallback when header is unfixed.\n\n`top`\n\nCallback when above offset.\n\n`not-top`\n\nCallback when below offset.\n\n`bottom`\n\nCallback when at bottom of page.\n\n`not-bottom`\n\nCallback when moving away from bottom of page.\n\n# License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n","vue-huonu-plugin":"# vueplugin\n\n> A Vue.js plugin\n\n## Build Setup\n\n``` bash\n# install dependencies\nä¾èµelement-ui\nnpm install\nç¶ç»ä»¶ä¼ éæ°æ® query   è·¯ç±æºå¸¦è¿æ¥çåæ°\nç¶ç»ä»¶æ¥ 2 æ¶ä¸ªåæ° launchPeriod.item => item / launchArea.item => item \n                  launchPeriod.itemListStr => data.itemStr /  launchArea.itemListStr => data.itemStr\n                  form.launchPeriodList  => data.launchPeriodList\n                  form.launchAreaList  => data.launchAreaList\n                  \n\n\nä½¿ç¨\n<mx-duration @sendDurationItem='getDurationItem' @launchPeriodList='getLaunchPeriodList'></mx-duration>\n            getDurationItem(item) {\n                  launchPeriod.item = item\n            },\n             getLaunchPeriodList(data){\n                  launchPeriod.itemListStr = data.itemStr\n                  form.launchPeriodList  => data.launchPeriodList\n             },\n             \n<mx-area @sendAreaItem='getAreaItem' @launchAreaList='getAreaList'></mx-area>\n             getAreaItem(item) {\n                         launchArea.item = item    \n                         },\n             getAreaList(data){\n                            \n                         }\nå¨ç»ä»¶ä¸ä¼ ä¸ä¸ªæ¹æ³ \n transformPeriod     å°æ°æ®è½¬æ¢ææ³è¦çæ ¼å¼ ,\n changeTemplateName  ä¿®æ¹æ¨¡æ¿åå­ ,\n saveTemplate        ä¿å­æ¨¡æ¿\n\n# serve with hot reload at localhost:8080\nnpm run dev\n\n# build for production with minification\nnpm run build\n```\n\nFor detailed explanation on how things work, consult the [docs for vue-loader](http://vuejs.github.io/vue-loader).\n","vue-network-status":"# vue-network-status\n\nThis library provides two VueJS components:\n\n**OnlineStatus**: Shows an icon with tooltip representing if the client is currently online or\noffline.\n\n**NetworkInfo**: Shows metrics about the internet connection using the\n[browser Network Information API](https://developer.mozilla.org/en-US/docs/Web/API/Network_Information_API).\nCurrently browser support is limited. I found that\n[Chrome for Android](https://play.google.com/store/apps/details?id=com.android.chrome) works best.\n\n\n## Installation\n```\nnpm i --save vue-network-status\n```\n\n## Usage\n\nImport the desired components\n``` javascript\nimport {NetworkInfo, OnlineStatus} from 'vue-network-status';\n```\n\nRegister them in your component\n``` javascript\nexport default {\n  name: 'app',\n  components: {\n    NetworkInfo,\n    OnlineStatus,\n    HelloWorld,\n  },\n};\n```\n\nAdd them in your html section\n``` html\n<NetworkInfo/>\n<OnlineStatus/>\n```\n\nMore example code can be found in [App.vue](/src/App.vue)\n\n## Development & Demo\n\n### Project setup\n```\nnpm install\n```\n\n#### Compiles and hot-reloads for development\n```\nnpm run serve\n```\n\n#### Compiles and minifies for production\n```\nnpm run build\n```\n\n#### Run your tests\n```\nnpm run test\n```\n\n#### Lints and fixes files\n```\nnpm run lint\n```\n","vue-phone-number-input-countrylist":"# vue-phone-number-input\n\n> A beautiful text field to format phone numbers made with VueJS\n\n![vue-phone-number-input](./public/vue-phone-number-input-demo.gif)\n\n## Demo\n\n[Enjoy](https://louismazel.github.io/vue-phone-number-input/)\n\n## Installation\n\n### Using yarn\n\n`yarn add vue-phone-number-input`\n\n### Using npm\n\n`npm i --save vue-phone-number-input`\n\n## Usage\n\n### ES6 Modules / CommonJS\n\n```js\nimport VuePhoneNumberInput from 'vue-phone-number-input';\nimport 'vue-phone-number-input/dist/vue-phone-number-input.css';\n\nVue.component('vue-phone-number-input', VuePhoneNumberInput);\n```\n\n```html\n<VuePhoneNumberInput v-model=\"yourValue\" />\n```\n\n### UMD\n\n```html\n<VuePhoneNumberInput v-model=\"yourValue\" />\n\n<script src=\"https://unpkg.com/vue\" charset=\"utf-8\"></script>\n<script src=\"./dist/vue-phone-number-input.umd.min.js\" charset=\"utf-8\"></script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"./dist/vue-phone-number-input.css\">\n\n<script type=\"text/javascript\">\n  Vue.component('vue-phone-number-input', window.VuePhoneNumberInput.default);\n</script>\n```\n\n## Features List\n\n- You can set `preferred-countries`, `ignored-countries` or have `only-countries`\n- Validator State : input becomes green (you can modify this color with `valid-color` option) when the phone number is valid (can be disabled by `no-validator-state` attr)\n- Use browser locale to set the country calling code (can be disabled & you can use `default-country-code` option)\n- Phone number formatting while typing\n- You can search your country in list (open countries list & type your country name)\n- Keyboard accessibility (Arrow down, Arrow up : Countries list navigation -  Escape : Close countries list)\n- Phone number example for each country in placeholder/label\n- Auto focus phone number input after selecting country\n- You can disable the flags - `no-flags` props\n- Set your translations\n\n### All options of [VueInputUi](https://github.com/LouisMazel/vue-input-ui) are availables\n\n- Differents size of input (sm or lg) `size=\"sm|lg\"`\n- Disabled option (`disabled` prop)\n- Dark UI option (`dark` prop)\n- Active a clear button by the prop `clearable` (cf: [VueInputUi options](https://github.com/LouisMazel/vue-input-ui#props-api))\n- Active a loader progress bar by the prop `loader`  (cf: [VueInputUi options](https://github.com/LouisMazel/vue-input-ui#props-api))\n- And others\n`\n\n## Props API\n\n| Props      | Type       | Required | Default    |\n|------------|------------|----------|------------|\n| v-model    | String/Int | true     | -          |\n| id      | String     | false    | VuePhoneNumberInput |\n| color | String `HEX`   | no       | dogderblue      |\n| valid-color | String `HEX`   | no       | yellowgreen      |\n| size | String `sm|lg`   | no       | null      |\n| country-list | Array | no | phoneCodeCountries.js |\n| default-country-code (1) | String    | no       | null      |\n| preferred-countries (2) | Array`<string>`    | no       | null      |\n| ignored-countries | Array`<string>`    | no       | null      |\n| only-countries | Array`<string>`    | no       | null      |\n| no-validator-state | Boolean    | no       | false      |\n| no-use-browser-locale | Boolean    | no       | false      |\n| no-flags | Boolean    | no       | false      |\n| disabled | Boolean    | no       | false      |\n| dark | Boolean    | no       | false      |\n| required | Boolean    | no       | false      |\n| error | Boolean    | no       | false      |\n| clearable | Boolean    | no       | false      |\n| loader (3) | Boolean    | no       | false      |\n| translations (4) | Object    | no       | null      |\n\n(1) Ex : `default-country-code=\"FR\"`\n\n(2) Ex : `preferred-countries=\"['FR', 'BE', 'DE']\"` This countries will be at the top of the list\n\n(3) Loader progress bar has the input color (`color` props)\n\n(4) translations comes to replace default texts - Ex :\n\n```html\ntranslations=\"{\n  countrySelectorLabel: 'Code pays',\n  countrySelectorError: 'Choisir un pays',\n  phoneNumberLabel: 'NumÃ©ro de tÃ©lÃ©phone',\n  example: 'Exemple :'\n}\"\n```\n\n## Events API\n\n| Event      | Return       |\n|------------|------------|\n| phone-number-focused    | `-` (emit when phone number input is focused) |\n| phone-number-blur    | `-` (emit when phone number input is blur) |\n| input    | [AsYouType value](https://github.com/catamphetamine/libphonenumber-js#as-you-type-formatter) (emit when new value is enter on phone number input && when a country is choosed) |\n| update    | All values (cf values in table on [demo](https://louismazel.github.io/vue-phone-number-input/)) (emit when new value is enter on phone number input && when a country is choosed) |\n\n## Keyboard accessibility\n\n| Props      | Action       |\n|------------|------------|\n| ArrowDown    | Navigation down in countries list |\n| ArrowUp    | Navigation up in countries list |\n| Escape    | Close countries list |\n| All letters characters    | Searching country name in countries list (should be open) |\n\n## Contribution\n\n### Project setup\n\n```bash\nnpm install\n```\n\n### Compiles and hot-reloads for development\n\n```bash\nnpm run serve\n```\n\n### Lints and fixes files\n\n```bash\nnpm run lint\n```\n\n## License\n\nThis project is licensed under [MIT License](http://en.wikipedia.org/wiki/MIT_License)\n","vue-photo-carousel-preview":"# Vue preview plugin\r\n\r\n> ä¸ä¸ªVueéæ[PhotoSwipe](https://github.com/dimsemenov/PhotoSwipe)å¾çé¢è§æä»¶\r\n\r\n>æ³¨æï¼æ­¤æä»¶æä¾åºäºvueçå¾çé¢è§åè½\r\n\r\n>author ï¼ tree_zhengyuming\r\n>email ï¼18718922627@163.com\r\n\r\n![](https://img.shields.io/npm/dm/vue2-preview.svg)\r\n![](https://img.shields.io/npm/v/vue2-preview.svg)\r\n\r\n## Requirements\r\n\r\n[PhotoSwipe](https://github.com/dimsemenov/PhotoSwipe)\r\n\r\n## Based on\r\n\r\n[vue-preview](https://github.com/LS1231/vue-preview)\r\n\r\n## Installation\r\n\r\n``` bash\r\nnpm install vue-photo-carousel-preview -S\r\n```\r\n\r\n## Usage\r\n\r\nä½¿ç¨é¡»ç¥ï¼\r\n\r\n* æä»¶ç®åä»æ¯ævue2.0ä»¥ä¸çæ¬\r\n* imgæ ç­¾ä¸çclassä¸è½å»æ\r\n\r\nå¦æä½ æ¯ä½¿ç¨vue-cliçæçé¡¹ç®ï¼ä½ éè¦ä¿®æ¹`webpack.base.conf.js`æä»¶ä¸­çloadersï¼æ·»å ä¸ä¸ªloaderã\r\nåå ï¼æä»¶ç¼åä¸­ä½¿ç¨äºes6çè¯­æ³ï¼éè¦è¿è¡ä»£ç ç¼è¯\r\n``` javascript\r\n{\r\n    test: /vue-preview.src.*?js$/,\r\n    loader: 'babel'\r\n}\r\n```\r\n\r\n### Install plugin\r\n\r\n``` javascript\r\nimport vuePhotoCarouselPreview from 'vue-photo-carousel-preview'\r\nVue.use(vuePhotoCarouselPreview)\r\n```\r\n\r\n### Examples\r\n\r\n```\r\n<template>\r\n  <img class=\"preview-img\" v-for=\"(item, index) in list\" :src=\"item.src\" height=\"100\" @click=\"$preview.open(index, list)\">\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data () {\r\n      return {\r\n        list: [{\r\n          src: 'https://placekitten.com/600/400',\r\n          w: 600,\r\n          h: 400\r\n        }, {\r\n          src: 'https://placekitten.com/1200/900',\r\n          w: 1200,\r\n          h: 900\r\n        }]\r\n      }\r\n    }\r\n  }\r\n</script>\r\n```\r\n\r\n### Mothods\r\n\r\næä»¶æä¾ä»¥ä¸ä¸¤ä¸ªæ¹æ³,```vm```ä»£è¡¨ç»ä»¶å®ä¾\r\n\r\n#### vm.$preview.open(index, list, options)\r\n\r\nåæ°è¯´æï¼\r\n\r\n| åæ°  | è¯´æ  |  ç±»å  |  å¿é\r\n| :--: | :--: | :--:  | :--:\r\n| index     |å½åå¾ççç´¢å¼å¼|   Number |    æ¯\r\n| list      |å¾çåè¡¨       |   Array  |    æ¯\r\n\r\n#### vm.$preview.close()\r\n\r\n\r\n## License\r\n\r\n![](https://img.shields.io/badge/license-MIT-blue.svg)","vue-simple-uploader":"# vue-simple-uploader  [![NPM Version][npm-image]][npm-url] [![NPM Downloads][downloads-image]][downloads-url] [![juejin likes][juejin-image]](juejin-url)\n\n> A Vue.js upload component powered by [simple-uploader.js](https://github.com/simple-uploader/Uploader)\n\n![example](https://github.com/simple-uploader/vue-uploader/blob/master/example/simple-uploader.gif)\n\n![QQ](https://github.com/simple-uploader/Uploader/blob/develop/assets/simple-uploader-QQ-2.png?raw=true)\n\n[ä¸­æ](./README_zh-CN.md)\n\n## Features\n\n* Treat Folder and File as `File`\n* Pause/Resume upload\n* Recover upload\n* Error handling\n* Drag and Drop with folder reader\n* Custom upload buttons\n* Folder Upload\n* Queue management\n* File validation\n* Upload progress\n* Time remaining\n* Chunk uploads\n\n## Install\n\n``` bash\nnpm install vue-simple-uploader --save\n```\n\n## Notes\n\n- https://www.cnblogs.com/xiahj/p/vue-simple-uploader.html\n- https://github.com/LuoLiangDSGA/spring-learning/tree/master/boot-uploader\n\n## Usage\n\n### init\n\n``` js\nimport Vue from 'vue'\nimport uploader from 'vue-simple-uploader'\nimport App from './App.vue'\n\nVue.use(uploader)\n\n/* eslint-disable no-new */\nnew Vue({\n  render(createElement) {\n    return createElement(App)\n  }\n}).$mount('#app')\n```\n\n### App.vue\n\n``` vue\n<template>\n  <uploader :options=\"options\" class=\"uploader-example\">\n    <uploader-unsupport></uploader-unsupport>\n    <uploader-drop>\n      <p>Drop files here to upload or</p>\n      <uploader-btn>select files</uploader-btn>\n      <uploader-btn :attrs=\"attrs\">select images</uploader-btn>\n      <uploader-btn :directory=\"true\">select folder</uploader-btn>\n    </uploader-drop>\n    <uploader-list></uploader-list>\n  </uploader>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        options: {\n          // https://github.com/simple-uploader/Uploader/tree/develop/samples/Node.js\n          target: '//localhost:3000/upload',\n          testChunks: false\n        },\n        attrs: {\n          accept: 'image/*'\n        }\n      }\n    }\n  }\n</script>\n\n<style>\n  .uploader-example {\n    width: 880px;\n    padding: 15px;\n    margin: 40px auto 0;\n    font-size: 12px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, .4);\n  }\n  .uploader-example .uploader-btn {\n    margin-right: 4px;\n  }\n  .uploader-example .uploader-list {\n    max-height: 440px;\n    overflow: auto;\n    overflow-x: hidden;\n    overflow-y: auto;\n  }\n</style>\n```\n\n## Components\n\n### Uploader\n\nRoot component.\n\n#### Props\n\n* `options {Object}`\n\n  See [simple-uploader.js options](https://github.com/simple-uploader/Uploader#configuration).\n\n  Besides, some other options are avaliable too:\n\n  - `parseTimeRemaining(timeRemaining, parsedTimeRemaining) {Function}`\n\n    this function option to format the current file's time remaining value(seconds, number), you can return your language time remaining text, params:\n\n    - `timeRemaining{Number}`, time remaining seconds\n\n    - `parsedTimeRemaining{String}`, default shown time remaining text, you can use it like this:\n\n      ```js\n      parseTimeRemaining: function (timeRemaining, parsedTimeRemaining) {\n        return parsedTimeRemaining\n          .replace(/\\syears?/, 'å¹´')\n          .replace(/\\days?/, 'å¤©')\n          .replace(/\\shours?/, 'å°æ¶')\n          .replace(/\\sminutes?/, 'åé')\n          .replace(/\\sseconds?/, 'ç§')\n      }\n      ```\n  - `categoryMap {Object}`\n\n    File category map, default:\n\n    ```js\n    {\n      image: ['gif', 'jpg', 'jpeg', 'png', 'bmp', 'webp'],\n      video: ['mp4', 'm3u8', 'rmvb', 'avi', 'swf', '3gp', 'mkv', 'flv'],\n      audio: ['mp3', 'wav', 'wma', 'ogg', 'aac', 'flac'],\n      document: ['doc', 'txt', 'docx', 'pages', 'epub', 'pdf', 'numbers', 'csv', 'xls', 'xlsx', 'keynote', 'ppt', 'pptx']\n    }\n    ```\n\n* `autoStart {Boolean}`\n\n  Default `true`, Whether the file will be start uploading after it is added.\n\n* `fileStatusText {Object}`\n\n  Default:\n  ```js\n  {\n    success: 'success',\n    error: 'error',\n    uploading: 'uploading',\n    paused: 'paused',\n    waiting: 'waiting'\n  }\n  ```\n  An object map for file status text.\n\n  After 0.6.0, `fileStatusText` can be a function with params `(status, response = null)`, you can control the status text more flexible:\n\n  ```js\n  fileStatusText(status, response) {\n    const statusTextMap = {\n      uploading: 'uploading',\n      paused: 'paused',\n      waiting: 'waiting'\n    }\n    if (status === 'success' || status === 'error') {\n      // only use response when status is success or error\n\n      // eg:\n      // return response data ?\n      return response.data\n    } else {\n      return statusTextMap[status]\n    }\n  }\n  ```\n\n#### Events\n\nSee [simple-uploader.js uploader/events](https://github.com/simple-uploader/Uploader#events)\n\n**Note:**\n\n* All events name will be transformed by [lodash.kebabCase](https://github.com/lodash/lodash/blob/master/kebabCase.js), eg: `fileSuccess` will be transformed to `file-success`\n\n* `catchAll` event will not be emited.\n\n* `file-added(file)`, file added event, this event is used for file validation. To reject this file you should set `file.ignored = true`.\n\n* `files-added(files, fileList)`, files added event, this event is used for files validation. To reject these files you should set `files.ignored = true` or `fileList.ignored = true`.\n\n#### Scoped Slots\n\n* `files {Array}`\n\n  An array of files (no folders).\n\n* `fileList {Array}`\n\n  An array of files and folders.\n\n* `started`\n\n  Started uploading or not.\n\n#### Get `Uploader` instance\n\nYou can get it like this:\n\n```js\nconst uploaderInstance = this.$refs.uploader.uploader\n// now you can call all uploader methods\n// https://github.com/simple-uploader/Uploader#methods\nuploaderInstance.cancel()\n```\n\n### UploaderBtn\n\nSelect files button.\n\n#### Props\n\n* `directory {Boolean}`\n\n  Default `false`, Support selecting Folder\n\n* `single {Boolean}`\n\n  Default `false`, To prevent multiple file uploads if it is `true`.\n\n* `attrs {Object}`\n\n  Default `{}`, Pass object to set custom attributes on input element.\n\n### UploaderDrop\n\nDroped files area.\n\n### UploaderList\n\nAn array of `Uploader.File` file(folder) objects added by the user, but it treated Folder as `Uploader.File` Object.\n\n#### Scoped Slots\n\n* `fileList {Array}`\n\n  An array of files and folders.\n\n### UploaderFiles\n\nAn array of `Uploader.File` file objects added by the user.\n\n#### Scoped Slots\n\n* `files {Array}`\n\n  An array of files (no folders).\n\n### UploaderUnsupport\n\nIt will be shown if the current browser do not support HTML5 File API.\n\n### UploaderFile\n\nFile item component.\n\n#### Props\n\n* `file {Uploader.File}`\n\n  `Uploader.File` instance.\n\n* `list {Boolean}`\n\n  It should be `true` if it is puted in `UploaderList`\n\n#### Scoped Slots\n\n* `file {Uploader.File}`\n\n  `Uploader.File` instance.\n\n* `list {Boolean}`\n\n  In `UploaderList` component or not.\n\n* `status {String}`\n\n  Current status, the values is one of `success`, `error`, `uploading`, `paused`, `waiting`\n\n* `paused {Boolean}`\n\n  Indicated if the file is paused.\n\n* `error {Boolean}`\n\n  Indicated if the file has encountered an error.\n\n* `averageSpeed {Number}`\n\n  Average upload speed, bytes per second.\n\n* `formatedAverageSpeed {String}`\n\n  Formated average upload speed, eg: `3 KB / S`\n\n* `currentSpeed {Number}`\n\n  Current upload speed, bytes per second.\n\n* `isComplete {Boolean}`\n\n  Indicated whether the file has completed uploading and received a server response.\n\n* `isUploading {Boolean}`\n\n  Indicated whether file chunks is uploading.\n\n* `size {Number}`\n\n  Size in bytes of the file.\n\n* `formatedSize {Number}`\n\n  Formated file size, eg: `10 KB`.\n\n* `uploadedSize {Number}`\n\n  Size uploaded in bytes.\n\n* `progress {Number}`\n\n  A number between 0 and 1 indicating the current upload progress of the file.\n\n* `progressStyle {String}`\n\n  The file progress element's transform style, eg: `{transform: '-50%'}`.\n\n* `progressingClass {String}`\n\n  The value will be `uploader-file-progressing` if the file is uploading.\n\n* `timeRemaining {Number}`\n\n  Remaining time to finish upload file in seconds.\n\n* `formatedTimeRemaining {String}`\n\n  Formated remaining time, eg: `3 miniutes`.\n\n* `type {String}`\n\n  File type.\n\n* `extension {String}`\n\n  File extension in lowercase.\n\n* `fileCategory {String}`\n\n  File category, one of `folder`, `document`, `video`, `audio`, `image`, `unknown`.\n\n## Development\n\n``` bash\n# install dependencies\nnpm install\n\n# serve with hot reload at localhost:8080\nnpm run dev\n\n# build for production with minification\nnpm run build\n\n# build for production and view the bundle analyzer report\nnpm run build --report\n```\n\n[npm-image]: https://img.shields.io/npm/v/vue-simple-uploader.svg?style=flat\n[npm-url]: https://npmjs.org/package/vue-simple-uploader\n[downloads-image]: https://img.shields.io/npm/dm/vue-simple-uploader.svg?style=flat\n[downloads-url]: https://npmjs.org/package/vue-simple-uploader\n[juejin-image]: https://badge.juejin.im/entry/599dad0ff265da248b04d7b8/likes.svg?style=flat\n[juejin-url]: https://juejin.im/entry/599dad0ff265da248b04d7b8/detail\n","vuexp-fonticon":"# VueXP Fonticon\n\nUse custom font icon collections seamlessly with VueXP.\n\n## Install the vuexp-fonticon plugin\n\n```\nnpm install vuexp-fonticon --save\n```\n\n## Add CSS\n\nImport your fonticon's font files (normally a .ttf, TrueType Font) into fonts. FontAwesome, for example, has a font file called fontawesome-webfont.ttf.\n\nAdd a line to styles.scss to set the fonticon's base class:\n\n```\n@font-face {\n  font-family: \"FontAwesome\";\n  font-weight: normal;\n  font-style: normal;\n  src: url(\"/fonts/fontawesome-webfont.ttf\");\n}\n\n.fa {\n  font-family: FontAwesome, fontawesome-webfont;\n}\n\n.ion {\n  font-family: Ionicons, ionicons;\n}\n```\n\n## Initialize the plugin\n\nIn main.js, add the following snippet:\n\n```\nimport VxpFontIcon from \"vuexp-fonticon\";\n\nconst FontIcons = {\n  paths: {\n    fa: \"./assets/styles/font-awesome.css\",\n    ion: \"./assets/styles/ionicons.css\"\n  }\n};\n\nVue.use(VxpFontIcon, FontIcons);\n```\n\n## Use the fonticons\n\n```\n<VxpLabel class=\"fa\" :text=\"'fa-eye' | fonticon\" />\n```\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details\n","watchpush":"# WatchPush\nIt is a package that ease the development process on IaaS. With this package you can automatically rebuild and restart your application as you push changes to your github repository.\n\n## Install/Run\n```python\nnpm install -g watchpush #installation\nwatchpull #run application\n```\n> **NOTE:** This package need to be installed **globally**\n\n## Configuration\n`watchpush.json` file is required in the root directory of your application\nIt contains following configurations\n``` javascript\n{\n    \"name\": \"Name of your project\",\n    \"hook_port\":4000, // Port at which webhook sends request\n    \"secret\":\"Secret token registered at github webhook\",\n    \"preProcesses\":[ // Processes that need to run before starting app\n        \"git pull\",\n        \"install module\"\n    ],\n    \"runScript\":\"Final command that lifts/run/start your application\"\n}\n```\nStart your app by running `watchpull` command in cli at root directory of your application from where all the above commands need to run\n\n#### Setup webhook\n* You need to add a webhook in your repository setting to listen to push event\n* Create a new webhook with following settings:\n    * **Payload URL**: `YourHostAdd:hook_port` \n        * eg http://192.23.34.5:5000, if your machine's external ip address is 192.23.34.5 and 5000 is configured as hook_port in watchpush.json\n    * **Content type:** `application/json`\n    * **Secret:** Token that is configured in watchpush.json\n    * Check ***Just the push event***. \n\nFor more infromation refer: https://developer.github.com/webhooks/\n\n#### Note\n* hook_port is different from the port your app might be listening.\n* Make sure hook_port configured in watchpush.json is publically accessible.\n* Get request on `YourHostAdd:hook_port` should return \n    > Listening to push events on port *'hook_port'*\n* Package currently support only **application/json**, so make sure same is configured on github webhook\n* Since it need to automatically pull repository use\n`git config credential.helper store` and do a manuall pull/push\nto let git remember your credentials for future requests\n\n## Examples\n### For a node app\n``` javascript\n{\n    \"name\": \"Simple node project\",\n    \"hook_port\":4000,\n    \"secret\":\"qwerty\",\n    \"preProcesses\":[\n        \"git pull origin master\",\n        \"npm install\"\n    ],\n    \"runScript\":\"node index.js\"\n}\n```\n\n### For a react app\n``` javascript\n{\n    \"name\": \"Simple react project\",\n    \"hook_port\":4000,\n    \"secret\":\"qwerty\",\n    \"preProcesses\":[\n        \"git pull origin master\",\n        \"npm install\",\n        \"npm run build\"\n    ],\n    \"runScript\":\"serve ./public\"\n}\n```\n\n### For a python app\n``` javascript\n{\n    \"name\": \"Simple python project\",\n    \"hook_port\":4000,\n    \"secret\":\"qwerty\",\n    \"preProcesses\":[\n        \"git pull origin master\",\n        \"pip install -r requirements.txt\"\n    ],\n    \"runScript\":\"python app.py\"\n}\n```","wd-check":"wd-check\n====\n\nCheck that a group of conditions are all met within a browser.\n\nA convenience wrapper around <https://www.npmjs.org/package/wd>, useful for when you need to check that certain objects are loading, or certain elements are being populated.\n\nExample\n----\n\n```\nvar wd = require('wd');\nvar check = require('wd-check');\n\n// create a new browser instance\nvar browser = wd.remote();\nbrowser.init({ browserName: 'chrome' }, function (err) {\n    if (err) { throw err; }\n\n    // Define a list of things to check.\n    // Checks happen in series so do the quick things first.\n    var things = [];\n    things.push({\n        title: 'Stream is populated',\n        condition: 'document.querySelectorAll(\"section.stream article\").length > 0',\n        timeout: 500,\n        freq: 100\n    });\n\n    things.push({\n        title: 'Twitter object is ready',\n        condition: 'typeof window.twttr.widgets.load === \"function\"',\n        timeout: 2000,\n        freq: 100\n    });\n\n    var url = 'http://x-team.com';\n\n    check(browser, url, things, function (err, res) {\n        if (err) {\n            console.error(err);\n        }\n        else {\n            console.log('ok');\n        }\n\n        browser.quit(function () {});\n    });\n});\n```\n\nBackstory\n----\n\nThis was originally used for automated testing of a video player integration that was being refactored. When video playback succesfully begins we see advertisements populated on the page. So by checking the contents of ad elements we have an easy indirect way to prove playback has commenced.\n","wdjf-file-loader":"[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n  <h1>File Loader</h1>\n  <p>Instructs webpack to emit the required object as file and to return its public URL</p>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm install --save-dev file-loader\n```\n\n<h2 align=\"center\"><a href=\"https://webpack.js.org/concepts/loaders\">Usage</a></h2>\n\nBy default the filename of the resulting file is the MD5 hash of the file's contents with the original extension of the required resource.\n\n```js\nimport img from './file.png'\n```\n\n**webpack.config.js**\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {}  \n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\nEmits `file.png` as file in the output directory and returns the public URL\n\n```\n\"/public/path/0dcbbaa7013869e351f.png\"\n```\n\n<h2 align=\"center\">Options</h2>\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|**`name`**|`{String\\|Function}`|`[hash].[ext]`|Configure a custom filename template for your file|\n|**`regExp`**|`{RegExp}`|`'undefined'`|Let you extract some parts of the file path to reuse them in the `name` property|\n|**`context`**|`{String}`|`this.options.context`|Configure a custom file context, defaults to `webpack.config.js` [context](https://webpack.js.org/configuration/entry-context/#context)|\n|**`publicPath`**|`{String\\|Function}`|[`__webpack_public_path__ `](https://webpack.js.org/api/module-variables/#__webpack_public_path__-webpack-specific-)|Configure a custom `public` path for your file|\n|**`outputPath`**|`{String\\|Function}`|`'undefined'`|Configure a custom `output` path for your file|\n|**`useRelativePath`**|`{Boolean}`|`false`|Should be `true` if you wish to generate a `context` relative URL for each file|\n|**`emitFile`**|`{Boolean}`|`true`|By default a file is emitted, however this can be disabled if required (e.g. for server side packages)|\n\n### `name`\n\nYou can configure a custom filename template for your file using the query parameter `name`. For instance, to copy a file from your `context` directory into the output directory retaining the full directory structure, you might use\n\n#### `{String}`\n\n**webpack.config.js**\n```js\n{\n  loader: 'file-loader',\n  options: {\n    name: '[path][name].[ext]'\n  }  \n}\n```\n\n#### `{Function}`\n\n**webpack.config.js**\n```js\n{\n  loader: 'file-loader',\n  options: {\n    name (file) {\n      if (env === 'development') {\n        return '[path][name].[ext]'\n      }\n\n      return '[hash].[ext]'\n    }\n  }  \n}\n```\n\n### `regExp`\n\nDefines a `regExp` to match some parts of the file path. These capture groups can be reused in the `name` property using `[N]` placeholder. Note that `[0]` will be replaced by the entire tested string, whereas `[1]` will contain the first capturing parenthesis of your regex and so on...\n\n```js\nimport img from './customer01/file.png'\n```\n\n**webpack.config.js**\n```js\n{\n  loader: 'file-loader',\n  options: {\n    regExp: /\\/([a-z0-9]+)\\/[a-z0-9]+\\.png$/,\n    name: '[1]-[name].[ext]'\n  }  \n}\n```\n\n```\ncustomer01-file.png\n```\n\n#### `placeholders`\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|**`[ext]`**|`{String}`|`file.extname`|The extension of the resource|\n|**`[name]`**|`{String}`|`file.basename`|The basename of the resource|\n|**`[path]`**|`{String}`|`file.dirname`|The path of the resource relative to the `context`|\n|**`[hash]`**|`{String}`|`md5`|The hash of the content, hashes below for more info|\n|**`[N]`**|`{String}`|``|The `n-th` match obtained from matching the current file name against the `regExp`|\n\n#### `hashes`\n\n`[<hashType>:hash:<digestType>:<length>]` optionally you can configure\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|**`hashType`**|`{String}`|`md5`|`sha1`, `md5`, `sha256`, `sha512`|\n|**`digestType`**|`{String}`|`hex`|`hex`, `base26`, `base32`, `base36`, `base49`, `base52`, `base58`, `base62`, `base64`|\n|**`length`**|`{Number}`|`9999`|The length in chars|\n\nBy default, the path and name you specify will output the file in that same directory and will also use that same URL path to access the file.\n\n### `context`\n\n**webpack.config.js**\n```js\n{\n  loader: 'file-loader',\n  options: {\n    name: '[path][name].[ext]',\n    context: ''\n  }  \n}\n```\n\nYou can specify custom `output` and `public` paths by using `outputPath`, `publicPath` and `useRelativePath`\n\n### `publicPath`\n\n**webpack.config.js**\n```js\n{\n  loader: 'file-loader',\n  options: {\n    name: '[path][name].[ext]',\n    publicPath: 'assets/'\n  }  \n}\n```\n\n### `outputPath`\n\n**webpack.config.js**\n```js\n{\n  loader: 'file-loader',\n  options: {\n    name: '[path][name].[ext]',\n    outputPath: 'images/'\n  }  \n}\n```\n\n### `useRelativePath`\n\n`useRelativePath` should be `true` if you wish to generate a relative URL to the for each file context.\n\n```js\n{\n  loader: 'file-loader',\n  options: {\n    useRelativePath: process.env.NODE_ENV === \"production\"\n  }\n}\n```\n\n### `emitFile`\n\nBy default a file is emitted, however this can be disabled if required (e.g. for server side packages).\n\n```js\nimport img from './file.png'\n```\n\n```js\n{\n  loader: 'file-loader',\n  options: {\n    emitFile: false\n  }  \n}\n```\n\n> â ï¸  Returns the public URL but does **not** emit a file\n\n```\n`${publicPath}/0dcbbaa701328e351f.png`\n```\n\n<h2 align=\"center\">Examples</h2>\n\n\n```js\nimport png from 'image.png'\n```\n\n**webpack.config.js**\n```js\n{\n  loader: 'file-loader',\n  options: {\n    name: 'dirname/[hash].[ext]'\n  }  \n}\n```\n\n```\ndirname/0dcbbaa701328ae351f.png\n```\n\n**webpack.config.js**\n```js\n{\n  loader: 'file-loader',\n  options: {\n    name: '[sha512:hash:base64:7].[ext]'\n  }  \n}\n```\n\n```\ngdyb21L.png\n```\n\n```js\nimport png from 'path/to/file.png'\n```\n\n**webpack.config.js**\n```js\n{\n  loader: 'file-loader',\n  options: {\n    name: '[path][name].[ext]?[hash]'\n  }  \n}\n```\n\n```\npath/to/file.png?e43b20c069c4a01867c31e98cbce33c9\n```\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <a href=\"https://github.com/bebraw\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/bebraw.png?v=3&s=150\">\n          </br>\n          Juho VepsÃ¤lÃ¤inen\n        </a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/d3viant0ne\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/d3viant0ne.png?v=3&s=150\">\n          </br>\n          Joshua Wiens\n        </a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/michael-ciniawsky\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/michael-ciniawsky.png?v=3&s=150\">\n          </br>\n          Michael Ciniawsky\n        </a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/evilebottnawi\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/evilebottnawi.png?v=3&s=150\">\n          </br>\n          Alexander Krasnoyarov\n        </a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n\n[npm]: https://img.shields.io/npm/v/file-loader.svg\n[npm-url]: https://npmjs.com/package/file-loader\n\n[node]: https://img.shields.io/node/v/file-loader.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/webpack-contrib/file-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/file-loader\n\n[tests]: http://img.shields.io/travis/webpack-contrib/file-loader.svg\n[tests-url]: https://travis-ci.org/webpack-contrib/file-loader\n\n[cover]: https://img.shields.io/codecov/c/github/webpack-contrib/file-loader.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/file-loader\n\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n","weaver-queue":"README.md","webp-middleware":"# WebP Express Middleware\n\nInspired by [a post from Cloudinary](http://cloudinary.com/blog/transparent_webp_format_cdn_delivery_based_on_visitors_browsers), this middleware generates and delivers JPG-, PNG- and TIFF-images on the fly as WebP-images if the requesting client supports that format.\n\nWebP is a new image format from Google that provides lossless and lossy compression for images on the web. For more information please read the [official documentation](https://developers.google.com/speed/webp/) or the article on html5rocks.com about [image compression](http://www.html5rocks.com/en/tutorials/speed/img-compression/).\n\n## Installation\n\n``` bash\nnpm install webp-middleware\n```\n\n## Usage\n\n``` javascript\nvar http = require('http');\nvar express = require('express');\nvar webp = require('webp-middleware');\n\nvar app = express();\n\napp.use(webp(__dirname + '/public', { ... }));\napp.use(express.static(__dirname + '/public'));\n```\n\nIt is important to insert the webp middleware before the express.static middleware.\n\nFirst parameter is the path of the static folder.\n\nSecond parameter is an optional options object.\n\nYou can also have a look into the example folder for examples.\n\n## Options\n\n* ``cacheDir`` is the directory where the webp files are saved. Default is a folder webp-cache in the executing directory (``path.join(process.cwd(), 'webp-cache')``)\n* ``preset`` delegates to the ``-preset`` option at [cwebp]\n* ``quality`` delegates to the ``-q`` option at [cwebp]\n* ``alphaQuality`` delegates to the ``-alpha_q`` option at [cwebp]\n* ``method`` delegates to the ``-m`` option at [cwebp]\n* ``segments`` delegates to the ``-segments`` option at [cwebp]\n* ``bytes`` delegates to the ``-size`` option at [cwebp]\n* ``psnr`` delegates to the ``-psnr`` option at [cwebp]\n* ``size`` delegates to the ``-s`` option at [cwebp]. Should be an object with ``width`` and ``height`` keys\n* ``spatialNoiseShaping`` delegates to the ``-sns`` option at [cwebp]\n* ``filter`` delegates to the ``-f`` option at [cwebp]\n* ``strong`` delegates to the ``-strong`` option at [cwebp]. Should be a boolean value\n* ``noStrong`` delegates to the ``-nostrong`` option at [cwebp]. Should be a boolean value\n* ``partitionLimit`` delegates to the ``-partition_limit`` option at [cwebp]\n* ``pass`` delegates to the ``-pass`` option at [cwebp]\n* ``crop`` delegates to the ``-crop`` option at [cwebp]. Should be an object with ``width``, ``height``, ``x`` and ``y`` keys\n* ``resize`` delegates to the ``-resize`` option at [cwebp]. Should be an object with ``width`` and ``height`` keys\n* ``multiThreading`` delegates to the ``-mt`` option at [cwebp]. Should be a boolean value\n* ``lowMemory`` delegates to the ``-low_memory`` option at [cwebp]. Should be a boolean value\n* ``alphaMethod`` delegates to the ``-alpha_method`` option at [cwebp]\n* ``alphaCleanup`` delegates to the ``-alpha_cleanup`` option at [cwebp]. Should be a boolean value\n* ``noAlpha`` delegates to the ``-noalpha`` option at [cwebp]. Should be a boolean value\n* ``lossless`` delegates to the ``-lossless`` option at [cwebp]. Should be a boolean value\n* ``hint`` delegates to the ``-hint`` option at [cwebp]\n* ``metadata`` delegates to the ``-metadata`` option at [cwebp]\n\n\n## License\n\nLicensed under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n[cwebp]: https://developers.google.com/speed/webp/docs/cwebp","webui-cli":"## Installation\n\n    npm install -g webui-cli\n\n## Commands list\n\nInstall WebUI Boilerplate.\n\n    webui install [version]\n\nCopy engine files.\n\n    webui copy-engine\n\nCopy libraries and build `.requirejsrc`.\n\n    webui copy-libs\n\n## License\n\nThis tool is under the LGPLv3 license. See the complete license in the file:\n\n    LICENSE\n\n","wechat-corp-service-callback":"wechat corp service callback\n=======================================\n\nå¾®ä¿¡å¬å±å¹³å°ä¼ä¸å·ç(ç¬¬ä¸æ¹ä¼ä¸å¥ä»¶)SDKï¼åè°æ¥å£\n\n\n## åè½è¯´æ\n\nç¨æ¥æ¥æ¶ä¼ä¸ç¬¬ä¸æ¹åºç¨å¥ä»¶åéè¿æ¥çåè°æ¶æ¯ã\n\n## å®è£æ¹æ³\n\n```sh\n$ npm install wechat-corp-service-callback\n```\n\n## ä½¿ç¨æ¹æ³\n\n### åæ\n\né¦åï¼ä½ è¦æä¸ä¸ªä¼ä¸å·ã\nç¶åï¼ä½ è¦ç³è¯·æä¸ºç¬¬ä¸æ¹ä¼ä¸å¥ä»¶çä¾åºåã\næ¥ä¸æ¥æå¯ä»¥åå»ºå¥ä»¶ï¼å¹¶ä¸è®¾ç½®å¥ä»¶åºç¨ã\n\n### ç¨æ³\n\nå¶ä¸­çtokenï¼encodingAESKeyï¼suite_idå¯ä»¥å¨å¥ä»¶çä¿¡æ¯éç½®çé¢è·åã\n\n```js\nvar wechat_cs = require('wechat-corp-service-callback');\n\nvar app_suite = function(req, res, next) {\n    var _config = {\n        token: sc.token,\n        encodingAESKey: sc.encodingAESKey,\n        suiteid: sc.suite_id,\n    };\n    var _route = function(message, req, res, next) {\n        \n        if (message.InfoType == 'suite_ticket') { //å¾®ä¿¡æå¡å¨åè¿æ¥çç¥¨ï¼æ¯10åéåä¸æ¬¡\n            //æ´æ°å°æ°æ®åº\n            var suite_ticket = message.SuiteTicket;\n            var suite_ticket_tm = new Date(parseInt(message.TimeStamp) * 1000);\n            //å°ææ°çticketæ¾å°æ°æ®åºä¸­, è°ç¨ç¨æ·èªå·±å®ä¹ç save_ticket(callback) æ¹æ³ã\n             save_ticket(function(err, ret) {\n                res.reply('success');\n            });\n        } else if (message.InfoType == 'change_auth') { //åæ´ææçéç¥\n            //æ´æ°å°æ°æ®åº\n            res.reply('success');\n\n        } else if (message.InfoType == 'cancel_auth') { //åæ¶ææçéç¥\n            //æ´æ°å°æ°æ®åº\n            res.reply('success');\n        } else {\n            res.reply('success');\n        };\n    }\n    if (req.method == 'POST') {\n        wechat_cs(_config, _route)(req, res, next);\n    } else if (req.method == 'GET') {\n        res.send('è¿ä¸ªæ¥å£ä¸éåGET');\n    };\n}\n\napp.get(__base_path + '/app_suite_callback', app_suite);\napp.post(__base_path + '/app_suite_callback', app_suite);\n```\n\n## ç¸å³ææ¡£\n- [å¾®ä¿¡ä¼ä¸å·ï¼ç¬¬ä¸æ¹åºç¨ææ](http://qydev.weixin.qq.com/wiki/index.php?title=%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%94%E7%94%A8%E6%8E%88%E6%9D%83)\n\n\n## License\nThe MIT license.\n\n## äº¤æµç¾¤\nQQç¾¤ï¼157964097ï¼ä½¿ç¨çé®ï¼å¼åï¼è´¡ç®ä»£ç è¯·å ç¾¤ã\n\n## æè°¢\næè°¢ä»¥ä¸è´¡ç®èï¼\n\n\n## æèµ \nå¦ææ¨è§å¾Wechatä¼ä¸å·çæ¬å¯¹æ¨æå¸®å©ï¼æ¬¢è¿è¯·ä½èä¸æ¯åå¡\n\n![æèµ wechat](https://cloud.githubusercontent.com/assets/327019/2941591/2b9e5e58-d9a7-11e3-9e80-c25aba0a48a1.png)\n","whats-goin-on":"# whats-goin-on\n\n[![Build Status](https://travis-ci.org/hamishdickson/whats-goin-on.svg?branch=master)](https://travis-ci.org/hamishdickson/whats-goin-on)\n\nThis is a command line tool to find out what public activity those you follow have made on github.\n\n### To install\n\n_Requires [Node.js](http://www.nodejs.org)_\n```bash\n$ npm install -g whats-goin-on\n```\n\n### To use\n\n```bash\n# by default this will return up to 10 lines\n$ whats-goin-on [githubusername]\n# you can increase the number of lines with -n, for example this will return 4 lines\n$ whats-goin-on [githubusername] -n 4\n# show commits with -c\n$ whats-goin-on [githubusername] -c\n```\n\n### Example output\n```\n   w  3 hours ago  aUser is now watching interestingUser/repo\n\n   -< 9 hours ago  iLikeBuildingOnCode forked anotherUser/repo2\n\n   +  3 days ago   followMe created new repo followMe/imNeedy\n```\n\n**Options**\n- '-n number' returns the last _number_ of items\n\n### Thanks\n\nWhile this does something totally different, I came up with this idea after seeing [jlord's](https://github.com/jlord) gardening repo. Check it out.\n","widgets-for-react-web":"# Widgets for React Native (web)\n\nThe web counterpart to [Widgets for React Native](https://www.npmjs.com/package/widgets-for-react-native) based on the original [Widgets for React](https://www.npmjs.com/package/widgets-for-react) package. This package was released due to the original library exposing browser specific types in its public api.\n\n> Use the [Widgets for React](https://www.npmjs.com/package/widgets-for-react) library when working on a web only project.\n","wiki-plugin-force":"# Federated Wiki - Force Plugin\n\nThe Force plugin renders nodes and links from a Data item as a graph with dots and arcs automatically positioned by a force relaxation algorithm built into the d3.js visualization package.\n","winderbaum-okcupidjs":"OKCupidjs\n=========\nAutomate your OKCupid Activity. This is an API Wrapper for OkCupid App, allowing you to automate processes and collect data for further analysis.\n\n\nInstallation\n===========\n`npm install --save okcupidjs`\n\n\nUsage\n=====\n\nRequire and Instantiate OKCupidjs\n```\nvar OKCupid = require('okcupidjs')\n\nvar okc = new OKCupid()\n```\n\nLibrary Method Conventions\n==========================\nNOTE:\nAll methods are Asynchronous, and will return a standard `(err, res, body)` params to your callback. \nBody will already be json parsed into a json object for easy handling.\n\n\nMethods\n=======\n\n---\n`.login(username, password, callback)`\n\nCall this first to authenticate before calling other methods.\n\nTakes a username and password, the same ones you use to login on the okc website.\n\nUpon success, response will automatically store a cookie for subsequent requests.\n\n---\n`.getQuickmatch(callback)`\n\nThis is the method you want to call first. \nIt gets you a new user in the area. Json body will contain target_userid and username for yoou to call `.rate`, `.visitUser`, `.getUserProfile`.\n\n*Username is obtained via `body.sn`*\n\n*Target_userid is obtained via `body.tuid`*\n\n---\n`.visitUser(username, callback)`\n\nTakes a username. This visit method will emulate you actually visiting the user via browser. \n\n*Will register on the user's visitors list,* so they will know you visited them.\n\n\n`.rate(target_userid, score, callback)`\n\nTakes a user_id and a score rating integer (1-5). This is equivalent to the 1-5 star rating.\n\n---\n`.getUserProfile(username, callback)`\n\nReturns a json of the user profile. Contains all the information as you would see if you visited the user's profile via browser. This will not register your name under the user's \"visitor\" list.\n\n---\n`.getVisitors(callback)`\n\nReturns a list of your \"stalkers\" who have visited you.\n\n\nCollaboration\n=============\nFeel free to send suggestions, ask questinos, or report issues via the issues board.\nPull requests and feature enhancements are very welcome.\n\nCredits\n-------\nCopyright &copy; 2014 [Hung Tran](http://hungtran.co)\nFor reference, I wrote a small piece on OKCupid, online dating, and data privacy here:\n[http://hungtran.co/online-dating-and-personal-data-discovering-okcupids-api/](http://hungtran.co/online-dating-and-personal-data-discovering-okcupids-api/)\n\nReleased under the MIT License, which can be found in the repository in `LICENSE.txt`.","windows-1256":"# windows-1256 [![Build status](https://travis-ci.org/mathiasbynens/windows-1256.svg?branch=master)](https://travis-ci.org/mathiasbynens/windows-1256) [![Code coverage status](https://coveralls.io/repos/mathiasbynens/windows-1256/badge.svg)](https://coveralls.io/r/mathiasbynens/windows-1256) [![Dependency status](https://gemnasium.com/mathiasbynens/windows-1256.svg)](https://gemnasium.com/mathiasbynens/windows-1256)\n\n_windows-1256_ is a robust JavaScript implementation of [the windows-1256 character encoding as defined by the Encoding Standard](https://encoding.spec.whatwg.org/#windows-1256).\n\nThis encoding is known under the following names: cp1256, windows-1256, and x-cp1256.\n\n## Installation\n\nVia [npm](https://www.npmjs.com/):\n\n```bash\nnpm install windows-1256\n```\n\nIn a browser:\n\n```html\n<script src=\"windows-1256.js\"></script>\n```\n\nIn [Node.js](https://nodejs.org/), [io.js](https://iojs.org/), [Narwhal](http://narwhaljs.org/), and [RingoJS](http://ringojs.org/):\n\n```js\nvar windows1256 = require('windows-1256');\n```\n\nIn [Rhino](https://www.mozilla.org/rhino/):\n\n```js\nload('windows1256.js');\n```\n\nUsing an AMD loader like [RequireJS](http://requirejs.org/):\n\n```js\nrequire(\n  {\n    'paths': {\n      'windows-1256': 'path/to/windows-1256'\n    }\n  },\n  ['windows-1256'],\n  function(windows1256) {\n    console.log(windows1256);\n  }\n);\n```\n\n## API\n\n### `windows1256.version`\n\nA string representing the semantic version number.\n\n### `windows1256.labels`\n\nAn array of strings, each representing a [label](https://encoding.spec.whatwg.org/#label) for this encoding.\n\n### `windows1256.encode(input, options)`\n\nThis function takes a plain text string (the `input` parameter) and encodes it according to windows-1256. The return value is a âbyte stringâ, i.e. a string of which each item represents an octet as per windows-1256.\n\n```js\nconst encodedData = windows1256.encode(text);\n```\n\nThe optional `options` object and its `mode` property can be used to set the [error mode](https://encoding.spec.whatwg.org/#error-mode). For encoding, the error mode can be `'fatal'` (the default) or `'html'`.\n\n```js\nconst encodedData = windows1256.encode(text, {\n  'mode': 'html'\n});\n// If `text` contains a symbol that cannot be represented in windows-1256,\n// instead of throwing an error, it will return an HTML entity for the symbol.\n```\n\n### `windows1256.decode(input, options)`\n\nThis function takes a byte string (the `input` parameter) and decodes it according to windows-1256.\n\n```js\nconst text = windows1256.decode(encodedData);\n```\n\nThe optional `options` object and its `mode` property can be used to set the [error mode](https://encoding.spec.whatwg.org/#error-mode). For decoding, the error mode can be `'replacement'` (the default) or `'fatal'`.\n\n```js\nconst text = windows1256.decode(encodedData, {\n  'mode': 'fatal'\n});\n// If `encodedData` contains an invalid byte for the windows-1256 encoding,\n// instead of replacing it with U+FFFD in the output, an error is thrown.\n```\n\nFor decoding a buffer (e.g. from `fs.readFile`) use `buffer.toString('binary')` to get the byte string which `decode` takes.\n\n## Support\n\n_windows-1256_ is designed to work in at least Node.js v0.10.0, io.js v1.0.0, Narwhal 0.3.2, RingoJS 0.8-0.11, PhantomJS 1.9.0, Rhino 1.7RC4, as well as old and modern versions of Chrome, Firefox, Safari, Opera, Edge, and Internet Explorer.\n\n## Notes\n\n[Similar modules for other single-byte legacy encodings are available.](https://www.npmjs.com/browse/keyword/legacy-encoding)\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\n_windows-1256_ is available under the [MIT](https://mths.be/mit) license.\n","with-http-reducer":"# With HTTP Reducer\n\n[![Build Status](https://travis-ci.org/dankreiger/with-http-reducer.svg?branch=master)](https://travis-ci.org/dankreiger/with-http-reducer)\n\nHigher order reducer for generic `FETCH_BEGIN`, `FETCH_SUCCESS`, and `FETCH_FAILURE` actions\n\n---\n\n```sh\n$ npm install with-http-reducer\n```\n\n## Todo\n\n- fix module exporting so imports can be destructured\n- organize `src` so helpers are more compact and easy to use\n- more tests\n- update docs to describe functionality\n- fix the issues with module exports\n- add better typescript interfaces, enums, and types\n\n## Usage\n\n1. Add helpers to a constants file\n\n   ```js\n   // users.constants.js\n   import whr from 'with-http-reducer';\n\n   export const usersReducerName = 'users';\n\n   export const usersWithHttp = reducer =>\n     whr.withHttpReducer(reducer, usersReducerName);\n\n   export const usersHttpBegin = payload =>\n     whr.httpBegin(usersReducerName, payload);\n   export const usersHttpFailure = payload =>\n     whr.httpFailure(usersReducerName, payload);\n   export const usersHttpSuccess = payload =>\n     whr.httpSuccess(usersReducerName, payload);\n   ```\n\n2. Add in higher order reducer:\n\n   ```js\n   import { usersWithHttp } from './users.constants';\n\n   const users = (state = { current: null }, { type, payload }) => {\n     switch (type) {\n       // any other case statements\n       case 'SET_CURRENT_USER':\n         return { ...state, current: payload };\n       default:\n         return state;\n     }\n   };\n\n   export default usersWithHttp(users);\n   ```\n\n3. Use other helpers where you need them\n\n   ```js\n   // components\n   import React, { useEffect } from 'react';\n   import { usersHttpBegin, selectUsersLoading } from './users.constants';\n   import { useSelector, useDispatch } from 'react-redux';\n\n   export default () => {\n     const dispatch = useDispatch();\n     const loading = useSelector(selectUsersLoading);\n     const httpError = useSelector(selectUsersHttpError);\n     useEffect(() => {\n       dispatch(usersHttpBegin());\n     }, [dispatch]);\n\n     if (httpError) {\n       // show error boundary\n       throw new Error(httpError.message);\n     }\n     if (loading) {\n       return <Spinner />;\n     }\n     return <div>content</div>;\n   };\n   ```\n\n   ```js\n   // thunks\n   import { normalize } from 'normalizr';\n   import {\n     usersHttpBegin,\n     usersHttpSuccess,\n     usersHttpFailure,\n     usersReducerName\n   } from './users.constants';\n\n   function fetchUsers() {\n     return async dispatch => {\n       dispatch(usersHttpBegin());\n       try {\n         const res = await fetch(`someendpoint/users`);\n         const users = await res.json();\n         const usersDictionary = normalize(users, usersSchema);\n         dispatch(\n           usersHttpSuccess({\n             byId: usersDictionary.entities[usersReducerName],\n             allIds: usersDictionary.result\n           })\n         );\n       } catch (err) {\n         dispatch(usersHttpFailure({ err }));\n       }\n     };\n   }\n   ```\n\n   ```js\n   // epics\n   import { normalize } from 'normalizr';\n   import { switchMap, map, catchError } from 'rxjs/operators';\n   import { ajax } from 'rxjs/ajax';\n   import { ofType } from 'redux-observable';\n   import {\n     usersHttpBegin,\n     usersHttpSuccess,\n     usersHttpFailure,\n     usersReducerName\n   } from './users.constants';\n   import { usersSchema } from './users.schema';\n   import { of } from 'rxjs';\n\n   export function fetchUsersEpic(action$) {\n     return action$.pipe(\n       ofType(usersHttpBegin().type),\n       switchMap(() => {\n         return ajax.getJSON(`someendpoint/users`).pipe(\n           map(users => normalize(users, usersSchema)),\n           map(({ entities, result }) =>\n             usersHttpSuccess({\n               byId: entities[usersReducerName],\n               allIds: result\n             })\n           ),\n           catchError(err => of(usersHttpFailure({ err })))\n         );\n       })\n     );\n   }\n   ```\n\n   ```js\n   // sagas\n   import { normalize } from 'normalizr';\n   import { call, put, takeLatest } from 'redux-saga/effects';\n   import {\n     usersHttpBegin,\n     usersHttpSuccess,\n     usersHttpFailure,\n     usersReducerName\n   } from './users.constants';\n   const api = url => fetch(url).then(res => res.json());\n\n   function* handleFetchUsersBeginAsync() {\n     try {\n       const users = yield call(api, `someendpoint/users`);\n       const usersDictionary = yield normalize(users, usersSchema);\n       yield put(\n         usersHttpSuccess({\n           byId: usersDictionary.entities[usersReducerName],\n           allIds: usersDictionary.result\n         })\n       );\n     } catch (err) {\n       put(usersHttpFailure({ err }));\n     }\n   }\n\n   export function* watchFetchUsersBegin() {\n     yield takeLatest(usersHttpBegin().type, handleFetchUsersBeginAsync);\n   }\n   ```\n","wqProj-cli":"\nnpm install '<template-name> [project-name]'\neg:\nnpm install  React projname\nç®ååªæReactæ¨¡æ¿","ws-engine-request":"# WebSocket Engine Request\n\nWhen REST endpoint is hit connect to engine/worker server with a WebSocket connection.\n\n[![CircleCI](https://circleci.com/gh/kgi-corporation/node-ws-engine-request.svg?style=shield)](https://circleci.com/gh/kgi-corporation/node-ws-engine-request)\n[![npm version](https://badge.fury.io/js/ws-engine-request.svg)](https://badge.fury.io/js/ws-engine-request)\n\n## Install\n\n```\nnpm install ws-engine-request --save\n```\n\n## Development\n\n```\nnpm run-script build\n```\n\n## Examples\n\n### Single Task Server Example\n\n```javascript\n#!/usr/bin/env node\n\n'use strict';\n\nvar wer = require('ws-engine-request');\n\nwer.server({\n    port: 5000\n}, (messageData, callback) => {\n    let error = null;\n    let data = {\n        id: 1,\n        title: 'A Random Title'\n    };\n    let message = null;\n    callback(error, data, message);\n});\n```\n\n```\nkgilbert-mac:ws-engine-request kgilbert$ node example/engine/engineWithOneTask.js \nThu Dec 01 2016 10:08:49 GMT-0600 (CST) - WebSocket connection closed\nThu Dec 01 2016 10:08:53 GMT-0600 (CST) - WebSocket connection closed\nThu Dec 01 2016 10:08:54 GMT-0600 (CST) - WebSocket connection closed\n```\n\n### Restify Example\n\n```javascript\n#!/usr/bin/env node\n\n'use strict';\n\nvar restify = require('restify');\nvar wer = require('ws-engine-request');\n\nlet server = restify.createServer({name: 'Restify Example - WebSocket Engine Connection'});\n\nserver.use(restify.acceptParser(server.acceptable));\nserver.use(restify.queryParser());\nserver.use(restify.bodyParser());\n\nserver.get('/engine', wer.request('ws://localhost:5000', null, null), wer.format);\n\nserver.listen(8080, () => {\n    console.log('%s listening at %s', server.name, server.url);\n});\n```\n\n```\nkgilbert-mac:ws-engine-request kgilbert$ node example/api/restify.js \nRestify Example - WebSocket Engine Connection listening at http://[::]:8080\nThu Dec 01 2016 10:08:49 GMT-0600 (CST) - WebSocket connection closed\nThu Dec 01 2016 10:08:53 GMT-0600 (CST) - WebSocket connection closed\nThu Dec 01 2016 10:08:54 GMT-0600 (CST) - WebSocket connection closed\n```\n\n## Change Log\n\n```\n0.2.0\n- Initial public release.\n```\n\n## License\n\nSee LICENSE.md (MIT)\n","wywordcloud":"## è¯´æ\n* åºäº js2wordcloud, wordcloud2 è¿è¡ä¿®æ¹æ¥æ»¡è¶³ é¡¹ç®éæ±, è¿ä¸æ­¥ä½¿ç¨å¯ä»¥ äºè§£ js2wordcloud, wordcloud2\n* æ·»å  å¾å½¢èæ¯ isShowBackShape æ§å¶æ¯å¦æ¾ç¤ºå¾å½¢èæ¯\n* è§£å³ æå­åå¾å½¢(è¯·ä½¿ç¨2åå¾)ä¸æ¸æ°é®é¢  div(åå«canvasç¶ç±»ï¼è®¾ç½®zoom:0.5)\n* ç±»ä¼¼nuxtjs å·¥ç¨ä¸­ å¼ç¨å¾ç ç¨ require ä¸ç¶è·¯å¾ä¼ç¨é®é¢ ä¾å¦ï¼imageShape: require('~/static/womanIcon.png')\n* ä¸æ¯é»è²çèæ¯ ç¨ imageShapeColor , éè¦imageShapeColor å  imageShape å½¢ç¶ä¸æ ·ï¼ imageShape å¿ä¼ (éè¦èæ¯çæåµ)\n\n\n## Installation\n\n\n* npmå®è£ï¼\n\n```bash\nnpm install wywordcloud --save\n```\n\n## Usage\n ```html\n  <div style=\"zoom:0.5\" id=\"container\"></div>\n ```\n\n```javascript\nimport wywordcloud from 'wywordcloud';\nvar wc = new wywordcloud(document.getElementById('container'))\nwc.setOption({\n    tooltip: {\n        show: true\n    },\n    list: [['è°ç¬é£ç', 80], ['è°ç¬é£ç', 80], ['è°ç¬é£ç', 70], ['è°ç¬é£ç', 70], ['è°ç¬é£ç', 60], ['è°ç¬é£ç', 60]],\n    color: '#15a4fa'\n})\n```\n\n## Features\n\n* æ¯ætooltipãåæ¬tooltipçå¼å³åæ°æ®æ ¼å¼åformatterï¼\n* æ¯æshowLoadingåhideLoadingå è½½æ°æ®loadingï¼\n* æ¯æresizeï¼\n* å½è¯äºæ°å¼ç¸å·®è¿å¤§æ¶ï¼å¯¹å­ä½å¤§å°èå´è¿è¡çº¦æï¼\n* æ´å¥½å°æ¯æå¾çå½¢ç¶ã\n\n\n## Document\n\n### å¸¸ç¨åæ°ï¼\n\nï¼1ï¼dataï¼è¯äºçææ°æ®ï¼åå«å·ä½è¯è¯­ä»¥åé¢çï¼\n\nï¼2ï¼sizeï¼å­ä½å¤§å°ï¼é»è®¤ä¸º1ï¼ä¸è¬æ¥è¯´è¯¥å¼è¶å°ï¼çæçå½¢ç¶è½®å»è¶ææ¾ï¼\n\nï¼3ï¼fontFamilyï¼å­ä½ï¼å¦âå¾®è½¯éé»âï¼\n\nï¼4ï¼fontWeightï¼å­ä½ç²ç»ï¼åå«ânormalâï¼âboldâä»¥åâ600âï¼ï¼\n\nï¼5ï¼colorï¼å­ä½é¢è²ï¼å¯ä»¥éæ©ârandom-darkâä»¥åârandom-lightâï¼å¶å®å°±æ¯é¢è²è²ç³»,ä¹å¯ä»¥ä½¿ç¨ åè°å½æ° å¯¹æ¯ä¸ªè¯è¯­ è¿è¡é¢è²éæ© callback(word, weight, fontSize, distance, theta)ï¼\n\nï¼6ï¼backgroundColorï¼èæ¯é¢è²ï¼æ¯æRè¯­è¨ä¸­çå¸¸ç¨é¢è²ï¼å¦âgrayâï¼âblcakâï¼ä½æ¯è¿æ¯æä¸äºæ´å å·ä½çé¢è²éæ©ï¼å¦âgray20âï¼\n\nï¼7ï¼minRontatinä¸maxRontatinï¼å­ä½æè½¬è§åº¦èå´çæå°å¼ä»¥åæå¤§å¼ï¼éå®åï¼å­ä½ä¼å¨è¯¥èå´åéæºæè½¬ï¼\n\nï¼8ï¼rotationRationï¼å­ä½æè½¬æ¯ä¾ï¼å¦è®¾å®ä¸º1ï¼åå¨é¨è¯è¯­é½ä¼åçæè½¬ï¼\n\nï¼9ï¼shapeï¼è¯äºå½¢ç¶éæ©ï¼é»è®¤æ¯âcircleâï¼å³åå½¢ãè¿å¯ä»¥éæ©âcardioidâï¼è¹æå½¢æå¿å½¢ï¼ï¼âstarâï¼æå½¢ï¼ï¼âdiamondâï¼é»ç³ï¼ï¼âtriangle-forwardâï¼ä¸è§å½¢ï¼ï¼âtriangleâï¼ä¸è§å½¢ï¼ï¼âpentagonâï¼äºè¾¹å½¢ï¼\n\n### API\n\n\n* setOption(options)\n\n    optionså¿é¡»éè¿æ­¤APIè¿è¡è®¾ç½®ï¼æè½æ¾ç¤ºè¯äº\n\n    **å¨wordcloud2.jsåoptionsåºç¡ä¸å¢å ï¼**\n\n    ```javascript\n    {\n        // ...\n        imageShape: 'https://example.com/images/shape.png',     // æä¾ä¸å¼ å¾çï¼æ ¹æ®å¶å½¢ç¶è¿è¡è¯äºæ¸²æï¼é»è®¤ä¸ºnull\n        imageShapeColor: 'https://example.com/images/shape.png',   // æä¾ä¸å¼ å¾çï¼æ ¹æ®å¶å½¢ç¶è¿è¡è¯äºæ¸²æï¼ä¸æ¯é»è²çèæ¯\n        fontSizeFactor: 0.1,                                    // å½è¯äºå¼ç¸å·®å¤ªå¤§ï¼å¯è®¾ç½®æ­¤å¼è¿å­ä½è¡å¤§å°å¾®è°ï¼é»è®¤0.1\n        maxFontSize: 60,                                        // æå¤§fontSizeï¼ç¨æ¥æ§å¶weightFactorï¼é»è®¤60\n        minFontSize: 12,                                        // æå°fontSizeï¼ç¨æ¥æ§å¶weightFactorï¼é»è®¤12\n        isShowBackShape: false,                                 // æ¯å¦æ¾ç¤ºèæ¯å¾å½¢\n        tooltip: {\n            show: true,                                         // é»è®¤ï¼false\n            backgroundColor: 'rgba(0, 0, 0, 0.701961)',         // é»è®¤ï¼'rgba(0, 0, 0, 0.701961)'\n            formatter: function(item) {                         // æ°æ®æ ¼å¼åå½æ°ï¼itemä¸ºlistçä¸é¡¹\n            }\n        },\n        noDataLoadingOption: {                                  // æ æ°æ®æç¤ºã\n            backgroundColor: '#eee',\n            text: 'ææ æ°æ®',\n            textStyle: {\n                color: '#888',\n                fontSize: 14\n            }\n        }\n        // ...\n    }\n    ```\n\n* showLoading([loadingOption])\n\n    è¿æ¸¡æ§å¶ï¼æ¾ç¤ºloadingï¼è¯»åä¸­ï¼ãå¯éã\n\n    `loadingOption`:\n\n    ```javascript\n    {\n        backgroundColor: '#eee',\n        text: 'æ­£å¨å è½½...',\n        effect: 'spin'                      // é»è®¤ï¼null, { String | Function } å¯éï¼'spin|normal'ï¼ä¹å¯ä¸ºåè°å½æ°ï¼åè°å½æ°çæHTML\n    }\n    ```\n\n* hideLoading()\n\n    éèloading\n\n* resize()\n\n    å½å®¹å¨å¤§å°ååæ¶ï¼è°ç¨æ­¤æ¹æ³è¿è¡éç»\n\n\n## Licence\n\nMIT\n\n","y-intercept":"# This is a H1\n","y-prompt":"# y-prompt\r\n\r\nA configurable terminal prompter for nodejs.\r\n\r\nInstall :\r\n\r\n```\r\nnpm install y-prompt\r\n```\r\n\r\n<br/>\r\n\r\nAsk your questions and process the result:\r\n\r\n```javascript\r\n\tconst Prompt=require('y-prompt');\r\n\t// use predefined types\r\n\tPrompt.baseTypes();\r\n\t// --- prompt your questions\r\n\tPrompt.prompter()\r\n\t// prepare your questions\r\n\t.log(datas=>'\\n--------- Start prompt ---------\\n')\r\n\t.ask('yn','response','do you say yes or no ?',{defaultValue:'n'})\r\n\t.log(datas=>'\\n--------- End prompt ('+datas.response+') ---------\\n')\r\n\t// launch the prompt\r\n\t.start()\r\n\t.then(function(datas){\r\n\t\t// process the result\r\n\t\tvar answer=['Yes','No'][datas.response?1:0];\r\n\t\tconsole.log('\\n- anwser='+answer+'\\n- data='+data);\r\n\r\n\t\t// **** if y displays :\r\n\t\t//- anwser=Yes\r\n\t\t//- data={response:true}\r\n\r\n\t\t// **** if n displays :\r\n\t\t//- anwser=No\r\n\t\t//- data={response:false}\r\n\r\n\t\tprocess.exit();\r\n\t});\r\n```\r\n\r\n<br/>\r\n\r\nA more elabored exemple can be found in **[test_prompt.js](test_prompt.js)** .<br/>\r\n\r\nLaunch demo :\r\n\r\n```\r\ncd node_modules/y-prompt\r\nnode test_prompt\r\n```\r\n\r\n<hr/>\r\n\r\n## <a name=\"tg_menu\"></a> Menu\r\n\r\n+ [Types](#tg_types).\r\n\t+ [Base types](#tg_basetypes).\r\n\t+ [Define types](#tg_deftypes).\r\n+ [Configuration](#tg_config).\r\n+ [Prompter](#tg_prompt).\r\n\t+ [Basics](#tg_basics).\r\n\t\t+ [prompter.log](#tg_log).\r\n\t\t+ [prompter.ask](#tg_ask).\r\n\t+ [Conditionnals](#tg_conditions).\r\n\t\t+ [prompter.askIf](#tg_askIf).\r\n\t\t+ [prompter.elseIf](#tg_elseIf).\r\n\t\t+ [prompter.else](#tg_else).\r\n\t+ [Loops](#tg_loops).\r\n\t\t+ [prompter.askWhile](#tg_askWhile).\r\n\t\t+ [prompter.askLoop](#tg_askLoop).\r\n\t+ [Get the result](#tg_result).\r\n\t\t+ [prompter.start](#tg_start).\r\n+ [Exemples](#tg_exemples).\r\n\t+ [base types](YPrompt.baseTypes.js).\r\n\t+ [test](test_prompt.js).\r\n\r\n<hr/>\r\n\r\n## <a name=\"tg_types\"></a> Types.\r\n\r\nThe types definitions is the root feature of 'y-prompt'. This is where you define what type of question you can ask an what kind of data you expect.<br/>\r\n\r\n<hr/>\r\n\r\n### <a name=\"tg_basetypes\"></a> Base types.\r\n\r\nOn your first uses, you may want to use 'y-prompt' [base types](YPrompt.baseTypes.js) instead before defining your owns (in this case go directly to [Make a prompter](#tg_prompt)), or you may simply use them whith yours.<br/>\r\n\r\n```javascript\r\n\t// ...\r\n\t// use predefined types\r\n\tPrompt.baseTypes();\r\n```\r\n\r\nThe file where they are defined is shortly documented on their behaviours and shows many exemples of type definitions (**[YPrompt.baseTypes.js](YPrompt.baseTypes.js)**).\r\n\r\n<hr/>\r\n\r\n### <a name=\"tg_deftypes\"></a> Define types.\r\n\r\ndefine a new type with **Prompt.addType**:\r\n\r\n```javascript\r\n\t/**\r\n\tAdd a new question type.\r\n\t@param {string} name : the type name.\r\n\t@param {function(inpt,onError,params)} check : return true if input is valid, else call onError.<br/>\r\n\t- {string} input : the current entry value<br/>\r\n\t- {function(message)} onError : Call to send an error message when the input is invalid.<br/>\r\n\t- {object} params : The parameters you may add to a quetion.<br/>\r\n\t@param {function(input,params)} transform : return the data corresponding to 'input'.\r\n\t- {string} input : the current entry value<br/>\r\n\t- {object} params : The parameters you may add to a quetion.<br/>\r\n\t@param {string} [parentType] : inherits its behaviour from a parent type if 'parentType' is defined. The parent will check and transform the data before passing it to the child method\r\n\t@param {any} [defaultValue] : defines a default value. Its use is deprecated since it remove the possibility to make the answer mandatory.\r\n\t*/\r\n\tPrompt.addType(name,check,transform,parentType,defaultValue);\r\n```\r\n\r\n<br/>\r\n\r\nExemple from **[base types](YPrompt.baseTypes.js)** :\r\n\r\n```javascript\r\n\t// ...\r\n\t/**\r\n\tgets a 'y' (for Yes) or 'n' (for No) answer as a boolean\r\n\t*/\r\n\tPrompt.addType('yn',\r\n\t\tfunction(inpt,onerr,params){//check\r\n\t\t\tif(['n','y'].indexOf(inpt.toLowerCase())>-1){\r\n\t\t\t\treturn 1;\r\n\t\t\t}else{\r\n\t\t\t\tonerr(`'${inpt}' is not a valid answer, accepted are 'y' for yes or 'n' for no.`);\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\tfunction(inpt){return !!(['n','y'].indexOf(inpt.toLowerCase()));}//transform gets boolean\r\n\t);\r\n```\r\n\r\n<hr/>\r\n\r\n## <a name=\"tg_config\"></a>Configuration.\r\n\r\nYou can change the appearance of the prompt by changing the configuration styles for \t\t\t**varName,type,value,defaultValue,error**.\r\n\r\n```javascript\r\n\t// ...\r\n\tPrompt.config.style.varName='green';\r\n```\r\n\r\n<hr/>\r\n\r\n## <a name=\"tg_prompt\"></a>Make a prompter.\r\n\r\nThe first step is to create a new prompter.\r\n\r\n```javascript\r\n\t// ... dont forget to init types before\r\n\t// ...\r\n\tvar prompter=Prompt.prompter();\r\n\r\n```\r\n\r\nUse the prompter to prepare your questions and get the result.<br/>\r\nNB: All the prompter actions ar chainables except 'start'.\r\n\r\n+ [Basics](#tg_basics).\r\n\t+ [prompter.log](#tg_log).\r\n\t+ [prompter.ask](#tg_ask).\r\n+ [Conditionnals](#tg_conditions).\r\n\t+ [prompter.askIf](#tg_askIf).\r\n\t+ [prompter.elseIf](#tg_elseIf).\r\n\t+ [prompter.else](#tg_else).\r\n+ [Loops](#tg_loops).\r\n\t+ [prompter.askWhile](#tg_askWhile).\r\n\t+ [prompter.askLoop](#tg_askLoop).\r\n+ [Get the result](#tg_result).\r\n\t+ [prompter.start](#tg_start).\r\n\r\n<hr/>\r\n\r\n### <a name=\"tg_basics\"></a>Prompter basics.\r\n\r\n<hr/>\r\n\r\n#### <a name=\"tg_log\"></a> prompter.log\r\n\r\nLog a message between quesions.\r\n\r\n```javascript\r\n\t/**\r\n\tLog a message between quesions.\r\n\t@param {string} message : will be logged to the console in time.\r\n\t@return {Prompter} the current prompter.\r\n\t*/\r\n\tprompter.log(message);\r\n```\r\n\r\n<hr/>\r\n\r\n#### <a name=\"tg_ask\"></a> prompter.ask\r\n\r\nAsk a question.\r\n\r\n```javascript\r\n\t/**\r\n\tAsk a question.\r\n\t@param {string} type : the name of the type used for the question.\r\n\t@param {string} varName : the name of the data property to witch the result will be assigned.\r\n\t@param {string} message : the question you want to ask.\r\n\t@param {object} [params] : specific questions parameters.<br/>\r\n\t@return {Prompter} the current prompter.\r\n\t*/\r\n\tprompter.ask(type,varName,message,params);\r\n```\r\n\r\n<hr/>\r\n\r\n### <a name=\"tg_conditions\"></a>Prompter conditionnals.\r\n\r\n<hr/>\r\n\r\n#### <a name=\"tg_askIf\"></a> prompter.askIf\r\n\r\nadds a conditionnal prompter.\r\n\r\n```javascript\r\n\t/**\r\n\tadds a conditionnal prompter.\r\n\t@param {string} varName : data property to witch the  the resulting object will be assigned.<br/>\r\n\tIf not a string, resulting object properties are directky applied to the parent object.\r\n\t@param {function(datas,localDatas)} condition : return true when condition ok.<br/>\r\n\t- {object} datas : The current global datas.<br/>\r\n\t- {object} localDatas : The current prompter datas.<br/>\r\n\t@param {function(prompter,datas,localDatas)} collector : calls for a new collector if condition ok.<br/>\r\n\t- {Prompter} prompter : the prompter used to collect new questions.<br/>\r\n\t- {object} datas : The current global datas.<br/>\r\n\t- {object} localDatas : The local prompter datas.<br/>\r\n\t@return {Prompter} the current prompter.\r\n\t*/\r\n\tprompter.askIf(varName,condition,collector);\r\n```\r\n\r\n<hr/>\r\n\r\n#### <a name=\"tg_elseIf\"></a> prompter.elseIf\r\n\r\nadds a conditionnal prompter if preceeding conditions are not ok.\r\n\r\n```javascript\r\n\t/**\r\n\tadds a conditionnal prompter if preceeding conditions are not ok.<br/>\r\n\tcan be only called after askIf or elseIf.\r\n\t@param {string} varName : data property to witch the  the resulting object will be assigned.<br/>\r\n\tIf not a string, resulting object properties are directky applied to the parent object.\r\n\t@param {function(datas,localDatas)} condition : return true when condition ok.<br/>\r\n\t- {object} datas : The current global datas.<br/>\r\n\t- {object} localDatas : The current prompter datas.<br/>\r\n\t@param {function(prompter,datas,localDatas)} collector : calls for a new collector if condition ok.<br/>\r\n\t- {Prompter} prompter : the prompter used to collect new questions.<br/>\r\n\t- {object} datas : The current global datas.<br/>\r\n\t- {object} localDatas : The local prompter datas.<br/>\r\n\t@return {Prompter} the current prompter.\r\n\t*/\r\n\tprompter.elseIf(varName,condition,collector);\r\n```\r\n\r\n<hr/>\r\n\r\n#### <a name=\"tg_else\"></a> prompter.else\r\n\r\nadds a prompter if preceeding conditions are not ok.\r\n\r\n```javascript\r\n\t/**\r\n\tadds a prompter if preceeding conditions are not ok.<br/>\r\n\tcan be only called after askIf or elseIf.\r\n\t@param {string} varName : data property to witch the  the resulting object will be assigned.<br/>\r\n\tIf not a string, resulting object properties are directky applied to the parent object.\r\n\t@param {function(prompter,datas,localDatas)} collector : calls for a new collector if condition ok.<br/>\r\n\t- {Prompter} prompter : the prompter used to collect new questions.<br/>\r\n\t- {object} datas : The current global datas.<br/>\r\n\t- {object} localDatas : The local prompter datas.<br/>\r\n\t@return {Prompter} the current prompter.\r\n\t*/\r\n\tprompter.else(varName,collector);\r\n```\r\n\r\n<hr/>\r\n\r\n### <a name=\"tg_loops\"></a>Prompter loops.\r\n\r\n<hr/>\r\n\r\n#### <a name=\"tg_askWhile\"></a> prompter.askWhile\r\n\r\nCalls for prompters while condition is ok.\r\n\r\n```javascript\r\n\t/**\r\n\tCalls for collector while condition is ok. Creates an array of objects.<br/>\r\n\t@param {string} varName : data property to witch the  the resulting array will be assigned.<br/>\r\n\t@param {function(datas,localDatas)} condition : return true when condition ok.<br/>\r\n\t- {object} datas : The current global datas.<br/>\r\n\t- {object} localDatas : The current prompter datas.<br/>\r\n\t@param {function(prompter,datas,localDatas)} collector : calls for a new collector eatch time condition ok.<br/>\r\n\t- {Prompter} prompter : the prompter used to collect new questions.<br/>\r\n\t- {object} datas : The current global datas.<br/>\r\n\t- {object} localDatas : The local prompter datas.<br/>\r\n\t@return {Prompter} the current prompter.\r\n\t*/\r\n\tprompter.askWhile(varName,condition,collector);\r\n```\r\n\r\n<hr/>\r\n\r\n#### <a name=\"tg_askLoop\"></a> prompter.askLoop\r\n\r\nCalls for prompters a number of times.\r\n\r\n```javascript\r\n/**\r\n\tCalls for collector 'nbLoop' times. Creates an array of objects.<br/>\r\n\t@param {string} varName : data property to witch the  the resulting array will be assigned.<br/>\r\n\t@param {number>0|function} nbLoop : is or returns the size of the resulting array.<br/>\r\n\t@param {function(prompter,datas,localDatas)} collector : calls for a new collector 'nbLoop' times.<br/>\r\n\t- {Prompter} prompter : the prompter used to collect new questions.<br/>\r\n\t- {object} datas : The current global datas.<br/>\r\n\t- {object} localDatas : The local prompter datas.<br/>\r\n\t@return {Prompter} the current prompter.\r\n\t*/\r\n\tprompter.askLoop(varName,nbLoop,collector);\r\n```\r\n\r\n<hr/>\r\n\r\n### <a name=\"tg_result\"></a>Get the result.\r\n\r\n<hr/>\r\n\r\n#### <a name=\"tg_start\"></a> prompter.start\r\n\r\n```javascript\r\n\t/**\r\n\tStarts the prompt session.<br/>\r\n\tDoes not return a prompter. 'start' is the final action, call it only when all questions are prepared.\r\n\t@return {Promise} a promise flushed with the resulting datas when all questions are answered.\r\n\t*/\r\n\tprompter.start().then(datas=>{/* proceed result */})\r\n```\r\n\r\n<hr/>\r\n\r\n### <a name=\"tg_exemples\"></a> Exemples.\r\n\r\n+ Exemples of type definitions can be found in **[YPrompt.baseTypes.js](YPrompt.baseTypes.js)**.\r\n+ Exemple of a prompt session can be found in **[test_prompt.js](test_prompt.js)**.\r\n\r\n\r\n<hr/>\r\n\r\n<br/>\r\n","yamoo9-unique-id":"# UniqueID ëª¨ë\n\n### ì¬ì©ë²\n```js\nvar uniqueID = require('yamoo9-unique-id');\n\nuniqueID(); // í¨ì í¸ì¶íë©´ ê³ ì  ID ì½ëê° ì¶ë ¥\n```","ybm":"# ybm\n<!--\n[![NPM version](https://badge.fury.io/js/ybm.svg)](https://npmjs.org/package/ybm)\n[![GitHub version][git-tag-image]][project-url]\n[![Build Status][travis-image]][travis-url]\n[![Dependency Status][daviddm-url]][daviddm-image]\n[![Code Climate][climate-image]][climate-url]\n[![Coverage Status][coveralls-image]][coveralls-url]\n-->\n\nYour benchmark.\n\n\n## CLI\n\n### Install\n\n```bash\nnpm install --global ybm\n```\n\n### Usage\n\n\n* Watch\n\n  ```bash\n  ybm --watch some-benchmark-file\n  ```\n\n  When `some-benchmark-file` updated, will trigger re-benchmark this file.\n\n\n* Cycle\n\n  ```bash\n  ybm --cycle 3 some-benchmark-file\n  ```\n\n  Run `some-benchmark-file` three times.\n\n* NVM - __switch node version to run your benchmark file__  \n\n  ```bash\n  ybm --nvm \"iojs-v1.0.4, iojs-v2.0.0\" some-benchmark-file\n  ```\n\n  Run `some-benchmark-file` on `iojs-v1.0.4` and `iojs-v2.0.0`\n\n\n__Using `ybm -h` to see more help.__\n\n\n## NODE\n\n\n### Install\n```bash\nnpm install --save ybm\n```\n\n\n### Usage\n\n* Single test:\n\n  ```js\n  ybm(function() {\n    // do task\n  });\n  ```\n\n* Async test:\n\n  ```js\n  ybm(function(done) {\n    setTimeout(done, 100);\n  });\n  ```\n\n* Suite tests:\n\n  ```js\n  ybm.suite({\n    'test_1': function() { /* do task */ },\n    'test_2': function() { /* do task */ },\n    'test_3': function() { /* do task */ }\n  });  \n  ```\n\n* Cycle suite tests:\n\n  ```js\n  ybm.cycle(5, {\n    'test_1': function() { /* do task */ },\n    'test_2': function() { /* do task */ },\n    'test_3': function() { /* do task */ }\n  });\n  ```  \n\n* Matrix suite tests:\n\n  ```js\n  var matrix = [\n    row1,\n    row2,\n    //...\n  ];\n  \n  ybm.matrix(matrix, function(row) {\n    // create suite according row\n    return suite;\n  })\n  ```\n  \n\n* More Examples:\n\n  - [Single benchmark test](./examples/single.js)\n  - [Single async benchmark test](./examples/single-async.js)\n  - [Array suite benchmark tests](./examples/suite-array.js)\n  - [Array suite async benchmark tests](./examples/suite-array-async.js)\n  - [Object suite benchmark tests](./examples/suite-object.js)\n  - [Cycle suite benchmark tests](./examples/cycle-suite.js)\n  - [Matrix suite benchmark tests](./examples/matrix-suite.js)\n\n\n## TODO\n\n- [x] Add `ybm.cycle` - 2015/06/23\n- [x] Support `nvm` to switch node test - 2015/06/24\n\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [gulp](http://gulpjs.com/).\n\n\n## Thanks\n\n* [benchmark](https://github.com/bestiejs/benchmark.js) - A benchmarking library that works on nearly all JavaScript platforms, supports high-resolution timers, and returns statistically significant results.\n\n\n## History\n\n[CHANGELOG](CHANGELOG.md)\n\n\n## License\n\nCopyright (c) 2015 Zhonglei Qiu. Licensed under the MIT license.\n\n\n\n[project-url]: https://github.com/qiu8310/ybm\n[git-tag-image]: http://img.shields.io/github/tag/qiu8310/ybm.svg\n[climate-url]: https://codeclimate.com/github/qiu8310/ybm\n[climate-image]: https://codeclimate.com/github/qiu8310/ybm/badges/gpa.svg\n[travis-url]: https://travis-ci.org/qiu8310/ybm\n[travis-image]: https://travis-ci.org/qiu8310/ybm.svg?branch=master\n[daviddm-url]: https://david-dm.org/qiu8310/ybm.svg?theme=shields.io\n[daviddm-image]: https://david-dm.org/qiu8310/ybm\n[coveralls-url]: https://coveralls.io/r/qiu8310/ybm\n[coveralls-image]: https://coveralls.io/repos/qiu8310/ybm/badge.png\n\n","yoko-cli":"# Yoko CLI\n\nWIP\n","yrdLmz":"#æµè¯å°å·¥å·","ysb-grunt-protractor-runner":"# ysb-grunt-protractor-runner\nYSB Protractor Runner\n","yuanian-common-echartable":"# react-component-starter\r\nReact ç»ä»¶èææ¶ï¼å¯ä»¥è°è¯ãæåãåå¸åä¸ª React ç»ä»¶ã\r\n\r\n## åå§åèææ¶\r\n\r\næ³ä½¿ç¨æ¬èææ¶ï¼åªéè¦ï¼\r\n\r\n```sh\r\ngit clone https://github.com/caihuascript/react-simple-dist.git component_name\r\n```\r\n\r\n## è°è¯\r\n\r\nè°è¯æçæ¯æ¬å°è°è¯ React ç»ä»¶ï¼åªéè¦ï¼\r\n\r\n```\r\nnpm start\r\n```\r\n\r\nç¶åå¨å¼¹åºçé¡µé¢ä¸­ç¹å» demo æä»¶å¤¹å³å¯ï¼\r\n\r\n## æ³¨æ\r\n\r\n   å¦ææ æ³æ­£å¸¸å¯å¨å¯è½æ¯nodeçæ¬é®é¢\r\n   åæ¢host\r\n   \r\n   æ¯æ¬å°åéé®é¢å¯¼è´ï¼æå¼hostï¼\r\n   127.0.0.1 localhost\r\n\r\n## æå\r\n\r\næåæçæ¯å° React ç»ä»¶ç¼è¯æåæ js å css æä»¶ï¼æ¹ä¾¿å¶ä»ç»ä»¶è°ç¨ï¼åªéè¦ï¼\r\n\r\n```sh\r\nnpm run build\r\n```\r\n\r\n## åå¸\r\n\r\nåå¸æçæ¯å° React ç»ä»¶åå¸å° npm ä»åºä¸­ï¼é¦åæ§è¡æ­¤å½ä»¤éæ°æå®ä½ ç npm åç name å version ç­ä¿¡æ¯ï¼\r\n\r\n```sh\r\nnpm init\r\n```\r\n\r\nç¶åï¼ç»å½ npmï¼\r\n\r\n```sh\r\nnpm login\r\n```\r\n\r\næåï¼åå¸ï¼\r\n\r\n```sh\r\nnpm publish\r\n```\r\n\r\n## è°ç¨ React ç»ä»¶\r\n\r\nåå¸å®æåï¼å°±å¯ä»¥å¨è°ç¨äºã\r\n\r\né¦åï¼å®è£ä½ åå¸ç React ç»ä»¶\r\n\r\n```sh\r\nnpm i react_component --save\r\n```\r\n\r\nç¶åï¼å¨ä»£ç ä¸­è°ç¨ï¼\r\n\r\n```js\r\nimport ReactComponent from 'react_component';\r\n```\r\nå°±å¯ä»¥ä½¿ç¨äºï¼","zprint-clj":"<img src=\"logo.png\" width=128 />\n\n[![CircleCI](https://circleci.com/gh/clj-commons/zprint-clj.svg?style=svg)](https://circleci.com/gh/clj-commons/zprint-clj)\n\n_Node.js wrapper for [ZPrint](https://github.com/kkinnear/zprint) Clojure source code formatter_\n\n## Usage\n\n### CLI\n\n#### Install\n```\nnpm i -g zprint-clj\n```\n\n#### Format and write back\n```\nzprint-clj -i \"./src/**/*.{clj,cljs,cljc,edn}\" -o ./\n```\n\n#### Check formatting without writing (useful for CI)\n```\nzprint-clj --check \"./src/**/*.{clj,cljs,cljc,edn}\"\n```\n\n### API\n\n```\nnpm i zprint-clj\n```\n\n```js\nconst printFile = require('zprint-clj');\nconst outputText = format(inputText, inputFilePath, opts);\n```\n\n### Options\n\n* `isHangEnabled` `true|false` â enable hang mode (disabled by default), slows down formatting, but results in better formatted output\n\n*Difference between output when Hang mode is on and off*\n\n```diff\ndiff --git a/hang.clj b/nohang.clj\nindex 907120f..965fdfa 100644\n--- a/hang.clj\n+++ b/nohang.clj\n@@ -1,6 +1,7 @@\n (ns zprint-clj.core\n-  (:require [zprint.core :as zprint]\n-            [goog.object :as gobj]))\n+  (:require\n+    [zprint.core :as zprint]\n+    [goog.object :as gobj]))\n@@ -15,8 +16,9 @@\n\n (defn- make-cfg\n   [opts]\n-  (cond (false? (gobj/get opts \"isHangEnabled\")) no-hang\n-        :else {}))\n+  (cond\n+    (false? (gobj/get opts \"isHangEnabled\")) no-hang\n+    :else {}))\n```\n\n### Advanced Configuration\n\nYou can configure `zprint-clj` with a `.zprintrc` file. The `.zprintrc` is written in EDN format.\n\nYour `.zprintrc` file will be resolved if it is found in one of two locations:\n\n1.  The current directory where the zprint-clj process was initialized\n2.  The global `HOME` directory\n\nIf none found, we fall back on `zprint-clj` [default settings](https://github.com/kkinnear/zprint#quick-start).\n\n## Building\n\n**production**\n\n```\nclojure scripts/build.clj\n```\n\n**debug**\n\n```\nclojure scripts/build_debug.clj\n```\n\n## Local Development\n\nThe following guide outlines how to locally develop `zprint-clj`. Please make sure you have the [clj cli tool installed](https://clojure.org/guides/deps_and_cli).\n\n- Install `zprint-clj` dependencies\n\n  ```bash\n  npm install\n  ```\n\n- Make your your code changes in the `src` directory\n\n- Compile your changes\n\n  ```bash\n  clojure scripts/build_debug.clj\n  ```\n\n- Update `js-src/index` to look like this\n\n  ```bash\n  const zp = require(\"../out/main-debug\").zprint_clj.core;\n  ```\n\n  > This tells zprint-clj to use the debug version\n\n- Create a test Clojure file with some test code you want to see formatted\n\n- Open the test file in your editor of choice\n\n- Run zprint-clj against your test file\n\n  ```clojure\n  js-src/cli.js -i <your-filename-here> -o <your-filename-here>\n  ```\n\n  > If you are running in a different directory you will have to update above path to `js-src/cli.js`. The reason we run this instead of `main-debug` is because `cli`, or `index`, act as the entry points for JS for this library.\n\n## Editor plugins\n\n- [Atom](https://github.com/roman01la/zprint-atom)\n\n## License\n\nMIT\n"}